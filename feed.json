{
    "version": "https://jsonfeed.org/version/1",
    "title": "鑫酱",
    "subtitle": "笔记本",
    "icon": "https://allengx.gitee.io/images/favicon.ico",
    "description": "整天摸鱼，却妄想拯救世界的技术宅",
    "home_page_url": "https://allengx.gitee.io",
    "items": [
        {
            "id": "https://allengx.gitee.io/computer-science/study/Python%E3%80%8C%E5%B7%A5%E5%8C%A0%E3%80%8D/%E5%8D%81%E4%B8%80%E3%80%81%E9%AB%98%E6%95%88%E6%93%8D%E4%BD%9C%E6%96%87%E4%BB%B6/",
            "url": "https://allengx.gitee.io/computer-science/study/Python%E3%80%8C%E5%B7%A5%E5%8C%A0%E3%80%8D/%E5%8D%81%E4%B8%80%E3%80%81%E9%AB%98%E6%95%88%E6%93%8D%E4%BD%9C%E6%96%87%E4%BB%B6/",
            "title": "十一、高效操作文件",
            "date_published": "2020-11-12T12:04:34.000Z",
            "content_html": "<div class=\"note info\">\n<p>以下为个人学习笔记整理</p>\n</div>\n<h2 id=\"高效操作文件\"><a class=\"anchor\" href=\"#高效操作文件\">#</a> 高效操作文件📁</h2>\n<h3 id=\"使用-pathlib-模块\"><a class=\"anchor\" href=\"#使用-pathlib-模块\">#</a> 使用 pathlib 模块</h3>\n<p>正常的文件操作通常会用到 os 模块，但其实 Python 提供了一个更加高效的模块 ——pathlib</p>\n<details class=\"info\"><summary>示例</summary><div>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">#------------ bad ------------</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">import</span> os</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">import</span> os<span class=\"token punctuation\">.</span>path</pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">unify_ext_with_os_path</span><span class=\"token punctuation\">(</span>path<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token triple-quoted-string string\">\"\"\"统一目录下的 .txt 文件名后缀为 .csv</pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    \"\"\"</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token keyword\">for</span> filename <span class=\"token keyword\">in</span> os<span class=\"token punctuation\">.</span>listdir<span class=\"token punctuation\">(</span>path<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        basename<span class=\"token punctuation\">,</span> ext <span class=\"token operator\">=</span> os<span class=\"token punctuation\">.</span>path<span class=\"token punctuation\">.</span>splitext<span class=\"token punctuation\">(</span>filename<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        <span class=\"token keyword\">if</span> ext <span class=\"token operator\">==</span> <span class=\"token string\">'.txt'</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>            abs_filepath <span class=\"token operator\">=</span> os<span class=\"token punctuation\">.</span>path<span class=\"token punctuation\">.</span>join<span class=\"token punctuation\">(</span>path<span class=\"token punctuation\">,</span> filename<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>            os<span class=\"token punctuation\">.</span>rename<span class=\"token punctuation\">(</span>abs_filepath<span class=\"token punctuation\">,</span> os<span class=\"token punctuation\">.</span>path<span class=\"token punctuation\">.</span>join<span class=\"token punctuation\">(</span>path<span class=\"token punctuation\">,</span> <span class=\"token string-interpolation\"><span class=\"token string\">f'</span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>basename<span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">.csv'</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token comment\">#------------ good ------------     </span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token keyword\">from</span> pathlib <span class=\"token keyword\">import</span> Path</pre></td></tr><tr><td data-num=\"16\"></td><td><pre></pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">unify_ext_with_pathlib</span><span class=\"token punctuation\">(</span>path<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    <span class=\"token keyword\">for</span> fpath <span class=\"token keyword\">in</span> Path<span class=\"token punctuation\">(</span>path<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>glob<span class=\"token punctuation\">(</span><span class=\"token string\">'*.txt'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>        fpath<span class=\"token punctuation\">.</span>rename<span class=\"token punctuation\">(</span>fpath<span class=\"token punctuation\">.</span>with_suffix<span class=\"token punctuation\">(</span><span class=\"token string\">'.csv'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure></div></details>\n<h4 id=\"其他用法\"><a class=\"anchor\" href=\"#其他用法\">#</a> 其他用法</h4>\n<details class=\"info\"><summary>示例</summary><div>\n<ul>\n<li>路径组合</li>\n</ul>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">#------------ old ------------</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token comment\"># 😑 旧朋友：使用 os.path 模块</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token keyword\">import</span> os<span class=\"token punctuation\">.</span>path</pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token operator\">>></span><span class=\"token operator\">></span> os<span class=\"token punctuation\">.</span>path<span class=\"token punctuation\">.</span>join<span class=\"token punctuation\">(</span><span class=\"token string\">'/tmp'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'foo.txt'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token string\">'/tmp/foo.txt'</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token comment\">#------------ new ------------ </span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token comment\"># ✨ 新潮流：使用 / 运算符</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token keyword\">from</span> pathlib <span class=\"token keyword\">import</span> Path</pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token operator\">>></span><span class=\"token operator\">></span> Path<span class=\"token punctuation\">(</span><span class=\"token string\">'/tmp'</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> <span class=\"token string\">'foo.txt'</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>PosixPath<span class=\"token punctuation\">(</span><span class=\"token string\">'/tmp/foo.txt'</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><ul>\n<li>读取文件</li>\n</ul>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">#------------ old ------------</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token comment\"># 标准做法，使用 with open (...) 打开文件</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token keyword\">with</span> <span class=\"token builtin\">open</span><span class=\"token punctuation\">(</span><span class=\"token string\">'foo.txt'</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> <span class=\"token builtin\">file</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>     <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">file</span><span class=\"token punctuation\">.</span>read<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token comment\">#------------ new ------------ </span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token comment\"># 使用 pathlib 可以让这件事情变得更简单</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token keyword\">from</span> pathlib <span class=\"token keyword\">import</span> Path</pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>Path<span class=\"token punctuation\">(</span><span class=\"token string\">'foo.txt'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>read_text<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><ul>\n<li>os 路径的操作同样兼容 pathlib</li>\n</ul>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token operator\">>></span><span class=\"token operator\">></span> p <span class=\"token operator\">=</span> Path<span class=\"token punctuation\">(</span><span class=\"token string\">'/tmp'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token comment\"># 可以直接对 Path 类型对象 p 进行 join</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token operator\">>></span><span class=\"token operator\">></span> os<span class=\"token punctuation\">.</span>path<span class=\"token punctuation\">.</span>join<span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">,</span> <span class=\"token string\">'foo.txt'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token string\">'/tmp/foo.txt'</span></pre></td></tr></table></figure></div></details>\n<h3 id=\"掌握如何流式读取大文件\"><a class=\"anchor\" href=\"#掌握如何流式读取大文件\">#</a> 掌握如何流式读取大文件</h3>\n<p>常规做法 with open read 三板斧可能已经被我们用烂了。但对于解决行数少，每行内容多的文件时，往往不够高效。</p>\n<p>例如：统计一个只有一行，且大小有 5G 的文件里的数字  <code>9</code>  的个数</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">count_nine</span><span class=\"token punctuation\">(</span>fname<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token triple-quoted-string string\">\"\"\"计算文件里包含多少个数字 '9'</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    \"\"\"</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    count <span class=\"token operator\">=</span> <span class=\"token number\">0</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token keyword\">with</span> <span class=\"token builtin\">open</span><span class=\"token punctuation\">(</span>fname<span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> <span class=\"token builtin\">file</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        <span class=\"token keyword\">for</span> line <span class=\"token keyword\">in</span> <span class=\"token builtin\">file</span><span class=\"token punctuation\">:</span> <span class=\"token comment\">#这一行的内容会有 5 个 G 的大小，想想就令人头大😑</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>            count <span class=\"token operator\">+=</span> line<span class=\"token punctuation\">.</span>count<span class=\"token punctuation\">(</span><span class=\"token string\">'9'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token keyword\">return</span> count</pre></td></tr></table></figure><p>通过按照固定字节大小的方式读取可以有效地提高性能。</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9kb2NzLnB5dGhvbi5vcmcvMy9saWJyYXJ5L2Z1bmN0aW9ucy5odG1sI2l0ZXI=\">iter(iterable)</span> 是一个用来构造迭代器的内建函数。当我们使用  <code>iter(callable, sentinel)</code>  的方式调用它时，会返回一个特殊的对象，迭代它将不断产生可调用对象 callable 的调用结果，直到结果为 setinel 时，迭代终止。</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">chunked_file_reader</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">file</span><span class=\"token punctuation\">,</span> block_size<span class=\"token operator\">=</span><span class=\"token number\">1024</span> <span class=\"token operator\">*</span> <span class=\"token number\">8</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token triple-quoted-string string\">\"\"\"生成器函数：分块读取文件内容，使用 iter 函数</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    \"\"\"</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token comment\"># 首先使用 partial (fp.read, block_size) 构造一个新的无需参数的函数</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token comment\"># 循环将不断返回 fp.read (block_size) 调用结果，直到其为 '' 时终止</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token keyword\">for</span> chunk <span class=\"token keyword\">in</span> <span class=\"token builtin\">iter</span><span class=\"token punctuation\">(</span>partial<span class=\"token punctuation\">(</span><span class=\"token builtin\">file</span><span class=\"token punctuation\">.</span>read<span class=\"token punctuation\">,</span> block_size<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token string\">''</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        <span class=\"token keyword\">yield</span> chunk</pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        </pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">count_nine_v1</span><span class=\"token punctuation\">(</span>fname<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    count <span class=\"token operator\">=</span> <span class=\"token number\">0</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token keyword\">with</span> <span class=\"token builtin\">open</span><span class=\"token punctuation\">(</span>fname<span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> fp<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        <span class=\"token keyword\">for</span> chunk <span class=\"token keyword\">in</span> chunked_file_reader<span class=\"token punctuation\">(</span>fp<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>            count <span class=\"token operator\">+=</span> chunk<span class=\"token punctuation\">.</span>count<span class=\"token punctuation\">(</span><span class=\"token string\">'9'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    <span class=\"token keyword\">return</span> count</pre></td></tr></table></figure><h3 id=\"设计接受文件对象的函数\"><a class=\"anchor\" href=\"#设计接受文件对象的函数\">#</a> 设计接受文件对象的函数</h3>\n<p>代码是否能够方便的编写单元测试，将反映出一个代码设计的好坏。</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">#------------ bad ------------</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token comment\"># 这样的代码必须让我们依赖一个文件名，从而进行单元测试。</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">count_vowels</span><span class=\"token punctuation\">(</span>filename<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token triple-quoted-string string\">\"\"\"统计某个文件中，包含元音字母(aeiou)的数量</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    \"\"\"</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    VOWELS_LETTERS <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span><span class=\"token string\">'a'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'e'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'i'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'o'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'u'</span><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    count <span class=\"token operator\">=</span> <span class=\"token number\">0</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token keyword\">with</span> <span class=\"token builtin\">open</span><span class=\"token punctuation\">(</span>filename<span class=\"token punctuation\">,</span> <span class=\"token string\">'r'</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> fp<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        <span class=\"token keyword\">for</span> line <span class=\"token keyword\">in</span> fp<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>            <span class=\"token keyword\">for</span> char <span class=\"token keyword\">in</span> line<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>                <span class=\"token keyword\">if</span> char<span class=\"token punctuation\">.</span>lower<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">in</span> VOWELS_LETTERS<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>                    count <span class=\"token operator\">+=</span> <span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    <span class=\"token keyword\">return</span> count</pre></td></tr><tr><td data-num=\"14\"></td><td><pre></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token comment\"># OUTPUT: 16</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>count_vowels<span class=\"token punctuation\">(</span><span class=\"token string\">'small_file.txt'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre></pre></td></tr><tr><td data-num=\"18\"></td><td><pre><span class=\"token comment\">#------------ good ------------</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre><span class=\"token comment\"># 脱离文件名的限制，只需要传入一个 file 对象</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">count_vowels_v2</span><span class=\"token punctuation\">(</span>fp<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>    <span class=\"token triple-quoted-string string\">\"\"\"统计某个文件中，包含元音字母(aeiou)的数量</pre></td></tr><tr><td data-num=\"22\"></td><td><pre>    \"\"\"</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>    VOWELS_LETTERS <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span><span class=\"token string\">'a'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'e'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'i'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'o'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'u'</span><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>    count <span class=\"token operator\">=</span> <span class=\"token number\">0</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>    <span class=\"token keyword\">for</span> line <span class=\"token keyword\">in</span> fp<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>        <span class=\"token keyword\">for</span> char <span class=\"token keyword\">in</span> line<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>            <span class=\"token keyword\">if</span> char<span class=\"token punctuation\">.</span>lower<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">in</span> VOWELS_LETTERS<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>                count <span class=\"token operator\">+=</span> <span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>    <span class=\"token keyword\">return</span> count</pre></td></tr><tr><td data-num=\"30\"></td><td><pre></pre></td></tr><tr><td data-num=\"31\"></td><td><pre></pre></td></tr><tr><td data-num=\"32\"></td><td><pre><span class=\"token comment\"># 修改函数后，打开文件的职责被移交给了上层函数调用者</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre><span class=\"token keyword\">with</span> <span class=\"token builtin\">open</span><span class=\"token punctuation\">(</span><span class=\"token string\">'small_file.txt'</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> fp<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>count_vowels_v2<span class=\"token punctuation\">(</span>fp<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p>模拟测试将会变得更加方便，只需要模拟 file 对象而非真实文件</p>\n<ul>\n<li>StringIO 是一个不错的选择</li>\n</ul>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\"># 注意：以下测试函数需要使用 pytest 执行</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">import</span> pytest</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">from</span> io <span class=\"token keyword\">import</span> StringIO</pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token decorator annotation punctuation\">@pytest<span class=\"token punctuation\">.</span>mark<span class=\"token punctuation\">.</span>parametrize</span><span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token string\">\"content,vowels_count\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        <span class=\"token comment\"># 使用 pytest 提供的参数化测试工具，定义测试参数列表</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        <span class=\"token comment\"># (文件内容，期待结果)</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        <span class=\"token punctuation\">(</span><span class=\"token string\">''</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        <span class=\"token punctuation\">(</span><span class=\"token string\">'Hello World!'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        <span class=\"token punctuation\">(</span><span class=\"token string\">'HELLO WORLD!'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>        <span class=\"token punctuation\">(</span><span class=\"token string\">'你好，世界'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    <span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">test_count_vowels_v2</span><span class=\"token punctuation\">(</span>content<span class=\"token punctuation\">,</span> vowels_count<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    <span class=\"token comment\"># 利用 StringIO 构造类文件对象 \"file\"</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    <span class=\"token builtin\">file</span> <span class=\"token operator\">=</span> StringIO<span class=\"token punctuation\">(</span>content<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>    <span class=\"token keyword\">assert</span> count_vowels_v2<span class=\"token punctuation\">(</span><span class=\"token builtin\">file</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> vowels_count</pre></td></tr></table></figure><ul>\n<li>或者试试 subprocess 的 stdout</li>\n</ul>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">import</span> subprocess</pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\"># 统计 /tmp 下面所有一级子文件名（目录名）有多少元音字母</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>p <span class=\"token operator\">=</span> subprocess<span class=\"token punctuation\">.</span>Popen<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token string\">'ls'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'/tmp'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> stdout<span class=\"token operator\">=</span>subprocess<span class=\"token punctuation\">.</span>PIPE<span class=\"token punctuation\">,</span> encoding<span class=\"token operator\">=</span><span class=\"token string\">'utf-8'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token comment\"># p.stdout 是一个流式类文件对象，可以直接传入函数</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token comment\"># OUTPUT: 42</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>count_vowels_v2<span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">.</span>stdout<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h4 id=\"如何编写兼容二者的函数\"><a class=\"anchor\" href=\"#如何编写兼容二者的函数\">#</a> 如何编写兼容二者的函数</h4>\n<ul>\n<li>技能满足单元测试，有更能符合真实的使用 xml.etree.ElementTree 是个不错的选择</li>\n</ul>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">parse</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> source<span class=\"token punctuation\">,</span> parser<span class=\"token operator\">=</span><span class=\"token boolean\">None</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token triple-quoted-string string\">\"\"\"*source* is a file name or file object, *parser* is an optional parser</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    \"\"\"</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    close_source <span class=\"token operator\">=</span> <span class=\"token boolean\">False</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token comment\"># 通过判断 source 是否有 \"read\" 属性来判定它是不是 “类文件对象”</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token comment\"># 如果不是，那么调用 open 函数打开它并负担起在函数末尾关闭它的责任</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token keyword\">not</span> <span class=\"token builtin\">hasattr</span><span class=\"token punctuation\">(</span>source<span class=\"token punctuation\">,</span> <span class=\"token string\">\"read\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        source <span class=\"token operator\">=</span> <span class=\"token builtin\">open</span><span class=\"token punctuation\">(</span>source<span class=\"token punctuation\">,</span> <span class=\"token string\">\"rb\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        close_source <span class=\"token operator\">=</span> <span class=\"token boolean\">True</span></pre></td></tr></table></figure>",
            "tags": [
                "计算机科学",
                "学习笔记",
                "Python「工匠」",
                "Python「工匠」"
            ]
        },
        {
            "id": "https://allengx.gitee.io/computer-science/study/Python%E3%80%8C%E5%B7%A5%E5%8C%A0%E3%80%8D/%E5%8D%81%E3%80%81%E5%81%9A%E4%B8%80%E4%B8%AA%E7%B2%BE%E9%80%9A%E8%A7%84%E5%88%99%E7%9A%84%E7%8E%A9%E5%AE%B6/",
            "url": "https://allengx.gitee.io/computer-science/study/Python%E3%80%8C%E5%B7%A5%E5%8C%A0%E3%80%8D/%E5%8D%81%E3%80%81%E5%81%9A%E4%B8%80%E4%B8%AA%E7%B2%BE%E9%80%9A%E8%A7%84%E5%88%99%E7%9A%84%E7%8E%A9%E5%AE%B6/",
            "title": "十、做一个精通规则的玩家",
            "date_published": "2020-11-12T03:30:00.000Z",
            "content_html": "<div class=\"note info\">\n<p>以下为个人学习笔记整理</p>\n</div>\n<h2 id=\"做一个精通规则的玩家\"><a class=\"anchor\" href=\"#做一个精通规则的玩家\">#</a> 做一个精通规则的玩家🎮</h2>\n<h3 id=\"python-里的规则\"><a class=\"anchor\" href=\"#python-里的规则\">#</a> Python 里的规则</h3>\n<p>Python 是一门初见简单、深入后愈觉复杂的语言。拿 Python 里最重要的「对象」概念来说，Python 为其定义了多到让你记不全的规则，比如：</p>\n<ul>\n<li>定义了  <code>__str__</code>  方法的对象，就可以使用  <code>str()</code>  函数来返回可读名称</li>\n<li>定义了  <code>__next__</code>  和  <code>__iter__</code>  方法的对象，就可以被循环迭代</li>\n<li>定义了  <code>__bool__</code>  方法的对象，在进行布尔判断时就会使用自定义的逻辑</li>\n<li>... ...</li>\n</ul>\n<p>** 熟悉规则，并让自己的代码适应这些规则，可以帮助我们写出更地道的代码，事半功倍的完成工作。** 下面，让我们来看一个有关适应规则的故事</p>\n<details class=\"info\"><summary>示例</summary><div>\n<ul>\n<li>从一份去过 「普吉岛」 的名单中挑选出没有去过新西兰的人员联系方式</li>\n<li>为此，我们提供了两份人员名单 —— 去过「新西兰」、去过「普吉岛」</li>\n</ul>\n<figure class=\"highlight json\"><figcaption data-lang=\"JSON\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre># 去过普吉岛的人员数据</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>users_visited_phuket = <span class=\"token punctuation\">[</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span><span class=\"token property\">\"first_name\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Sirena\"</span><span class=\"token punctuation\">,</span> <span class=\"token property\">\"last_name\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Gross\"</span><span class=\"token punctuation\">,</span> <span class=\"token property\">\"phone_number\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"650-568-0388\"</span><span class=\"token punctuation\">,</span> <span class=\"token property\">\"date_visited\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"2018-03-14\"</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span><span class=\"token property\">\"first_name\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"James\"</span><span class=\"token punctuation\">,</span> <span class=\"token property\">\"last_name\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Ashcraft\"</span><span class=\"token punctuation\">,</span> <span class=\"token property\">\"phone_number\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"412-334-4380\"</span><span class=\"token punctuation\">,</span> <span class=\"token property\">\"date_visited\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"2014-09-16\"</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    ... ...</pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre># 去过新西兰的人员数据</pre></td></tr><tr><td data-num=\"9\"></td><td><pre>users_visited_nz = <span class=\"token punctuation\">[</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span><span class=\"token property\">\"first_name\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Justin\"</span><span class=\"token punctuation\">,</span> <span class=\"token property\">\"last_name\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Malcom\"</span><span class=\"token punctuation\">,</span> <span class=\"token property\">\"phone_number\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"267-282-1964\"</span><span class=\"token punctuation\">,</span> <span class=\"token property\">\"date_visited\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"2011-03-13\"</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span><span class=\"token property\">\"first_name\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Albert\"</span><span class=\"token punctuation\">,</span> <span class=\"token property\">\"last_name\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Potter\"</span><span class=\"token punctuation\">,</span> <span class=\"token property\">\"phone_number\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"702-249-3714\"</span><span class=\"token punctuation\">,</span> <span class=\"token property\">\"date_visited\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"2013-09-11\"</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    ... ...</pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token punctuation\">]</span></pre></td></tr></table></figure><blockquote>\n<p>通过直觉产生的代码⚡️</p>\n</blockquote>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">find_potential_customers_v1</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token triple-quoted-string string\">\"\"\"找到去过普吉岛但是没去过新西兰的人</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    \"\"\"</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token keyword\">for</span> phuket_record <span class=\"token keyword\">in</span> users_visited_phuket<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        is_potential <span class=\"token operator\">=</span> <span class=\"token boolean\">True</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        <span class=\"token keyword\">for</span> nz_record <span class=\"token keyword\">in</span> users_visited_nz<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>            <span class=\"token keyword\">if</span> phuket_record<span class=\"token punctuation\">[</span><span class=\"token string\">'first_name'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> nz_record<span class=\"token punctuation\">[</span><span class=\"token string\">'first_name'</span><span class=\"token punctuation\">]</span> <span class=\"token keyword\">and</span> \\</pre></td></tr><tr><td data-num=\"8\"></td><td><pre>                    phuket_record<span class=\"token punctuation\">[</span><span class=\"token string\">'last_name'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> nz_record<span class=\"token punctuation\">[</span><span class=\"token string\">'last_name'</span><span class=\"token punctuation\">]</span> <span class=\"token keyword\">and</span> \\</pre></td></tr><tr><td data-num=\"9\"></td><td><pre>                    phuket_record<span class=\"token punctuation\">[</span><span class=\"token string\">'phone_number'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> nz_record<span class=\"token punctuation\">[</span><span class=\"token string\">'phone_number'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>                is_potential <span class=\"token operator\">=</span> <span class=\"token boolean\">False</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>                <span class=\"token keyword\">break</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>        <span class=\"token keyword\">if</span> is_potential<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>            <span class=\"token keyword\">yield</span> phuket_record</pre></td></tr></table></figure><blockquote>\n<p>通过集合进行查询优化💡</p>\n</blockquote>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">find_potential_customers_v2</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token triple-quoted-string string\">\"\"\"找到去过普吉岛但是没去过新西兰的人，性能改进版</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    \"\"\"</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token comment\"># 首先，遍历所有新西兰访问记录，创建查找索引</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    nz_records_idx <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        <span class=\"token punctuation\">(</span>rec<span class=\"token punctuation\">[</span><span class=\"token string\">'first_name'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> rec<span class=\"token punctuation\">[</span><span class=\"token string\">'last_name'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> rec<span class=\"token punctuation\">[</span><span class=\"token string\">'phone_number'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        <span class=\"token keyword\">for</span> rec <span class=\"token keyword\">in</span> users_visited_nz</pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token keyword\">for</span> rec <span class=\"token keyword\">in</span> users_visited_phuket<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        key <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>rec<span class=\"token punctuation\">[</span><span class=\"token string\">'first_name'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> rec<span class=\"token punctuation\">[</span><span class=\"token string\">'last_name'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> rec<span class=\"token punctuation\">[</span><span class=\"token string\">'phone_number'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        <span class=\"token keyword\">if</span> key <span class=\"token keyword\">not</span> <span class=\"token keyword\">in</span> nz_records_idx<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>            <span class=\"token keyword\">yield</span> rec</pre></td></tr></table></figure><blockquote>\n<p>利用集合特性简化规则📏</p>\n</blockquote>\n<p>对去过「新西兰」、去过「普吉岛」的人员名单取差集。 <code>set(「新西兰」) - set(「普吉岛」)</code></p>\n<blockquote>\n<p>通过 dataclass 实现  <code>__hash__</code>  和  <code>__eq__</code>  后的最终效果👍</p>\n</blockquote>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token decorator annotation punctuation\">@dataclass</span><span class=\"token punctuation\">(</span>unsafe_hash<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name\">VisitRecordDC</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    first_name<span class=\"token punctuation\">:</span> <span class=\"token builtin\">str</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    last_name<span class=\"token punctuation\">:</span> <span class=\"token builtin\">str</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    phone_number<span class=\"token punctuation\">:</span> <span class=\"token builtin\">str</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token comment\"># 跳过 “访问时间” 字段，不作为任何对比条件</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    date_visited<span class=\"token punctuation\">:</span> <span class=\"token builtin\">str</span> <span class=\"token operator\">=</span> field<span class=\"token punctuation\">(</span><span class=\"token builtin\">hash</span><span class=\"token operator\">=</span><span class=\"token boolean\">False</span><span class=\"token punctuation\">,</span> compare<span class=\"token operator\">=</span><span class=\"token boolean\">False</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre></pre></td></tr><tr><td data-num=\"9\"></td><td><pre></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">find_potential_customers_v4</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token keyword\">return</span> <span class=\"token builtin\">set</span><span class=\"token punctuation\">(</span>VisitRecordDC<span class=\"token punctuation\">(</span><span class=\"token operator\">**</span>r<span class=\"token punctuation\">)</span> <span class=\"token keyword\">for</span> r <span class=\"token keyword\">in</span> users_visited_phuket<span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> \\</pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        <span class=\"token builtin\">set</span><span class=\"token punctuation\">(</span>VisitRecordDC<span class=\"token punctuation\">(</span><span class=\"token operator\">**</span>r<span class=\"token punctuation\">)</span> <span class=\"token keyword\">for</span> r <span class=\"token keyword\">in</span> users_visited_nz<span class=\"token punctuation\">)</span></pre></td></tr></table></figure></div></details>\n<h3 id=\"其他规则如何影响我们\"><a class=\"anchor\" href=\"#其他规则如何影响我们\">#</a> 其他规则如何影响我们</h3>\n<h4 id=\"使用-__format__-做对象字符串格式化\"><a class=\"anchor\" href=\"#使用-__format__-做对象字符串格式化\">#</a> 使用  <code>__format__</code>  做对象字符串格式化</h4>\n<details class=\"info\"><summary>示例</summary><div>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name\">Student</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token keyword\">def</span> <span class=\"token function\">__init__</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> name<span class=\"token punctuation\">,</span> age<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>        self<span class=\"token punctuation\">.</span>name <span class=\"token operator\">=</span> name</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>        self<span class=\"token punctuation\">.</span>age <span class=\"token operator\">=</span> age</pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token keyword\">def</span> <span class=\"token function\">__format__</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> format_spec<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        <span class=\"token keyword\">if</span> format_spec <span class=\"token operator\">==</span> <span class=\"token string\">'long'</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>            <span class=\"token keyword\">return</span> <span class=\"token string-interpolation\"><span class=\"token string\">f'</span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>self<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">&#125;</span></span><span class=\"token string\"> is </span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>self<span class=\"token punctuation\">.</span>age<span class=\"token punctuation\">&#125;</span></span><span class=\"token string\"> years old.'</span></span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        <span class=\"token keyword\">elif</span> format_spec <span class=\"token operator\">==</span> <span class=\"token string\">'simple'</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>            <span class=\"token keyword\">return</span> <span class=\"token string-interpolation\"><span class=\"token string\">f'</span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>self<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">(</span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>self<span class=\"token punctuation\">.</span>age<span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">)'</span></span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        <span class=\"token keyword\">raise</span> ValueError<span class=\"token punctuation\">(</span><span class=\"token string\">'invalid format spec'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre></pre></td></tr><tr><td data-num=\"13\"></td><td><pre></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>piglei <span class=\"token operator\">=</span> Student<span class=\"token punctuation\">(</span><span class=\"token string\">'piglei'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'18'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'&#123;0:simple&#125;'</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">format</span><span class=\"token punctuation\">(</span>piglei<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'&#123;0:long&#125;'</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">format</span><span class=\"token punctuation\">(</span>piglei<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token comment\"># ----- Output -----</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>piglei<span class=\"token punctuation\">(</span><span class=\"token number\">18</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>piglei <span class=\"token keyword\">is</span> <span class=\"token number\">18</span> years old<span class=\"token punctuation\">.</span></pre></td></tr></table></figure></div></details>\n<h4 id=\"使用-__getitem__-定义对象切片操作\"><a class=\"anchor\" href=\"#使用-__getitem__-定义对象切片操作\">#</a> 使用  <code>__getitem__</code>  定义对象切片操作</h4>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">#------------ bad ------------</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name\">Events</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token keyword\">def</span> <span class=\"token function\">__init__</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> events<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>        self<span class=\"token punctuation\">.</span>events <span class=\"token operator\">=</span> events</pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token keyword\">def</span> <span class=\"token function\">is_empty</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        <span class=\"token keyword\">return</span> <span class=\"token keyword\">not</span> <span class=\"token builtin\">bool</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>events<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token keyword\">def</span> <span class=\"token function\">list_events_by_range</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> start<span class=\"token punctuation\">,</span> end<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        <span class=\"token keyword\">return</span> self<span class=\"token punctuation\">.</span>events<span class=\"token punctuation\">[</span>start<span class=\"token punctuation\">:</span>end<span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>events <span class=\"token operator\">=</span> Events<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    <span class=\"token string\">'computer started'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    <span class=\"token string\">'os launched'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    <span class=\"token string\">'docker started'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    <span class=\"token string\">'os stopped'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre></pre></td></tr><tr><td data-num=\"19\"></td><td><pre><span class=\"token comment\"># 判断是否有内容，打印第二个和第三个对象</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre><span class=\"token keyword\">if</span> <span class=\"token keyword\">not</span> events<span class=\"token punctuation\">.</span>is_empty<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>events<span class=\"token punctuation\">.</span>list_events_by_range<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre></pre></td></tr><tr><td data-num=\"23\"></td><td><pre></pre></td></tr><tr><td data-num=\"24\"></td><td><pre><span class=\"token comment\">#------------ good ------------</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name\">Events</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>    <span class=\"token keyword\">def</span> <span class=\"token function\">__init__</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> events<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>        self<span class=\"token punctuation\">.</span>events <span class=\"token operator\">=</span> events</pre></td></tr><tr><td data-num=\"28\"></td><td><pre></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>    <span class=\"token keyword\">def</span> <span class=\"token function\">__len__</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>        <span class=\"token triple-quoted-string string\">\"\"\"自定义长度，将会被用来做布尔判断\"\"\"</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>        <span class=\"token keyword\">return</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>events<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>    <span class=\"token keyword\">def</span> <span class=\"token function\">__getitem__</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> index<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>        <span class=\"token triple-quoted-string string\">\"\"\"自定义切片方法\"\"\"</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>        <span class=\"token comment\"># 直接将 slice 切片对象透传给 events 处理</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>        <span class=\"token keyword\">return</span> self<span class=\"token punctuation\">.</span>events<span class=\"token punctuation\">[</span>index<span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre></pre></td></tr><tr><td data-num=\"38\"></td><td><pre><span class=\"token comment\"># 判断是否有内容，打印第二个和第三个对象</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre><span class=\"token keyword\">if</span> events<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>events<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">:</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h3 id=\"链接\"><a class=\"anchor\" href=\"#链接\">#</a> 链接</h3>\n<p>Raymond Hettinger 在 PyCon 2015 上有过一次非常精彩的演讲： <span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cueW91dHViZS5jb20vd2F0Y2g/dj13Zi1CcUFqWmI4TQ==\">“Beyond PEP8 - Best practices for beautiful intelligible code”</span></p>\n<p>Python 对象模型规则可以在 <span class=\"exturl\" data-url=\"aHR0cHM6Ly9kb2NzLnB5dGhvbi5vcmcvMy9yZWZlcmVuY2UvZGF0YW1vZGVsLmh0bWw=\">官方文档</span> 找到，有点难读，但值得一读。</p>\n",
            "tags": [
                "计算机科学",
                "学习笔记",
                "Python「工匠」",
                "Python「工匠」"
            ]
        },
        {
            "id": "https://allengx.gitee.io/computer-science/study/Python%E3%80%8C%E5%B7%A5%E5%8C%A0%E3%80%8D/%E4%B9%9D%E3%80%81%E6%A8%A1%E5%9D%97/",
            "url": "https://allengx.gitee.io/computer-science/study/Python%E3%80%8C%E5%B7%A5%E5%8C%A0%E3%80%8D/%E4%B9%9D%E3%80%81%E6%A8%A1%E5%9D%97/",
            "title": "九、模块",
            "date_published": "2020-11-12T03:02:34.000Z",
            "content_html": "<div class=\"note info\">\n<p>以下为个人学习笔记整理</p>\n</div>\n<h2 id=\"模块\"><a class=\"anchor\" href=\"#模块\">#</a> 模块📦</h2>\n<h3 id=\"环形依赖问题\"><a class=\"anchor\" href=\"#环形依赖问题\">#</a> 环形依赖问题</h3>\n<p>很多时候，模块间的相互依赖会导致 环 import。即：模块 A 里面 import 了模块 B. 同时，模块 B 里也 import 了模块 A。这时候问题便产生了。</p>\n<p><code>ImportError: cannot import name xx from xxx</code></p>\n<p>解决办法有很多，最常见的手段是把 import 放在某个需要用到的函数内，但往往这种方式也是最坏的。</p>\n<p>它纵容了一个不好的结构设计得以存活，当模块之间的依赖关系变得错综复杂，代码的可读性也随之下降 —— 代码产生了坏味道。</p>\n<p>较好的解决办法是重新审视你的代码结构，并寻求改变。</p>\n<details class=\"info\"><summary>示例</summary><div>\n<div class=\"note danger\">\n<p>问题结构：</p>\n</div>\n<figure class=\"highlight ini\"><figcaption data-lang=\"ini\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>├── fancy_site</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>│   ├── __init__.py</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>│   ├── marketing.py        # 与市场活动有关的内容</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>│   └── users.py            # 与用户有关的内容</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>└── notify_users.py     # 脚本：发送积分通知</pre></td></tr></table></figure><p><span class=\"label success\">📜notify_users.py</span></p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">from</span> fancy_site<span class=\"token punctuation\">.</span>users <span class=\"token keyword\">import</span> list_active_users</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">from</span> fancy_site<span class=\"token punctuation\">.</span>marketing <span class=\"token keyword\">import</span> query_user_points</pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token comment\"># do something...</span></pre></td></tr></table></figure><p><span class=\"label danger\">📜fancy_site/marketing.py</span></p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">from</span> <span class=\"token punctuation\">.</span>users <span class=\"token keyword\">import</span> User</pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\"># do something...</span></pre></td></tr></table></figure><p><span class=\"label danger\">📜fancy_site/users.py</span></p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">from</span> <span class=\"token punctuation\">.</span>marketing <span class=\"token keyword\">import</span> send_sms</pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\"># do something...</span></pre></td></tr></table></figure><p><img data-src=\"https://gitee.com/allengx/pic_bed/raw/master/img/image-20201112103224285.png\" alt=\"image-20201112103224285\" /></p>\n<div class=\"note success\">\n<p>调整后的结构</p>\n</div>\n<figure class=\"highlight ini\"><figcaption data-lang=\"ini\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>├── fancy_site</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>│   ├── __init__.py</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>│   ├── msg_utils.py        # 发送通知相关的内容</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>│   ├── marketing.py        # 与市场活动有关的内容</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>│   └── users.py            # 与用户有关的内容</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>└── notify_users.py     # 脚本：发送积分通知</pre></td></tr></table></figure><p><span class=\"label success\">📜fancy_site/users.py</span></p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">from</span> <span class=\"token punctuation\">.</span>msg_utils <span class=\"token keyword\">import</span> send_sms</pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\"># do something...</span></pre></td></tr></table></figure><p><img data-src=\"https://gitee.com/allengx/pic_bed/raw/master/img/image-20201112104427153.png\" alt=\"image-20201112104427153\" /></p>\n<p>我们仅仅只是把一个放置在 marketing 模块内的函数，迁移到了一个新的地方（msg_utils），便解决了这个严峻的问题。</p>\n</div></details>\n",
            "tags": [
                "计算机科学",
                "学习笔记",
                "Python「工匠」",
                "Python「工匠」"
            ]
        },
        {
            "id": "https://allengx.gitee.io/%E6%97%A5%E6%9C%AC%E8%AA%9E/study/%E6%97%A5%E6%9C%AC%E8%AA%9E%E3%81%AE%E6%96%87%E6%B3%95%E5%88%9D%E7%BA%A7%EF%BC%88%E4%B8%8A%EF%BC%89/%E4%BA%8C%E3%80%81%E5%B0%8F%E6%9D%8E%E7%9A%84%E5%85%AC%E5%8F%B8%E7%94%9F%E6%B4%BB%E2%91%A0/",
            "url": "https://allengx.gitee.io/%E6%97%A5%E6%9C%AC%E8%AA%9E/study/%E6%97%A5%E6%9C%AC%E8%AA%9E%E3%81%AE%E6%96%87%E6%B3%95%E5%88%9D%E7%BA%A7%EF%BC%88%E4%B8%8A%EF%BC%89/%E4%BA%8C%E3%80%81%E5%B0%8F%E6%9D%8E%E7%9A%84%E5%85%AC%E5%8F%B8%E7%94%9F%E6%B4%BB%E2%91%A0/",
            "title": "二、小李的公司生活①",
            "date_published": "2020-11-11T15:50:15.000Z",
            "content_html": "<div class=\"note info\">\n<p>以下为个人学习笔记整理</p>\n</div>\n<h1 id=\"二-小李的公司生活1\"><a class=\"anchor\" href=\"#二-小李的公司生活1\">#</a> 二、小李的公司生活①</h1>\n<h2 id=\"第5课-森もりさんは-七時しちじに-起おきます\"><a class=\"anchor\" href=\"#第5课-森もりさんは-七時しちじに-起おきます\">#</a> 第⑤课  <ruby>森<rp> (</rp><rt>もり</rt><rp>)</rp></ruby> さんは　 <ruby>七時<rp> (</rp><rt>しちじ</rt><rp>)</rp></ruby> に　 <ruby>起<rp> (</rp><rt>お</rt><rp>)</rp></ruby> きます</h2>\n<h3 id=\"语法解释\"><a class=\"anchor\" href=\"#语法解释\">#</a> 语法解释</h3>\n<h4 id=\"今いま-~-時じ-~-分ふんです\"><a class=\"anchor\" href=\"#今いま-~-時じ-~-分ふんです\">#</a> <ruby>今<rp> (</rp><rt>いま</rt><rp>)</rp></ruby>　～ <ruby>時<rp> (</rp><rt>じ</rt><rp>)</rp></ruby>　～ <ruby>分<rp> (</rp><rt>ふん</rt><rp>)</rp></ruby> です</h4>\n<p>意为现在是～时候</p>\n<details class=\"info\"><summary>示例</summary><div>\n<ul>\n<li><ruby>今<rp> (</rp><rt>いま</rt><rp>)</rp></ruby>　 <ruby>四時<rp> (</rp><rt>よじ</rt><rp>)</rp></ruby>　 <ruby>三十分<rp> (</rp><rt>さんじゅっぷん</rt><rp>)</rp></ruby> です。（现在是 4 点 30 分）</li>\n</ul>\n</div></details>\n<h4 id=\"动ます动ません-动ました动ませんでした\"><a class=\"anchor\" href=\"#动ます动ません-动ました动ませんでした\">#</a> 「动」ます／「动」ません　❘「动」ました／「动」ませんでした</h4>\n<ul>\n<li>「动」ます／「动」ません：用于修饰现在、习惯性、未来的动作。前者表示肯定，后者表示否定</li>\n<li>「动」ました／「动」ませんでした：用于修饰过去的动作。前者表示肯定，后者表示否定</li>\n</ul>\n<details class=\"info\"><summary>示例</summary><div>\n<ul>\n<li><ruby>森<rp> (</rp><rt>もり</rt><rp>)</rp></ruby> さんは　 <ruby>毎日<rp> (</rp><rt>まいにち</rt><rp>)</rp></ruby>　 <ruby>働<rp> (</rp><rt>はたら</rt><rp>)</rp></ruby> き　ます。（森先生每天工作）</li>\n<li><ruby>田中<rp> (</rp><rt>たなか</rt><rp>)</rp></ruby> さんは　 <ruby>今日<rp> (</rp><rt>きょう</rt><rp>)</rp></ruby>　<ruby>働<rp> (</rp><rt>はたら</rt><rp>)</rp></ruby> き　ません。（田中先生今天不工作）</li>\n<li><ruby>森<rp> (</rp><rt>もり</rt><rp>)</rp></ruby> さんは　 <ruby>先週<rp> (</rp><rt>せんしゅう</rt><rp>)</rp></ruby>　 <ruby>休<rp> (</rp><rt>やす</rt><rp>)</rp></ruby> み　ました。（森先生上周休息）</li>\n<li>わたしは　 <ruby>昨日<rp> (</rp><rt>きのう</rt><rp>)</rp></ruby>　<ruby>働<rp> (</rp><rt>はたら</rt><rp>)</rp></ruby> き　ませんでした。（我昨天没上班）</li>\n</ul>\n</div></details>\n<h4 id=\"名时间に-动\"><a class=\"anchor\" href=\"#名时间に-动\">#</a> 名「时间」に　「动」</h4>\n<p>表示动作发生的具体时间时，要用　 <code>に</code> 　来修饰</p>\n<details class=\"info\"><summary>示例</summary><div>\n<ul>\n<li><ruby>森<rp> (</rp><rt>もり</rt><rp>)</rp></ruby> さんは　 <ruby>七時<rp> (</rp><rt>しちじ</rt><rp>)</rp></ruby> に　 <ruby>起<rp> (</rp><rt>お</rt><rp>)</rp></ruby> きます。（森先生七点起床）</li>\n<li><ruby>学校<rp> (</rp><rt>がっこう</rt><rp>)</rp></ruby> は　 <ruby>八時半<rp> (</rp><rt>はちじはん</rt><rp>)</rp></ruby> に　 <ruby>始<rp> (</rp><rt>はじ</rt><rp>)</rp></ruby> まります。（学校八点半开始上课）</li>\n</ul>\n</div></details>\n<h4 id=\"名时间から-名时间まで-动\"><a class=\"anchor\" href=\"#名时间から-名时间まで-动\">#</a> 名「时间」から　名「时间」まで 　「动」</h4>\n<p>表示某个动作发生在某个时间段。</p>\n<details class=\"info\"><summary>示例</summary><div>\n<ul>\n<li>\n<p><ruby>森<rp> (</rp><rt>もり</rt><rp>)</rp></ruby> さんは　 <ruby>月曜日<rp> (</rp><rt>げつうび</rt><rp>)</rp></ruby> から　 <ruby>水曜日<rp> (</rp><rt>すいようび</rt><rp>)</rp></ruby> まで　 <ruby>休<rp> (</rp><rt>やす</rt><rp>)</rp></ruby> みました。</p>\n<p>——（森先生这个星期一到星期三已经休息了）</p>\n</li>\n</ul>\n</div></details>\n<h4 id=\"いつ-动ますか\"><a class=\"anchor\" href=\"#いつ-动ますか\">#</a> いつ　「动」ますか</h4>\n<p>用于询问某个动作发生的时间。如果想要询问具体的时间（具体到某年某月某日），需要在时间后面加　 <code>に</code></p>\n<details class=\"info\"><summary>示例</summary><div>\n<ul>\n<li><ruby>試験<rp> (</rp><rt>しけん</rt><rp>)</rp></ruby> は　いつ　 <ruby>初<rp> (</rp><rt>はじ</rt><rp>)</rp></ruby> まりますか。（考试什么时候开始）</li>\n<li><ruby>仕事<rp> (</rp><rt>しごと</rt><rp>)</rp></ruby> は　 <ruby>何時<rp> (</rp><rt>なん</rt><rp>)</rp></ruby> じ　 <ruby>終<rp> (</rp><rt>お</rt><rp>)</rp></ruby> わりますか。（工作几点结束）</li>\n</ul>\n</div></details>\n<blockquote>\n<p>如询问持续性动作的开始或结束时间时， <code>いつ</code>  改用   <code>いつから</code> ， <code>に</code>  改用  <code>まで</code></p>\n</blockquote>\n<h4 id=\"は对比\"><a class=\"anchor\" href=\"#は对比\">#</a> は「对比」</h4>\n<p>隐含和以前或者和平常做对比</p>\n<details class=\"info\"><summary>示例</summary><div>\n<ul>\n<li><ruby>小野<rp> (</rp><rt>おの</rt><rp>)</rp></ruby> さんは　 <ruby>今日<rp> (</rp><rt>きょう</rt><rp>)</rp></ruby> は　 <ruby>休<rp> (</rp><rt>やす</rt><rp>)</rp></ruby> みます。（小野女生今天休息）这里暗含昨天不休息，和昨天对比</li>\n<li><ruby>森<rp> (</rp><rt>もり</rt><rp>)</rp></ruby> さんは　 <ruby>毎日<rp> (</rp><rt>まいにち</rt><rp>)</rp></ruby>　 <ruby>何時<rp> (</rp><rt>なんじに</rt><rp>)</rp></ruby>　おけますか。（森先生你每天早晨几点起床）</li>\n</ul>\n<p>—— いつもは　 <ruby>七時<rp> (</rp><rt>しちじ</rt><rp>)</rp></ruby> ごろです。（我一般是 7 点左右起床）暗含和其他人对比，有相比于其他人之意</p>\n</div></details>\n<h3 id=\"词语讲解\"><a class=\"anchor\" href=\"#词语讲解\">#</a> 词语讲解</h3>\n<h4 id=\"人称在工作单位\"><a class=\"anchor\" href=\"#人称在工作单位\">#</a> 人称「在工作单位」</h4>\n<p>工作单位上的称呼，如：「上司」、「领导」、「经理」等...</p>\n<p>如果称呼别人公司员工的时候，需要在工作单位人称后面加上  <code>さん</code>  表示尊敬。</p>\n<h4 id=\"~-です\"><a class=\"anchor\" href=\"#~-です\">#</a> ~ です</h4>\n<p>已经明确的内容，可以用  <code>~ です</code>  进行简化。</p>\n<details class=\"info\"><summary>示例</summary><div>\n<ul>\n<li><ruby>北京支社<rp> (</rp><rt>ぺきんししゃ</rt><rp>)</rp></ruby> は　 <ruby>何時<rp> (</rp><rt>なんじ</rt><rp>)</rp></ruby> に　 <ruby>始<rp> (</rp><rt>はじ</rt><rp>)</rp></ruby> まります。（北京分公司几点下班）</li>\n</ul>\n<p>—— <ruby>八時<rp> (</rp><rt>はちじ</rt><rp>)</rp></ruby> です。（八点「下班」。）</p>\n</div></details>\n<h4 id=\"毎朝まいあさ-何時なんじに-动\"><a class=\"anchor\" href=\"#毎朝まいあさ-何時なんじに-动\">#</a> <ruby>毎朝<rp> (</rp><rt>まいあさ</rt><rp>)</rp></ruby>　 <ruby>何時<rp> (</rp><rt>なんじ</rt><rp>)</rp></ruby> に　「动」</h4>\n<p>表示每天几天干...，如果  <code>每</code>  换成其他 比如  <code>前天，昨天，明天 </code> 等。可以在后面加上  <code>の</code>  修饰。否则不行。</p>\n<h4 id=\"~ごろ\"><a class=\"anchor\" href=\"#~ごろ\">#</a> ~ ごろ</h4>\n<p><code>ごろ</code> 和时间搭配的时候可以表示一个大概值，意为左右的意思</p>\n<details class=\"info\"><summary>示例</summary><div>\n<ul>\n<li><ruby>昨日<rp> (</rp><rt>きのう</rt><rp>)</rp></ruby>　 <ruby>十二時半<rp> (</rp><rt>じゅうにじはん</rt><rp>)</rp></ruby> ごろ　 <ruby>寝<rp> (</rp><rt>ね</rt><rp>)</rp></ruby> ました。（昨晚，12 点半左右睡觉）</li>\n</ul>\n</div></details>\n<h3 id=\"时\"><a class=\"anchor\" href=\"#时\">#</a> 时</h3>\n<table>\n<thead>\n<tr>\n<th>1 時</th>\n<th>いちじ</th>\n<th>4 時</th>\n<th>よじ</th>\n<th>7 時</th>\n<th>しちじ</th>\n<th>10 時</th>\n<th>しゅうじ</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>2 時</td>\n<td>にじ</td>\n<td>5 時</td>\n<td>ごじ</td>\n<td>8 時</td>\n<td>はちじ</td>\n<td>11 時</td>\n<td>しゅういちじ</td>\n</tr>\n<tr>\n<td>3 時</td>\n<td>さんじ</td>\n<td>6 時</td>\n<td>ろくじ</td>\n<td>9 時</td>\n<td>くじ</td>\n<td>12 時</td>\n<td>しゅうにじ</td>\n</tr>\n<tr>\n<td>0 時</td>\n<td>れいじ</td>\n<td>何時</td>\n<td>なんじ</td>\n<td></td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"分\"><a class=\"anchor\" href=\"#分\">#</a> 分</h3>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\">１分</th>\n<th style=\"text-align:center\">いちぷん</th>\n<th style=\"text-align:center\">4 分</th>\n<th style=\"text-align:center\">よんぷん</th>\n<th style=\"text-align:center\">7 分</th>\n<th style=\"text-align:center\">ななふん</th>\n<th style=\"text-align:center\">10 分</th>\n<th style=\"text-align:center\">じゅっぷん</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">2 分</td>\n<td style=\"text-align:center\">にふん</td>\n<td style=\"text-align:center\">5 分</td>\n<td style=\"text-align:center\">ごふん</td>\n<td style=\"text-align:center\">8 分</td>\n<td style=\"text-align:center\">はっぷん</td>\n<td style=\"text-align:center\">11 分</td>\n<td style=\"text-align:center\">じゅういっぷん</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">3 分</td>\n<td style=\"text-align:center\">さんぷん</td>\n<td style=\"text-align:center\">6 分</td>\n<td style=\"text-align:center\">ろっぷん</td>\n<td style=\"text-align:center\">9 分</td>\n<td style=\"text-align:center\">きゅうふん</td>\n<td style=\"text-align:center\">15 分</td>\n<td style=\"text-align:center\">じゅうごふん</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">30 分</td>\n<td style=\"text-align:center\">さんじゅっぷん／はん</td>\n<td style=\"text-align:center\">45 分</td>\n<td style=\"text-align:center\">よんじゅうごふん</td>\n<td style=\"text-align:center\">何分</td>\n<td style=\"text-align:center\">なんぷん</td>\n<td style=\"text-align:center\"></td>\n<td style=\"text-align:center\"></td>\n</tr>\n</tbody>\n</table>\n<h4 id=\"星期\"><a class=\"anchor\" href=\"#星期\">#</a> 星期</h4>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\">日曜日</th>\n<th style=\"text-align:center\">月曜日</th>\n<th style=\"text-align:center\">火曜日</th>\n<th style=\"text-align:center\">水曜日</th>\n<th style=\"text-align:center\">木曜日</th>\n<th style=\"text-align:center\">金曜日</th>\n<th style=\"text-align:center\">土曜日</th>\n<th style=\"text-align:center\">何曜日</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">にちようび</td>\n<td style=\"text-align:center\">げつようび</td>\n<td style=\"text-align:center\">かようび</td>\n<td style=\"text-align:center\">すいようび</td>\n<td style=\"text-align:center\">もくようび</td>\n<td style=\"text-align:center\">きんようび</td>\n<td style=\"text-align:center\">どようび</td>\n<td style=\"text-align:center\">なにょうび</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">星期日</td>\n<td style=\"text-align:center\">星期一</td>\n<td style=\"text-align:center\">星期二</td>\n<td style=\"text-align:center\">星期三</td>\n<td style=\"text-align:center\">星期四</td>\n<td style=\"text-align:center\">星期五</td>\n<td style=\"text-align:center\">星期六</td>\n<td style=\"text-align:center\">星期几</td>\n</tr>\n</tbody>\n</table>\n<h4 id=\"其他时间名词\"><a class=\"anchor\" href=\"#其他时间名词\">#</a> 其他时间名词</h4>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\">おととい<br />前天</th>\n<th style=\"text-align:center\"><ruby>昨日<rp> (</rp><rt>きのう</rt><rp>)</rp></ruby><br />昨天</th>\n<th style=\"text-align:center\"><ruby>今日<rp> (</rp><rt>きょう</rt><rp>)</rp></ruby><br />今天</th>\n<th style=\"text-align:center\"><ruby>明日<rp> (</rp><rt>あした</rt><rp>)</rp></ruby><br />明天</th>\n<th style=\"text-align:center\"><ruby>明後日<rp> (</rp><rt>あさって</rt><rp>)</rp></ruby><br />后天</th>\n<th style=\"text-align:center\"><ruby>毎日<rp> (</rp><rt>まいにち</rt><rp>)</rp></ruby><br /></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">おとといの <ruby>朝<rp> (</rp><rt>あさ</rt><rp>)</rp></ruby><br />前天早晨</td>\n<td style=\"text-align:center\"><ruby>昨日<rp> (</rp><rt>きのう</rt><rp>)</rp></ruby> の<ruby>朝<rp> (</rp><rt>あさ</rt><rp>)</rp></ruby><br />昨天早上</td>\n<td style=\"text-align:center\"><ruby>今朝<rp> (</rp><rt>けさ</rt><rp>)</rp></ruby><br />今天早上</td>\n<td style=\"text-align:center\"><ruby>明日<rp> (</rp><rt>あした</rt><rp>)</rp></ruby> の <ruby>朝<rp> (</rp><rt>あさ</rt><rp>)</rp></ruby><br />明天早上</td>\n<td style=\"text-align:center\"><ruby>明後日<rp> (</rp><rt>あさって</rt><rp>)</rp></ruby> の <ruby>朝<rp> (</rp><rt>あさ</rt><rp>)</rp></ruby><br />后天早上</td>\n<td style=\"text-align:center\"><ruby>毎朝<rp> (</rp><rt>まいあさ</rt><rp>)</rp></ruby><br />每天早上</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">おとといの <ruby>晩<rp> (</rp><rt>ばん</rt><rp>)</rp></ruby><br />前天晚上</td>\n<td style=\"text-align:center\"><ruby>昨夜<rp> (</rp><rt>ゆうべ</rt><rp>)</rp></ruby><br />昨天晚上</td>\n<td style=\"text-align:center\"><ruby>今晩<rp> (</rp><rt>こんばん</rt><rp>)</rp></ruby><br />今天晚上</td>\n<td style=\"text-align:center\"><ruby>明日<rp> (</rp><rt>あした</rt><rp>)</rp></ruby> の<ruby>晩<rp> (</rp><rt>ばん</rt><rp>)</rp></ruby><br />明天晚上</td>\n<td style=\"text-align:center\"><ruby>明後日<rp> (</rp><rt>あさって</rt><rp>)</rp></ruby> の<ruby>晩<rp> (</rp><rt>ばん</rt><rp>)</rp></ruby><br />后天晚上</td>\n<td style=\"text-align:center\"><ruby>毎晩<rp> (</rp><rt>まいばん</rt><rp>)</rp></ruby><br />每天晚上</td>\n</tr>\n<tr>\n<td style=\"text-align:center\"><ruby>先<rp> (</rp><rt>せんせんしゅ</rt><rp>)</rp>々<rt></rt>週<rp> (</rp><rt>う</rt><rp>)</rp></ruby><br />上上周</td>\n<td style=\"text-align:center\"><ruby>先週<rp> (</rp><rt>せんしゅう</rt><rp>)</rp></ruby><br />上个周</td>\n<td style=\"text-align:center\"><ruby>今週<rp> (</rp><rt>こんしゅう</rt><rp>)</rp></ruby><br />这个周</td>\n<td style=\"text-align:center\"><ruby>来週<rp> (</rp><rt>らいしゅう</rt><rp>)</rp></ruby><br />下个周</td>\n<td style=\"text-align:center\">さ<ruby>来週<rp> (</rp><rt>らいしゅう</rt><rp>)</rp></ruby><br />下下个周</td>\n<td style=\"text-align:center\"><ruby>毎週<rp> (</rp><rt>まいしゅう</rt><rp>)</rp></ruby><br />每个星期</td>\n</tr>\n<tr>\n<td style=\"text-align:center\"><ruby>先<rp> (</rp><rt>せんせんげ</rt><rp>)</rp>々<rt></rt>月<rp> (</rp><rt>つ</rt><rp>)</rp></ruby><br />上上月</td>\n<td style=\"text-align:center\"><ruby>先月<rp> (</rp><rt>せんげつ</rt><rp>)</rp></ruby><br />上个月</td>\n<td style=\"text-align:center\"><ruby>今月<rp> (</rp><rt>こんげつ</rt><rp>)</rp></ruby><br />这个月</td>\n<td style=\"text-align:center\"><ruby>来月<rp> (</rp><rt>らいげつ</rt><rp>)</rp></ruby><br />下个月</td>\n<td style=\"text-align:center\">さ<ruby>来月<rp> (</rp><rt>らいげつ</rt><rp>)</rp></ruby><br />下下个月</td>\n<td style=\"text-align:center\"><ruby>毎月<rp> (</rp><rt>まいつき</rt><rp>)</rp></ruby><br />每个月</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">おととし<br />前年</td>\n<td style=\"text-align:center\"><ruby>去年<rp> (</rp><rt>きょねん</rt><rp>)</rp></ruby><br />去年</td>\n<td style=\"text-align:center\"><ruby>今年<rp> (</rp><rt>ことし</rt><rp>)</rp></ruby><br />今年</td>\n<td style=\"text-align:center\"><ruby>来年<rp> (</rp><rt>らいなん</rt><rp>)</rp></ruby><br />明年</td>\n<td style=\"text-align:center\">さ<ruby>来年<rp> (</rp><rt>らいなん</rt><rp>)</rp></ruby><br />后年</td>\n<td style=\"text-align:center\"><ruby>毎年<rp> (</rp><rt>まいとし</rt><rp>)</rp></ruby><br />每年</td>\n</tr>\n</tbody>\n</table>\n",
            "tags": [
                "日语",
                "学习笔记",
                "日语语法初级（上）",
                "日语语法"
            ]
        },
        {
            "id": "https://allengx.gitee.io/computer-science/study/Python%E3%80%8C%E5%B7%A5%E5%8C%A0%E3%80%8D/%E5%85%AB%E3%80%81%E8%A3%85%E9%A5%B0%E5%99%A8%E7%9A%84%E6%8A%80%E5%B7%A7/",
            "url": "https://allengx.gitee.io/computer-science/study/Python%E3%80%8C%E5%B7%A5%E5%8C%A0%E3%80%8D/%E5%85%AB%E3%80%81%E8%A3%85%E9%A5%B0%E5%99%A8%E7%9A%84%E6%8A%80%E5%B7%A7/",
            "title": "八、装饰器的技巧",
            "date_published": "2020-11-11T12:55:34.000Z",
            "content_html": "<div class=\"note info\">\n<p>以下为个人学习笔记整理</p>\n</div>\n<h2 id=\"装饰器的技巧\"><a class=\"anchor\" href=\"#装饰器的技巧\">#</a> 装饰器的技巧🎩</h2>\n<h3 id=\"尝试用类来实现装饰器\"><a class=\"anchor\" href=\"#尝试用类来实现装饰器\">#</a> 尝试用类来实现装饰器</h3>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">import</span> time</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">import</span> functools</pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name\">DelayFunc</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token keyword\">def</span> <span class=\"token function\">__init__</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span>  duration<span class=\"token punctuation\">,</span> func<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        self<span class=\"token punctuation\">.</span>duration <span class=\"token operator\">=</span> duration</pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        self<span class=\"token punctuation\">.</span>func <span class=\"token operator\">=</span> func</pre></td></tr><tr><td data-num=\"8\"></td><td><pre></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token keyword\">def</span> <span class=\"token function\">__call__</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> <span class=\"token operator\">*</span>args<span class=\"token punctuation\">,</span> <span class=\"token operator\">**</span>kwargs<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f'Wait for </span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>self<span class=\"token punctuation\">.</span>duration<span class=\"token punctuation\">&#125;</span></span><span class=\"token string\"> seconds...'</span></span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        time<span class=\"token punctuation\">.</span>sleep<span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>duration<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        <span class=\"token keyword\">return</span> self<span class=\"token punctuation\">.</span>func<span class=\"token punctuation\">(</span><span class=\"token operator\">*</span>args<span class=\"token punctuation\">,</span> <span class=\"token operator\">**</span>kwargs<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    <span class=\"token keyword\">def</span> <span class=\"token function\">eager_call</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> <span class=\"token operator\">*</span>args<span class=\"token punctuation\">,</span> <span class=\"token operator\">**</span>kwargs<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Call without delay'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>        <span class=\"token keyword\">return</span> self<span class=\"token punctuation\">.</span>func<span class=\"token punctuation\">(</span><span class=\"token operator\">*</span>args<span class=\"token punctuation\">,</span> <span class=\"token operator\">**</span>kwargs<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre></pre></td></tr><tr><td data-num=\"18\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">delay</span><span class=\"token punctuation\">(</span>duration<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>    <span class=\"token triple-quoted-string string\">\"\"\"装饰器：推迟某个函数的执行。同时提供 .eager_call 方法立即执行</pre></td></tr><tr><td data-num=\"20\"></td><td><pre>    \"\"\"</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>    <span class=\"token comment\"># 此处为了避免定义额外函数，直接使用 functools.partial 帮助构造</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>    <span class=\"token comment\"># DelayFunc 实例</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>    <span class=\"token keyword\">return</span> functools<span class=\"token punctuation\">.</span>partial<span class=\"token punctuation\">(</span>DelayFunc<span class=\"token punctuation\">,</span> duration<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre></pre></td></tr><tr><td data-num=\"25\"></td><td><pre><span class=\"token decorator annotation punctuation\">@delay</span><span class=\"token punctuation\">(</span>duration<span class=\"token operator\">=</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">add</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">,</span> b<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>    <span class=\"token keyword\">return</span> a <span class=\"token operator\">+</span> b</pre></td></tr><tr><td data-num=\"28\"></td><td><pre></pre></td></tr><tr><td data-num=\"29\"></td><td><pre><span class=\"token comment\"># 这次调用将会延迟 2 秒</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>add<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre><span class=\"token comment\"># 这次调用将会立即执行</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>add<span class=\"token punctuation\">.</span>eager_call<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h3 id=\"使用-wrapt-模块编写更扁平的装饰器\"><a class=\"anchor\" href=\"#使用-wrapt-模块编写更扁平的装饰器\">#</a> 使用 wrapt 模块编写更扁平的装饰器</h3>\n<p>有时候装饰器需要修饰 function、method、classmethod 时，我们不得不对装饰器进行调整，来适应新类型的函数。</p>\n<p>而  <code>wrapt</code>  可以快速地帮助我们改造装饰器以达到效果。此外，他还额外附加了 @functools.wraps () 的功能，能够保证正确的函数签名。</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">import</span> wrapt</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">import</span> random</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">provide_number</span><span class=\"token punctuation\">(</span>min_num<span class=\"token punctuation\">,</span> max_num<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token decorator annotation punctuation\">@wrapt<span class=\"token punctuation\">.</span>decorator</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token keyword\">def</span> <span class=\"token function\">wrapper</span><span class=\"token punctuation\">(</span>wrapped<span class=\"token punctuation\">,</span> instance<span class=\"token punctuation\">,</span> args<span class=\"token punctuation\">,</span> kwargs<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        <span class=\"token comment\"># 参数含义：</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        <span class=\"token comment\">#</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        <span class=\"token comment\"># - wrapped：被装饰的函数或类方法</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        <span class=\"token comment\"># - instance：</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        <span class=\"token comment\">#   - 如果被装饰者为普通类方法，该值为类实例</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        <span class=\"token comment\">#   - 如果被装饰者为 classmethod 类方法，该值为类</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        <span class=\"token comment\">#   - 如果被装饰者为类 / 函数 / 静态方法，该值为 None</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>        <span class=\"token comment\">#</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>        <span class=\"token comment\"># - args：调用时的位置参数（注意没有 * 符号）</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>        <span class=\"token comment\"># - kwargs：调用时的关键字参数（注意没有 ** 符号）</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>        <span class=\"token comment\">#</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>        num <span class=\"token operator\">=</span> random<span class=\"token punctuation\">.</span>randint<span class=\"token punctuation\">(</span>min_num<span class=\"token punctuation\">,</span> max_num<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>        <span class=\"token comment\"># 无需关注 wrapped 是类方法或普通函数，直接在头部追加参数</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>        args <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>num<span class=\"token punctuation\">,</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> args</pre></td></tr><tr><td data-num=\"20\"></td><td><pre>        <span class=\"token keyword\">return</span> wrapped<span class=\"token punctuation\">(</span><span class=\"token operator\">*</span>args<span class=\"token punctuation\">,</span> <span class=\"token operator\">**</span>kwargs<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>    <span class=\"token keyword\">return</span> wrapper</pre></td></tr><tr><td data-num=\"22\"></td><td><pre>    </pre></td></tr><tr><td data-num=\"23\"></td><td><pre><span class=\"token decorator annotation punctuation\">@provide_number</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">100</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">print_random_number</span><span class=\"token punctuation\">(</span>num<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>num<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre></pre></td></tr><tr><td data-num=\"27\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name\">Foo</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>    <span class=\"token decorator annotation punctuation\">@provide_number</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">100</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>    <span class=\"token keyword\">def</span> <span class=\"token function\">print_random_number</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> num<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>num<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre></pre></td></tr><tr><td data-num=\"32\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name\">Foo_1</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>    <span class=\"token decorator annotation punctuation\">@provide_number</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">100</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>    <span class=\"token decorator annotation punctuation\">@classmethod</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>    <span class=\"token keyword\">def</span> <span class=\"token function\">print_random_number</span><span class=\"token punctuation\">(</span>cls<span class=\"token punctuation\">,</span> num<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>num<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>print_random_number<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>Foo<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>print_random_number<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>Foo_1<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>print_random_number<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h3 id=\"装饰器并不是-装饰器模式\"><a class=\"anchor\" href=\"#装饰器并不是-装饰器模式\">#</a> 「装饰器」并不是 「装饰器模式」</h3>\n<p>装饰器只是语法糖，装饰器模式更像是 golang 里的中间件。通过函数的层层包裹达到扩展功能的目的。</p>\n<p>这是因为对象正在包围其他对象，它们共享相似的接口，并且装饰对象似乎掩盖或修改或注释了所包围的对象。</p>\n<blockquote>\n<p>Hint: 在 Python 官网上有一个 <span class=\"exturl\" data-url=\"aHR0cHM6Ly93aWtpLnB5dGhvbi5vcmcvbW9pbi9EZWNvcmF0b3JQYXR0ZXJu\">实现了装饰器模式的例子</span>，你可以读读这个例子来更好的了解它。</p>\n</blockquote>\n<h3 id=\"记得用-functoolswraps-装饰内层函数\"><a class=\"anchor\" href=\"#记得用-functoolswraps-装饰内层函数\">#</a> 记得用 functools.wraps () 装饰内层函数</h3>\n<p>保证函数保留正确的签名有时候可以避免不必要的麻烦。</p>\n<h3 id=\"修改外层变量时记得使用-nonlocal\"><a class=\"anchor\" href=\"#修改外层变量时记得使用-nonlocal\">#</a> 修改外层变量时记得使用 nonlocal</h3>\n<p>nonlocal 可以用来什么不属于 local 作用域内的变量，解析器会遵循 LEGB 的顺序进行查找。</p>\n<p>而默认不在 local 作用域的变量是只读的，修改则会创建一个新的对象。</p>\n<p>nonlocal 可以显示的把变量声明为「外层函数的局部变量」（E）。从而让修改得以生效。</p>\n",
            "tags": [
                "计算机科学",
                "学习笔记",
                "Python「工匠」",
                "Python「工匠」"
            ]
        },
        {
            "id": "https://allengx.gitee.io/computer-science/study/Python%E3%80%8C%E5%B7%A5%E5%8C%A0%E3%80%8D/%E4%B8%83%E3%80%81%E5%9C%B0%E9%81%93%E7%9A%84%E5%BE%AA%E7%8E%AF/",
            "url": "https://allengx.gitee.io/computer-science/study/Python%E3%80%8C%E5%B7%A5%E5%8C%A0%E3%80%8D/%E4%B8%83%E3%80%81%E5%9C%B0%E9%81%93%E7%9A%84%E5%BE%AA%E7%8E%AF/",
            "title": "七、地道的循环",
            "date_published": "2020-11-11T11:54:34.000Z",
            "content_html": "<div class=\"note info\">\n<p>以下为个人学习笔记整理</p>\n</div>\n<h2 id=\"地道的循环️\"><a class=\"anchor\" href=\"#地道的循环️\">#</a> 地道的循环♻️</h2>\n<h3 id=\"使用函数修饰被迭代对象来优化循环\"><a class=\"anchor\" href=\"#使用函数修饰被迭代对象来优化循环\">#</a> 使用函数修饰被迭代对象来优化循环</h3>\n<ul>\n<li>使用 product 扁平化多层嵌套循环： <code>product()</code>  可以接收多个可迭代对象，然后根据它们的笛卡尔积不断生成结果</li>\n</ul>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">product</span><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span>args<span class=\"token punctuation\">,</span> repeat<span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token comment\"># product('ABCD', 'xy') --> Ax Ay Bx By Cx Cy Dx Dy</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token comment\"># product(range(2), repeat=3) --> 000 001 010 011 100 101 110 111</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    pools <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token builtin\">tuple</span><span class=\"token punctuation\">(</span>pool<span class=\"token punctuation\">)</span> <span class=\"token keyword\">for</span> pool <span class=\"token keyword\">in</span> args<span class=\"token punctuation\">]</span> <span class=\"token operator\">*</span> repeat</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    result <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token keyword\">for</span> pool <span class=\"token keyword\">in</span> pools<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        result <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>x<span class=\"token operator\">+</span><span class=\"token punctuation\">[</span>y<span class=\"token punctuation\">]</span> <span class=\"token keyword\">for</span> x <span class=\"token keyword\">in</span> result <span class=\"token keyword\">for</span> y <span class=\"token keyword\">in</span> pool<span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token keyword\">for</span> prod <span class=\"token keyword\">in</span> result<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        <span class=\"token keyword\">yield</span> <span class=\"token builtin\">tuple</span><span class=\"token punctuation\">(</span>prod<span class=\"token punctuation\">)</span></pre></td></tr></table></figure><details class=\"info\"><summary>示例</summary><div>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">#------------ bad ------------</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">find_twelve</span><span class=\"token punctuation\">(</span>num_list1<span class=\"token punctuation\">,</span> num_list2<span class=\"token punctuation\">,</span> num_list3<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token triple-quoted-string string\">\"\"\"从 3 个数字列表中，寻找是否存在和为 12 的 3 个数\"\"\"</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token keyword\">for</span> num1 <span class=\"token keyword\">in</span> num_list1<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        <span class=\"token keyword\">for</span> num2 <span class=\"token keyword\">in</span> num_list2<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>            <span class=\"token keyword\">for</span> num3 <span class=\"token keyword\">in</span> num_list3<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>                <span class=\"token keyword\">if</span> num1 <span class=\"token operator\">+</span> num2 <span class=\"token operator\">+</span> num3 <span class=\"token operator\">==</span> <span class=\"token number\">12</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>                    <span class=\"token keyword\">return</span> num1<span class=\"token punctuation\">,</span> num2<span class=\"token punctuation\">,</span> num3</pre></td></tr><tr><td data-num=\"9\"></td><td><pre></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token comment\">#------------ good ------------</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token keyword\">from</span> itertools <span class=\"token keyword\">import</span> product</pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">find_twelve_v2</span><span class=\"token punctuation\">(</span>num_list1<span class=\"token punctuation\">,</span> num_list2<span class=\"token punctuation\">,</span> num_list3<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    <span class=\"token keyword\">for</span> num1<span class=\"token punctuation\">,</span> num2<span class=\"token punctuation\">,</span> num3 <span class=\"token keyword\">in</span> product<span class=\"token punctuation\">(</span>num_list1<span class=\"token punctuation\">,</span> num_list2<span class=\"token punctuation\">,</span> num_list3<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>        <span class=\"token keyword\">if</span> num1 <span class=\"token operator\">+</span> num2 <span class=\"token operator\">+</span> num3 <span class=\"token operator\">==</span> <span class=\"token number\">12</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>            <span class=\"token keyword\">return</span> num1<span class=\"token punctuation\">,</span> num2<span class=\"token punctuation\">,</span> num3</pre></td></tr></table></figure></div></details>\n<ul>\n<li>使用 islice 实现循环内隔行处理： <code>islice(seq, start, end, step)</code>  函数和数组切片操作（ list [start:stop:step] ），有点像 C 风格里的 <code>for</code></li>\n</ul>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">islice</span><span class=\"token punctuation\">(</span>iterable<span class=\"token punctuation\">,</span> <span class=\"token operator\">*</span>args<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token comment\"># islice('ABCDEFG', 2) --> A B</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token comment\"># islice('ABCDEFG', 2, 4) --> C D</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token comment\"># islice('ABCDEFG', 2, None) --> C D E F G</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token comment\"># islice('ABCDEFG', 0, None, 2) --> A C E G</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    s <span class=\"token operator\">=</span> <span class=\"token builtin\">slice</span><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span>args<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    start<span class=\"token punctuation\">,</span> stop<span class=\"token punctuation\">,</span> step <span class=\"token operator\">=</span> s<span class=\"token punctuation\">.</span>start <span class=\"token keyword\">or</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> s<span class=\"token punctuation\">.</span>stop <span class=\"token keyword\">or</span> sys<span class=\"token punctuation\">.</span>maxsize<span class=\"token punctuation\">,</span> s<span class=\"token punctuation\">.</span>step <span class=\"token keyword\">or</span> <span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    it <span class=\"token operator\">=</span> <span class=\"token builtin\">iter</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span>start<span class=\"token punctuation\">,</span> stop<span class=\"token punctuation\">,</span> step<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token keyword\">try</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        nexti <span class=\"token operator\">=</span> <span class=\"token builtin\">next</span><span class=\"token punctuation\">(</span>it<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token keyword\">except</span> StopIteration<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        <span class=\"token comment\"># Consume *iterable* up to the *start* position.</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>        <span class=\"token keyword\">for</span> i<span class=\"token punctuation\">,</span> element <span class=\"token keyword\">in</span> <span class=\"token builtin\">zip</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span>start<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> iterable<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>            <span class=\"token keyword\">pass</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>        <span class=\"token keyword\">return</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    <span class=\"token keyword\">try</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>        <span class=\"token keyword\">for</span> i<span class=\"token punctuation\">,</span> element <span class=\"token keyword\">in</span> <span class=\"token builtin\">enumerate</span><span class=\"token punctuation\">(</span>iterable<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>            <span class=\"token keyword\">if</span> i <span class=\"token operator\">==</span> nexti<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>                <span class=\"token keyword\">yield</span> element</pre></td></tr><tr><td data-num=\"20\"></td><td><pre>                nexti <span class=\"token operator\">=</span> <span class=\"token builtin\">next</span><span class=\"token punctuation\">(</span>it<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>    <span class=\"token keyword\">except</span> StopIteration<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>        <span class=\"token comment\"># Consume to *stop*.</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>        <span class=\"token keyword\">for</span> i<span class=\"token punctuation\">,</span> element <span class=\"token keyword\">in</span> <span class=\"token builtin\">zip</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span>i <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> stop<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> iterable<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>            <span class=\"token keyword\">pass</span></pre></td></tr></table></figure><details class=\"info\"><summary>示例</summary><div>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">#------------ bad ------------</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">parse_titles</span><span class=\"token punctuation\">(</span>filename<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token triple-quoted-string string\">\"\"\"从隔行数据文件中读取内容 \"\"\"</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token keyword\">with</span> <span class=\"token builtin\">open</span><span class=\"token punctuation\">(</span>filename<span class=\"token punctuation\">,</span> <span class=\"token string\">'r'</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> fp<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        <span class=\"token keyword\">for</span> i<span class=\"token punctuation\">,</span> line <span class=\"token keyword\">in</span> <span class=\"token builtin\">enumerate</span><span class=\"token punctuation\">(</span>fp<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>            <span class=\"token keyword\">if</span> i <span class=\"token operator\">%</span> <span class=\"token number\">2</span> <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>                <span class=\"token keyword\">yield</span> line<span class=\"token punctuation\">.</span>strip<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>                </pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token comment\">#------------ good ------------          </span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token keyword\">from</span> itertools <span class=\"token keyword\">import</span> islice</pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">parse_titles_v2</span><span class=\"token punctuation\">(</span>filename<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    <span class=\"token keyword\">with</span> <span class=\"token builtin\">open</span><span class=\"token punctuation\">(</span>filename<span class=\"token punctuation\">,</span> <span class=\"token string\">'r'</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> fp<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>        <span class=\"token keyword\">for</span> line <span class=\"token keyword\">in</span> islice<span class=\"token punctuation\">(</span>fp<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">None</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>            <span class=\"token keyword\">yield</span> line<span class=\"token punctuation\">.</span>strip<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure></div></details>\n<ul>\n<li>使用 takewhile 替代 break 语句： <code>takewhile(predicate, iterable)</code>  会在迭代  <code>iterable</code>  的过程中不断使用当前对象作为参数调用  <code>predicate</code>  函数并测试返回结果，如果函数返回值为真，则生成当前对象，循环继续。否则立即中断当前循环。</li>\n</ul>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">takewhile</span><span class=\"token punctuation\">(</span>predicate<span class=\"token punctuation\">,</span> iterable<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token comment\"># takewhile(lambda x: x&lt;5, [1,4,6,4,1]) --> 1 4</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token keyword\">for</span> x <span class=\"token keyword\">in</span> iterable<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>        <span class=\"token keyword\">if</span> predicate<span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>            <span class=\"token keyword\">yield</span> x</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>            <span class=\"token keyword\">break</span></pre></td></tr></table></figure><details class=\"info\"><summary>示例</summary><div>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">#------------ bad ------------</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">for</span> user <span class=\"token keyword\">in</span> users<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token comment\"># 当第一个不合格的用户出现后，不再进行后面的处理</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token keyword\">not</span> is_qualified<span class=\"token punctuation\">(</span>user<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        <span class=\"token keyword\">break</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token comment\"># do something...</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token comment\">#------------ good ------------  </span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token keyword\">from</span> itertools <span class=\"token keyword\">import</span> takewhile</pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token keyword\">for</span> user <span class=\"token keyword\">in</span> takewhile<span class=\"token punctuation\">(</span>is_qualified<span class=\"token punctuation\">,</span> users<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token comment\"># do something...</span></pre></td></tr></table></figure></div></details>\n<ul>\n<li>使用生成器编写自己的修饰函数</li>\n</ul>\n<details class=\"info\"><summary>示例</summary><div>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">#------------ bad ------------</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">sum_even_only</span><span class=\"token punctuation\">(</span>numbers<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token triple-quoted-string string\">\"\"\"对 numbers 里面所有的偶数求和\"\"\"</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    result <span class=\"token operator\">=</span> <span class=\"token number\">0</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token keyword\">for</span> num <span class=\"token keyword\">in</span> numbers<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        <span class=\"token keyword\">if</span> num <span class=\"token operator\">%</span> <span class=\"token number\">2</span> <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>            result <span class=\"token operator\">+=</span> num</pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token keyword\">return</span> result</pre></td></tr><tr><td data-num=\"9\"></td><td><pre></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token comment\">#------------ good ------------</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">even_only</span><span class=\"token punctuation\">(</span>numbers<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    <span class=\"token keyword\">for</span> num <span class=\"token keyword\">in</span> numbers<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>        <span class=\"token keyword\">if</span> num <span class=\"token operator\">%</span> <span class=\"token number\">2</span> <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>            <span class=\"token keyword\">yield</span> num</pre></td></tr><tr><td data-num=\"15\"></td><td><pre></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">sum_even_only_v2</span><span class=\"token punctuation\">(</span>numbers<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    <span class=\"token triple-quoted-string string\">\"\"\"对 numbers 里面所有的偶数求和\"\"\"</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    result <span class=\"token operator\">=</span> <span class=\"token number\">0</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>    <span class=\"token keyword\">for</span> num <span class=\"token keyword\">in</span> even_only<span class=\"token punctuation\">(</span>numbers<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>        result <span class=\"token operator\">+=</span> num</pre></td></tr><tr><td data-num=\"21\"></td><td><pre>    <span class=\"token keyword\">return</span> result</pre></td></tr></table></figure></div></details>\n<h3 id=\"按职责拆解循环体内复杂代码块\"><a class=\"anchor\" href=\"#按职责拆解循环体内复杂代码块\">#</a> 按职责拆解循环体内复杂代码块</h3>\n<p>循环内的很多操作，可能毫无关系，甚至循环本身和里面的操作关系也不大，这种时候可以考虑进行逻辑解耦。</p>\n<details class=\"info\"><summary>示例</summary><div>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">#------------ bad ------------</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">import</span> time</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">import</span> datetime</pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">award_active_users_in_last_30days</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token triple-quoted-string string\">\"\"\"获取所有在过去 30 天周末晚上 8 点到 10 点登录过的用户，为其发送奖励积分和通知\"\"\"</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    days <span class=\"token operator\">=</span> <span class=\"token number\">30</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token keyword\">for</span> days_delta <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span>days<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        dt <span class=\"token operator\">=</span> datetime<span class=\"token punctuation\">.</span>date<span class=\"token punctuation\">.</span>today<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> datetime<span class=\"token punctuation\">.</span>timedelta<span class=\"token punctuation\">(</span>days<span class=\"token operator\">=</span>days_delta<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        <span class=\"token comment\"># 5: Saturday, 6: Sunday</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        <span class=\"token keyword\">if</span> dt<span class=\"token punctuation\">.</span>weekday<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">not</span> <span class=\"token keyword\">in</span> <span class=\"token punctuation\">(</span><span class=\"token number\">5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">6</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>            <span class=\"token keyword\">continue</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>        time_start <span class=\"token operator\">=</span> datetime<span class=\"token punctuation\">.</span>datetime<span class=\"token punctuation\">(</span>dt<span class=\"token punctuation\">.</span>year<span class=\"token punctuation\">,</span> dt<span class=\"token punctuation\">.</span>month<span class=\"token punctuation\">,</span> dt<span class=\"token punctuation\">.</span>day<span class=\"token punctuation\">,</span> <span class=\"token number\">20</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>        time_end <span class=\"token operator\">=</span> datetime<span class=\"token punctuation\">.</span>datetime<span class=\"token punctuation\">(</span>dt<span class=\"token punctuation\">.</span>year<span class=\"token punctuation\">,</span> dt<span class=\"token punctuation\">.</span>month<span class=\"token punctuation\">,</span> dt<span class=\"token punctuation\">.</span>day<span class=\"token punctuation\">,</span> <span class=\"token number\">23</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>        <span class=\"token comment\"># 转换为 unix 时间戳，之后的 ORM 查询需要</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>        ts_start <span class=\"token operator\">=</span> time<span class=\"token punctuation\">.</span>mktime<span class=\"token punctuation\">(</span>time_start<span class=\"token punctuation\">.</span>timetuple<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>        ts_end <span class=\"token operator\">=</span> time<span class=\"token punctuation\">.</span>mktime<span class=\"token punctuation\">(</span>time_end<span class=\"token punctuation\">.</span>timetuple<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>        <span class=\"token comment\"># 查询用户并挨个发送 1000 奖励积分和通知</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>        <span class=\"token keyword\">for</span> record <span class=\"token keyword\">in</span> LoginRecord<span class=\"token punctuation\">.</span>filter_by_range<span class=\"token punctuation\">(</span>ts_start<span class=\"token punctuation\">,</span> ts_end<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>            <span class=\"token comment\"># 这里可以添加复杂逻辑</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>            send_awarding_points<span class=\"token punctuation\">(</span>record<span class=\"token punctuation\">.</span>user_id<span class=\"token punctuation\">,</span> <span class=\"token number\">1000</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>            notify_nonsleep_users<span class=\"token punctuation\">(</span>record<span class=\"token punctuation\">.</span>user_id<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre></pre></td></tr><tr><td data-num=\"26\"></td><td><pre><span class=\"token comment\">#------------ good ------------</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">gen_weekend_ts_ranges</span><span class=\"token punctuation\">(</span>days_ago<span class=\"token punctuation\">,</span> hour_start<span class=\"token punctuation\">,</span> hour_end<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>    <span class=\"token triple-quoted-string string\">\"\"\"生成过去一段时间内周六日特定时间段范围，并以 UNIX 时间戳返回\"\"\"</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>    <span class=\"token keyword\">for</span> days_delta <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span>days_ago<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>        dt <span class=\"token operator\">=</span> datetime<span class=\"token punctuation\">.</span>date<span class=\"token punctuation\">.</span>today<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> datetime<span class=\"token punctuation\">.</span>timedelta<span class=\"token punctuation\">(</span>days<span class=\"token operator\">=</span>days_delta<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>        <span class=\"token comment\"># 5: Saturday, 6: Sunday</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>        <span class=\"token keyword\">if</span> dt<span class=\"token punctuation\">.</span>weekday<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">not</span> <span class=\"token keyword\">in</span> <span class=\"token punctuation\">(</span><span class=\"token number\">5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">6</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>            <span class=\"token keyword\">continue</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>        time_start <span class=\"token operator\">=</span> datetime<span class=\"token punctuation\">.</span>datetime<span class=\"token punctuation\">(</span>dt<span class=\"token punctuation\">.</span>year<span class=\"token punctuation\">,</span> dt<span class=\"token punctuation\">.</span>month<span class=\"token punctuation\">,</span> dt<span class=\"token punctuation\">.</span>day<span class=\"token punctuation\">,</span> hour_start<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>        time_end <span class=\"token operator\">=</span> datetime<span class=\"token punctuation\">.</span>datetime<span class=\"token punctuation\">(</span>dt<span class=\"token punctuation\">.</span>year<span class=\"token punctuation\">,</span> dt<span class=\"token punctuation\">.</span>month<span class=\"token punctuation\">,</span> dt<span class=\"token punctuation\">.</span>day<span class=\"token punctuation\">,</span> hour_end<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>        <span class=\"token comment\"># 转换为 unix 时间戳，之后的 ORM 查询需要</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>        ts_start <span class=\"token operator\">=</span> time<span class=\"token punctuation\">.</span>mktime<span class=\"token punctuation\">(</span>time_start<span class=\"token punctuation\">.</span>timetuple<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>        ts_end <span class=\"token operator\">=</span> time<span class=\"token punctuation\">.</span>mktime<span class=\"token punctuation\">(</span>time_end<span class=\"token punctuation\">.</span>timetuple<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>        <span class=\"token keyword\">yield</span> ts_start<span class=\"token punctuation\">,</span> ts_end</pre></td></tr><tr><td data-num=\"42\"></td><td><pre>        </pre></td></tr><tr><td data-num=\"43\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">award_active_users_in_last_30days_v2</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>    <span class=\"token triple-quoted-string string\">\"\"\"发送奖励积分\"\"\"</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>    <span class=\"token keyword\">for</span> ts_start<span class=\"token punctuation\">,</span> ts_end <span class=\"token keyword\">in</span> gen_weekend_ts_ranges<span class=\"token punctuation\">(</span><span class=\"token number\">30</span><span class=\"token punctuation\">,</span> hour_start<span class=\"token operator\">=</span><span class=\"token number\">20</span><span class=\"token punctuation\">,</span> hour_end<span class=\"token operator\">=</span><span class=\"token number\">23</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>        <span class=\"token keyword\">for</span> record <span class=\"token keyword\">in</span> LoginRecord<span class=\"token punctuation\">.</span>filter_by_range<span class=\"token punctuation\">(</span>ts_start<span class=\"token punctuation\">,</span> ts_end<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>            send_awarding_points<span class=\"token punctuation\">(</span>record<span class=\"token punctuation\">.</span>user_id<span class=\"token punctuation\">,</span> <span class=\"token number\">1000</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre></pre></td></tr><tr><td data-num=\"49\"></td><td><pre></pre></td></tr><tr><td data-num=\"50\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">notify_nonsleep_users_in_last_30days</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre>    <span class=\"token triple-quoted-string string\">\"\"\"发送通知\"\"\"</span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre>    <span class=\"token keyword\">for</span> ts_start<span class=\"token punctuation\">,</span> ts_end <span class=\"token keyword\">in</span> gen_weekend_ts_range<span class=\"token punctuation\">(</span><span class=\"token number\">30</span><span class=\"token punctuation\">,</span> hour_start<span class=\"token operator\">=</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span> hour_end<span class=\"token operator\">=</span><span class=\"token number\">6</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre>        <span class=\"token keyword\">for</span> record <span class=\"token keyword\">in</span> LoginRecord<span class=\"token punctuation\">.</span>filter_by_range<span class=\"token punctuation\">(</span>ts_start<span class=\"token punctuation\">,</span> ts_end<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre>            notify_user<span class=\"token punctuation\">(</span>record<span class=\"token punctuation\">.</span>user_id<span class=\"token punctuation\">,</span> <span class=\"token string\">'You should sleep more'</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure></div></details>\n",
            "tags": [
                "计算机科学",
                "学习笔记",
                "Python「工匠」",
                "Python「工匠」"
            ]
        },
        {
            "id": "https://allengx.gitee.io/computer-science/study/Python%E3%80%8C%E5%B7%A5%E5%8C%A0%E3%80%8D/%E5%85%AD%E3%80%81%E5%BC%82%E5%B8%B8%E5%A4%84%E7%90%86/",
            "url": "https://allengx.gitee.io/computer-science/study/Python%E3%80%8C%E5%B7%A5%E5%8C%A0%E3%80%8D/%E5%85%AD%E3%80%81%E5%BC%82%E5%B8%B8%E5%A4%84%E7%90%86/",
            "title": "六、异常处理",
            "date_published": "2020-11-11T08:39:34.000Z",
            "content_html": "<div class=\"note info\">\n<p>以下为个人学习笔记整理</p>\n</div>\n<h2 id=\"异常处理️\"><a class=\"anchor\" href=\"#异常处理️\">#</a> 异常处理❗️</h2>\n<h3 id=\"只做最精确的异常捕获\"><a class=\"anchor\" href=\"#只做最精确的异常捕获\">#</a> 只做最精确的异常捕获</h3>\n<p>捕获异常并不是为了让你的代码不提示异常，而是为了解决你已经设想过的异常。</p>\n<p>如果一个异常并不在你的思考范围内，那么对异常的处理手段往往也会不那么有效，所以尽早暴露出来为好。</p>\n<details class=\"info\"><summary>示例</summary><div>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">#------------ bad ------------</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">try</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>\t<span class=\"token comment\"># ... 其他逻辑代码</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>\t<span class=\"token keyword\">with</span> <span class=\"token builtin\">open</span><span class=\"token punctuation\">(</span>filename<span class=\"token punctuation\">,</span> <span class=\"token string\">'w'</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> fp<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>\t\tfp<span class=\"token punctuation\">.</span>write<span class=\"token punctuation\">(</span>title<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">except</span> Exception<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>\t<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f'save failed: unable to save title of </span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>url<span class=\"token punctuation\">&#125;</span></span><span class=\"token string\"> to </span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>filename<span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">'</span></span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token comment\">#------------ good ------------</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token keyword\">try</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>\t<span class=\"token keyword\">with</span> <span class=\"token builtin\">open</span><span class=\"token punctuation\">(</span>filename<span class=\"token punctuation\">,</span> <span class=\"token string\">'w'</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> fp<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>\t\tfp<span class=\"token punctuation\">.</span>write<span class=\"token punctuation\">(</span>title<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token keyword\">except</span> IOError <span class=\"token keyword\">as</span> e<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>\t<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f'save failed: unable to write to file </span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>filename<span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">: </span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>e<span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">'</span></span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure></div></details>\n<h3 id=\"别让异常破坏抽象一致性\"><a class=\"anchor\" href=\"#别让异常破坏抽象一致性\">#</a> 别让异常破坏抽象一致性</h3>\n<p>异常的内容或者说异常本身的抽象应该符合当时的使用场景。</p>\n<p>例如一个加载文件操作返回的异常最好是文件加载失败而不是 IO 失败。</p>\n<details class=\"info\"><summary>示例</summary><div>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">#------------ bad ------------</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">process_image</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token keyword\">try</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>        image <span class=\"token operator\">=</span> Image<span class=\"token punctuation\">.</span><span class=\"token builtin\">open</span><span class=\"token punctuation\">(</span>fp<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token keyword\">except</span> Exception<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        <span class=\"token keyword\">raise</span> error_codes<span class=\"token punctuation\">.</span>INVALID_IMAGE_UPLOADED</pre></td></tr><tr><td data-num=\"7\"></td><td><pre>\t</pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token comment\">#------------ good ------------</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">process_image</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token keyword\">try</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        image <span class=\"token operator\">=</span> Image<span class=\"token punctuation\">.</span><span class=\"token builtin\">open</span><span class=\"token punctuation\">(</span>fp<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    <span class=\"token keyword\">except</span> Exception <span class=\"token keyword\">as</span> e<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>        <span class=\"token keyword\">raise</span> ImageOpenError<span class=\"token punctuation\">(</span>exc<span class=\"token operator\">=</span>e<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">foo_view_function</span><span class=\"token punctuation\">(</span>request<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    <span class=\"token keyword\">try</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>        process_image<span class=\"token punctuation\">(</span>fp<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    <span class=\"token keyword\">except</span> ImageOpenError<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>        <span class=\"token keyword\">raise</span> error_codes<span class=\"token punctuation\">.</span>INVALID_IMAGE_UPLOADED</pre></td></tr></table></figure></div></details>\n<h3 id=\"异常处理不应该喧宾夺主\"><a class=\"anchor\" href=\"#异常处理不应该喧宾夺主\">#</a> 异常处理不应该喧宾夺主</h3>\n<p>对不同的异常进行处理，会导致<strong>异常处理逻辑太多，以至于扰乱了代码核心逻辑</strong></p>\n<p>可以通过上下文管理器（context manager）来进行解决，通过 with 关键字。</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name\">raise_api_error</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token keyword\">def</span> <span class=\"token function\">__init__</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> captures<span class=\"token punctuation\">,</span> code<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>        self<span class=\"token punctuation\">.</span>captures <span class=\"token operator\">=</span> captures</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>        self<span class=\"token punctuation\">.</span>code <span class=\"token operator\">=</span> code</pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token keyword\">def</span> <span class=\"token function\">__enter__</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        <span class=\"token comment\"># 该方法将在进入上下文时调用</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        <span class=\"token keyword\">return</span> self</pre></td></tr><tr><td data-num=\"9\"></td><td><pre></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token keyword\">def</span> <span class=\"token function\">__exit__</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> exc_type<span class=\"token punctuation\">,</span> exc_val<span class=\"token punctuation\">,</span> exc_tb<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        <span class=\"token comment\"># 该方法将在退出上下文时调用</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        <span class=\"token comment\"># exc_type, exc_val, exc_tb 分别表示该上下文内抛出的</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>        <span class=\"token comment\"># 异常类型、异常值、错误栈</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>        <span class=\"token keyword\">if</span> exc_type <span class=\"token keyword\">is</span> <span class=\"token boolean\">None</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>            <span class=\"token keyword\">return</span> <span class=\"token boolean\">False</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>        <span class=\"token keyword\">if</span> exc_type <span class=\"token operator\">==</span> self<span class=\"token punctuation\">.</span>captures<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>            <span class=\"token keyword\">raise</span> self<span class=\"token punctuation\">.</span>code <span class=\"token keyword\">from</span> exc_val</pre></td></tr><tr><td data-num=\"19\"></td><td><pre>        <span class=\"token keyword\">return</span> <span class=\"token boolean\">False</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>    </pre></td></tr><tr><td data-num=\"21\"></td><td><pre><span class=\"token keyword\">with</span> raise_api_error<span class=\"token punctuation\">(</span>KeyError<span class=\"token punctuation\">,</span> MyException<span class=\"token punctuation\">(</span><span class=\"token string\">\"do something fail with KeyError\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>\t<span class=\"token comment\"># do something...</span></pre></td></tr></table></figure><details class=\"info\"><summary>示例</summary><div>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">#------------ bad ------------</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">upload_avatar</span><span class=\"token punctuation\">(</span>request<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token triple-quoted-string string\">\"\"\"用户上传新头像\"\"\"</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token keyword\">try</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        avatar_file <span class=\"token operator\">=</span> request<span class=\"token punctuation\">.</span>FILES<span class=\"token punctuation\">[</span><span class=\"token string\">'avatar'</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token keyword\">except</span> KeyError<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        <span class=\"token keyword\">raise</span> error_codes<span class=\"token punctuation\">.</span>AVATAR_FILE_NOT_PROVIDED</pre></td></tr><tr><td data-num=\"8\"></td><td><pre></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token keyword\">try</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>       resized_avatar_file <span class=\"token operator\">=</span> resize_avatar<span class=\"token punctuation\">(</span>avatar_file<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token keyword\">except</span> FileTooLargeError <span class=\"token keyword\">as</span> e<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        <span class=\"token keyword\">raise</span> error_codes<span class=\"token punctuation\">.</span>AVATAR_FILE_TOO_LARGE</pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    <span class=\"token keyword\">except</span> ResizeAvatarError <span class=\"token keyword\">as</span> e<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>        <span class=\"token keyword\">raise</span> error_codes<span class=\"token punctuation\">.</span>AVATAR_FILE_INVALID</pre></td></tr><tr><td data-num=\"15\"></td><td><pre></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    <span class=\"token keyword\">try</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>        request<span class=\"token punctuation\">.</span>user<span class=\"token punctuation\">.</span>avatar <span class=\"token operator\">=</span> resized_avatar_file</pre></td></tr><tr><td data-num=\"18\"></td><td><pre>        request<span class=\"token punctuation\">.</span>user<span class=\"token punctuation\">.</span>save<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>    <span class=\"token keyword\">except</span> Exception<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>        <span class=\"token keyword\">raise</span> error_codes<span class=\"token punctuation\">.</span>INTERNAL_SERVER_ERROR</pre></td></tr><tr><td data-num=\"21\"></td><td><pre>    <span class=\"token keyword\">return</span> HttpResponse<span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre></pre></td></tr><tr><td data-num=\"23\"></td><td><pre><span class=\"token comment\">#------------ good ------------</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">upload_avatar</span><span class=\"token punctuation\">(</span>request<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>    <span class=\"token triple-quoted-string string\">\"\"\"用户上传新头像\"\"\"</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>    <span class=\"token keyword\">with</span> raise_api_error<span class=\"token punctuation\">(</span>KeyError<span class=\"token punctuation\">,</span> <span class=\"token string\">'AVATAR_FILE_NOT_PROVIDED'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>        avatar_file <span class=\"token operator\">=</span> request<span class=\"token punctuation\">.</span>FILES<span class=\"token punctuation\">[</span><span class=\"token string\">'avatar'</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>    <span class=\"token keyword\">with</span> raise_api_error<span class=\"token punctuation\">(</span>ResizeAvatarError<span class=\"token punctuation\">,</span> <span class=\"token string\">'AVATAR_FILE_INVALID'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\\</pre></td></tr><tr><td data-num=\"30\"></td><td><pre>            raise_api_error<span class=\"token punctuation\">(</span>FileTooLargeError<span class=\"token punctuation\">,</span> <span class=\"token string\">'AVATAR_FILE_TOO_LARGE'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>        resized_avatar_file <span class=\"token operator\">=</span> resize_avatar<span class=\"token punctuation\">(</span>avatar_file<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>    <span class=\"token keyword\">with</span> raise_api_error<span class=\"token punctuation\">(</span>Exception<span class=\"token punctuation\">,</span> <span class=\"token string\">'INTERNAL_SERVER_ERROR'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>        request<span class=\"token punctuation\">.</span>user<span class=\"token punctuation\">.</span>avatar <span class=\"token operator\">=</span> resized_avatar_file</pre></td></tr><tr><td data-num=\"35\"></td><td><pre>        request<span class=\"token punctuation\">.</span>user<span class=\"token punctuation\">.</span>save<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>    <span class=\"token keyword\">return</span> HttpResponse<span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure></div></details>\n",
            "tags": [
                "计算机科学",
                "学习笔记",
                "Python「工匠」",
                "Python「工匠」"
            ]
        },
        {
            "id": "https://allengx.gitee.io/computer-science/study/Python%E3%80%8C%E5%B7%A5%E5%8C%A0%E3%80%8D/%E4%BA%94%E3%80%81%E8%AE%A9%E5%87%BD%E6%95%B0%E8%BF%94%E5%9B%9E%E7%BB%93%E6%9E%9C%E7%9A%84%E6%8A%80%E5%B7%A7/",
            "url": "https://allengx.gitee.io/computer-science/study/Python%E3%80%8C%E5%B7%A5%E5%8C%A0%E3%80%8D/%E4%BA%94%E3%80%81%E8%AE%A9%E5%87%BD%E6%95%B0%E8%BF%94%E5%9B%9E%E7%BB%93%E6%9E%9C%E7%9A%84%E6%8A%80%E5%B7%A7/",
            "title": "五、让函数返回结果的技巧",
            "date_published": "2020-11-10T13:39:34.000Z",
            "content_html": "<div class=\"note info\">\n<p>以下为个人学习笔记整理</p>\n</div>\n<h2 id=\"函数返回结果\"><a class=\"anchor\" href=\"#函数返回结果\">#</a> 函数返回结果💎</h2>\n<h3 id=\"单个函数只返回单个类型结果\"><a class=\"anchor\" href=\"#单个函数只返回单个类型结果\">#</a> 单个函数只返回单个类型结果</h3>\n<ul>\n<li>一个函数的返回类型如果无法确定，那么不如拆成多个。</li>\n</ul>\n<details class=\"info\"><summary>示例</summary><div>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">#------------ bad ------------</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">get_users</span><span class=\"token punctuation\">(</span>user_id<span class=\"token operator\">=</span><span class=\"token boolean\">None</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token keyword\">if</span> user_id <span class=\"token keyword\">is</span> <span class=\"token keyword\">not</span> <span class=\"token boolean\">None</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>        <span class=\"token keyword\">return</span> User<span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span>user_id<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        <span class=\"token keyword\">return</span> User<span class=\"token punctuation\">.</span><span class=\"token builtin\">filter</span><span class=\"token punctuation\">(</span>is_active<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        </pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token comment\">#------------ good ------------</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">get_one_user</span><span class=\"token punctuation\">(</span>user_id<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>\t<span class=\"token keyword\">return</span> User<span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span>user_id<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">get_users</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>\t<span class=\"token keyword\">return</span> User<span class=\"token punctuation\">.</span><span class=\"token builtin\">filter</span><span class=\"token punctuation\">(</span>is_active<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure></div></details>\n<h3 id=\"适当-partial-构造新函数\"><a class=\"anchor\" href=\"#适当-partial-构造新函数\">#</a> 适当 partial 构造新函数</h3>\n<ul>\n<li>partial 可以帮助我们更好的包装函数和参数，使得一些参数内容可以通过函数传递。</li>\n</ul>\n<details class=\"info\"><summary>示例</summary><div>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">#------------ bad ------------</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">multiply</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">,</span> y<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token keyword\">return</span> x <span class=\"token operator\">*</span> y</pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">double</span><span class=\"token punctuation\">(</span>value<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token comment\"># 返回另一个函数调用结果</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token keyword\">return</span> multiply<span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span> value<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token comment\">#------------ good ------------</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token keyword\">import</span> functools</pre></td></tr><tr><td data-num=\"11\"></td><td><pre>double <span class=\"token operator\">=</span> functools<span class=\"token punctuation\">.</span>partial<span class=\"token punctuation\">(</span>multiply<span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure></div></details>\n<blockquote>\n<p>需要热更新的情况下，尽量避免使用 partial，因为 partial 包裹的函数参数往往无法被更新到。</p>\n</blockquote>\n<h3 id=\"抛出异常-or-返回错误码\"><a class=\"anchor\" href=\"#抛出异常-or-返回错误码\">#</a> 抛出异常 or 返回错误码</h3>\n<p>返回值里包含返回内容和执行结果往往是一个不错的选择，但这种做法不够 pythonic，使用异常有时候能够让代码变得更统一</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">#------------ goic ------------</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">create_item</span><span class=\"token punctuation\">(</span>name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>name<span class=\"token punctuation\">)</span> <span class=\"token operator\">></span> MAX_LENGTH_OF_NAME<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>        <span class=\"token keyword\">return</span> <span class=\"token boolean\">None</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'name of item is too long'</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>CURRENT_ITEMS<span class=\"token punctuation\">)</span> <span class=\"token operator\">></span> MAX_ITEMS_QUOTA<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        <span class=\"token keyword\">return</span> <span class=\"token boolean\">None</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'items is full'</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token keyword\">return</span> Item<span class=\"token punctuation\">(</span>name<span class=\"token operator\">=</span>name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token string\">''</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token comment\">#------------ pythonic ------------</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">create_item</span><span class=\"token punctuation\">(</span>name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>name<span class=\"token punctuation\">)</span> <span class=\"token operator\">></span> MAX_LENGTH_OF_NAME<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        <span class=\"token keyword\">raise</span> CreateItemError<span class=\"token punctuation\">(</span><span class=\"token string\">'name of item is too long'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>CURRENT_ITEMS<span class=\"token punctuation\">)</span> <span class=\"token operator\">></span> MAX_ITEMS_QUOTA<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>        <span class=\"token keyword\">raise</span> CreateItemError<span class=\"token punctuation\">(</span><span class=\"token string\">'items is full'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    <span class=\"token keyword\">return</span> Item<span class=\"token punctuation\">(</span>name<span class=\"token operator\">=</span>name<span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h3 id=\"使用生成器函数代替返回列表\"><a class=\"anchor\" href=\"#使用生成器函数代替返回列表\">#</a> 使用生成器函数代替返回列表</h3>\n<p>这个仁者见仁智者见智了，最开始使用可能会有些变扭，不过确实能够让代码变得更加美观。</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">foo_func</span><span class=\"token punctuation\">(</span>items<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token keyword\">for</span> item <span class=\"token keyword\">in</span> items<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>        <span class=\"token comment\"># ... 处理 item 后直接使用 yield 返回</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>        <span class=\"token keyword\">yield</span> item</pre></td></tr></table></figure><h3 id=\"限制递归的使用\"><a class=\"anchor\" href=\"#限制递归的使用\">#</a> 限制递归的使用</h3>\n<ul>\n<li>python 对于递归的支持有限，Python 语言不支持<span class=\"exturl\" data-url=\"aHR0cHM6Ly9lbi53aWtpcGVkaWEub3JnL3dpa2kvVGFpbF9jYWxs\"> “尾递归优化”</span>，且对于递归层数有限制。</li>\n<li>递归本身对于代码的阅读和调试也是令人头疼的问题。</li>\n</ul>\n",
            "tags": [
                "计算机科学",
                "学习笔记",
                "Python「工匠」",
                "Python「工匠」"
            ]
        },
        {
            "id": "https://allengx.gitee.io/computer-science/study/Python%E3%80%8C%E5%B7%A5%E5%8C%A0%E3%80%8D/%E5%9B%9B%E3%80%81%E5%AE%B9%E5%99%A8%E7%9A%84%E9%97%A8%E9%81%93/",
            "url": "https://allengx.gitee.io/computer-science/study/Python%E3%80%8C%E5%B7%A5%E5%8C%A0%E3%80%8D/%E5%9B%9B%E3%80%81%E5%AE%B9%E5%99%A8%E7%9A%84%E9%97%A8%E9%81%93/",
            "title": "四、容器的门道",
            "date_published": "2020-11-09T08:04:34.000Z",
            "content_html": "<div class=\"note info\">\n<p>以下为个人学习笔记整理</p>\n</div>\n<h2 id=\"容器的门道\"><a class=\"anchor\" href=\"#容器的门道\">#</a> 容器的门道🍼</h2>\n<h3 id=\"迭代器替代列表\"><a class=\"anchor\" href=\"#迭代器替代列表\">#</a> 迭代器替代列表</h3>\n<p>相比于列表在每次遍历前，把所有数据准备好来说。使用迭代器就像是「赶鸭子」，你的鞭策是它前进的动力。这样可以让代码的运行变得平滑（减小峰值），并且降低内存消耗。</p>\n<ul>\n<li>\n<p>生成器表达式： <code>(i for i in range(100))</code>  👍</p>\n</li>\n<li>\n<p>列表推导表达式： <code>[i for i in range(100)]</code></p>\n</li>\n</ul>\n<h3 id=\"合理使用双端队列deque\"><a class=\"anchor\" href=\"#合理使用双端队列deque\">#</a> 合理使用双端队列「deque」</h3>\n<ul>\n<li>对头部的插入删除时间复杂度都是 O (1)，比  <code>list</code>  可划算多了</li>\n</ul>\n<h3 id=\"查找操作建议使用-setdict\"><a class=\"anchor\" href=\"#查找操作建议使用-setdict\">#</a> 查找操作建议使用  <code>set/dict</code></h3>\n<ul>\n<li>两者都是基于  <code>hashtable</code>  ，查找时复杂度是 O (1)，相比于  <code>list</code>  来说可快太多了。</li>\n<li>有关各个数据结构时间复杂度的描述： <span class=\"exturl\" data-url=\"aHR0cHM6Ly93aWtpLnB5dGhvbi5vcmcvbW9pbi9UaW1lQ29tcGxleGl0eQ==\">TimeComplexity - Python Wiki</span></li>\n<li>Raymond Hettinger 的演讲 <span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cueW91dHViZS5jb20vd2F0Y2g/dj1wMzNDVlYyOU9HOCZhbXA7dD0xNDAzcw==\">Modern Dictionaries(YouTube)</span></li>\n</ul>\n<h3 id=\"高层看容器\"><a class=\"anchor\" href=\"#高层看容器\">#</a> 高层看容器</h3>\n<ul>\n<li>容器其实就是多个接口实现的集合：\n<ul>\n<li><strong>列表（list）</strong>：满足  <code>Iterable</code> 、 <code>Sequence</code> 、 <code>MutableSequence</code>  等接口</li>\n<li><strong>元组（tuple）</strong>：满足  <code>Iterable</code> 、 <code>Sequence</code></li>\n<li><strong>字典（dict）</strong>：满足  <code>Iterable</code> 、 <code>Mapping</code> 、 <code>MutableMapping</code></li>\n<li><strong>集合（set）</strong>：满足  <code>Iterable</code> 、 <code>Set</code> 、 <code>MutableSet</code></li>\n</ul>\n</li>\n<li>面向接口编程，<strong>更多的关注容器的抽象属性，而非容器类型本身</strong>。</li>\n</ul>\n<h3 id=\"使用元组改善分支代码\"><a class=\"anchor\" href=\"#使用元组改善分支代码\">#</a> 使用元组改善分支代码</h3>\n<details class=\"info\"><summary>示例</summary><div>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">#------------ bad ------------</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">from_now</span><span class=\"token punctuation\">(</span>ts<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token triple-quoted-string string\">\"\"\"接收一个过去的时间戳，返回距离当前时间的相对时间文字描述</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    \"\"\"</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    now <span class=\"token operator\">=</span> time<span class=\"token punctuation\">.</span>time<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    seconds_delta <span class=\"token operator\">=</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>now <span class=\"token operator\">-</span> ts<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token keyword\">if</span> seconds_delta <span class=\"token operator\">&lt;</span> <span class=\"token number\">1</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        <span class=\"token keyword\">return</span> <span class=\"token string\">\"less than 1 second ago\"</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token keyword\">elif</span> seconds_delta <span class=\"token operator\">&lt;</span> <span class=\"token number\">60</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        <span class=\"token keyword\">return</span> <span class=\"token string\">\"&#123;&#125; seconds ago\"</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">format</span><span class=\"token punctuation\">(</span>seconds_delta<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token keyword\">elif</span> seconds_delta <span class=\"token operator\">&lt;</span> <span class=\"token number\">3600</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        <span class=\"token keyword\">return</span> <span class=\"token string\">\"&#123;&#125; minutes ago\"</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">format</span><span class=\"token punctuation\">(</span>seconds_delta <span class=\"token operator\">//</span> <span class=\"token number\">60</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    <span class=\"token keyword\">elif</span> seconds_delta <span class=\"token operator\">&lt;</span> <span class=\"token number\">3600</span> <span class=\"token operator\">*</span> <span class=\"token number\">24</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>        <span class=\"token keyword\">return</span> <span class=\"token string\">\"&#123;&#125; hours ago\"</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">format</span><span class=\"token punctuation\">(</span>seconds_delta <span class=\"token operator\">//</span> <span class=\"token number\">3600</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>        <span class=\"token keyword\">return</span> <span class=\"token string\">\"&#123;&#125; days ago\"</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">format</span><span class=\"token punctuation\">(</span>seconds_delta <span class=\"token operator\">//</span> <span class=\"token punctuation\">(</span><span class=\"token number\">3600</span> <span class=\"token operator\">*</span> <span class=\"token number\">24</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>        </pre></td></tr><tr><td data-num=\"18\"></td><td><pre><span class=\"token comment\">#------------ good ------------</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre><span class=\"token keyword\">import</span> bisect</pre></td></tr><tr><td data-num=\"20\"></td><td><pre><span class=\"token comment\"># BREAKPOINTS 必须是已经排好序的，不然无法进行二分查找</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>BREAKPOINTS <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">60</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3600</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3600</span> <span class=\"token operator\">*</span> <span class=\"token number\">24</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>TMPLS <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>    <span class=\"token comment\"># unit, template</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>    <span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"less than 1 second ago\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>    <span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"&#123;units&#125; seconds ago\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>    <span class=\"token punctuation\">(</span><span class=\"token number\">60</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"&#123;units&#125; minutes ago\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>    <span class=\"token punctuation\">(</span><span class=\"token number\">3600</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"&#123;units&#125; hours ago\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>    <span class=\"token punctuation\">(</span><span class=\"token number\">3600</span> <span class=\"token operator\">*</span> <span class=\"token number\">24</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"&#123;units&#125; days ago\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre></pre></td></tr><tr><td data-num=\"31\"></td><td><pre></pre></td></tr><tr><td data-num=\"32\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">from_now</span><span class=\"token punctuation\">(</span>ts<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>    <span class=\"token triple-quoted-string string\">\"\"\"接收一个过去的时间戳，返回距离当前时间的相对时间文字描述</pre></td></tr><tr><td data-num=\"34\"></td><td><pre>    \"\"\"</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>    seconds_delta <span class=\"token operator\">=</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>time<span class=\"token punctuation\">.</span>time<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> ts<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>    unit<span class=\"token punctuation\">,</span> tmpl <span class=\"token operator\">=</span> TMPLS<span class=\"token punctuation\">[</span>bisect<span class=\"token punctuation\">.</span>bisect<span class=\"token punctuation\">(</span>BREAKPOINTS<span class=\"token punctuation\">,</span> seconds_delta<span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>    <span class=\"token keyword\">return</span> tmpl<span class=\"token punctuation\">.</span><span class=\"token builtin\">format</span><span class=\"token punctuation\">(</span>units<span class=\"token operator\">=</span>seconds_delta <span class=\"token operator\">//</span> unit<span class=\"token punctuation\">)</span></pre></td></tr></table></figure></div></details>\n<h3 id=\"合理使用\"><a class=\"anchor\" href=\"#合理使用\">#</a> 合理使用  <code>*</code> 、 <code>**</code></h3>\n<ul>\n<li>快速合并两个字典   <code>dict(**dict_1, **dict_2)</code></li>\n</ul>\n<h3 id=\"使用-next-来进行遍历\"><a class=\"anchor\" href=\"#使用-next-来进行遍历\">#</a> 使用 next () 来进行遍历</h3>\n<ul>\n<li><code>next()</code>  接收一个迭代器作为参数，然后返回该迭代器的下一个元素。可以实现高效的查询。</li>\n</ul>\n<details class=\"info\"><summary>示例</summary><div>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">next</span><span class=\"token punctuation\">(</span>i <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">7</span><span class=\"token punctuation\">,</span> <span class=\"token number\">8</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">21</span><span class=\"token punctuation\">]</span> <span class=\"token keyword\">if</span> i <span class=\"token operator\">%</span> <span class=\"token number\">2</span> <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token comment\"># OUTPUT: 8</span></pre></td></tr></table></figure></div></details>\n<h3 id=\"使用有序字段实现去重\"><a class=\"anchor\" href=\"#使用有序字段实现去重\">#</a> 使用有序字段实现去重</h3>\n<ul>\n<li>常规去重过程中会把成员原本的顺序打乱，这里可以考虑使用有序字典来避免该问题产生</li>\n</ul>\n<details class=\"info\"><summary>示例</summary><div>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>l <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">10</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">21</span><span class=\"token punctuation\">,</span> <span class=\"token number\">10</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token builtin\">set</span><span class=\"token punctuation\">(</span>l<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\"># OUTPUT: &#123;3, 10, 2, 21&#125;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">from</span> collections <span class=\"token keyword\">import</span> OrderedDict</pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token builtin\">list</span><span class=\"token punctuation\">(</span>OrderedDict<span class=\"token punctuation\">.</span>fromkeys<span class=\"token punctuation\">(</span>l<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>keys<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token comment\"># OUTPUT: [10, 2, 3, 21]</span></pre></td></tr></table></figure></div></details>\n<blockquote>\n<p>在 Python 3.6 中，字典已经变成有序的了。并且在 Python 3.7 中，该功能已经从 <strong>语言的实现细节</strong> 变成了为 <strong>可依赖的正式语言特性</strong>。</p>\n</blockquote>\n<h2 id=\"生词表\"><a class=\"anchor\" href=\"#生词表\">#</a> 生词表</h2>\n<ul>\n<li>siphash 算法</li>\n<li>compact dict</li>\n<li>key-sharing dict</li>\n</ul>\n",
            "tags": [
                "计算机科学",
                "学习笔记",
                "Python「工匠」",
                "Python「工匠」"
            ]
        },
        {
            "id": "https://allengx.gitee.io/computer-science/study/Python%E3%80%8C%E5%B7%A5%E5%8C%A0%E3%80%8D/%E4%B8%89%E3%80%81%E6%95%B0%E5%AD%97%E4%B8%8E%E5%AD%97%E7%AC%A6%E4%B8%B2/",
            "url": "https://allengx.gitee.io/computer-science/study/Python%E3%80%8C%E5%B7%A5%E5%8C%A0%E3%80%8D/%E4%B8%89%E3%80%81%E6%95%B0%E5%AD%97%E4%B8%8E%E5%AD%97%E7%AC%A6%E4%B8%B2/",
            "title": "三、数字与字符串",
            "date_published": "2020-11-06T08:04:34.000Z",
            "content_html": "<div class=\"note info\">\n<p>以下为个人学习笔记整理</p>\n</div>\n<h2 id=\"数字与字符串️\"><a class=\"anchor\" href=\"#数字与字符串️\">#</a> 数字与字符串✒️</h2>\n<h3 id=\"少写数字字面量用enum取而代之\"><a class=\"anchor\" href=\"#少写数字字面量用enum取而代之\">#</a> 少写数字字面量，用「Enum」取而代之</h3>\n<h3 id=\"避免大规模使用字符串拼接去构造指令\"><a class=\"anchor\" href=\"#避免大规模使用字符串拼接去构造指令\">#</a> 避免大规模使用字符串拼接去构造指令</h3>\n<ul>\n<li>请考虑使用面向对象的编程思想对其优化</li>\n<li>或者看看有没有已经能够帮你完成这项任务的代码库</li>\n<li>模板引擎有时也是一个不错的选择，相比于「拼接」，「选词填空」才是好选择🙂</li>\n</ul>\n<details class=\"info\"><summary>示例</summary><div>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">#------------ bad ------------</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">fetch_users</span><span class=\"token punctuation\">(</span>conn<span class=\"token punctuation\">,</span> min_level<span class=\"token operator\">=</span><span class=\"token boolean\">None</span><span class=\"token punctuation\">,</span> gender<span class=\"token operator\">=</span><span class=\"token boolean\">None</span><span class=\"token punctuation\">,</span> has_membership<span class=\"token operator\">=</span><span class=\"token boolean\">False</span><span class=\"token punctuation\">,</span> sort_field<span class=\"token operator\">=</span><span class=\"token string\">\"created\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token triple-quoted-string string\">\"\"\"获取用户列表</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>   </pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    :param int min_level: 要求的最低用户级别，默认为所有级别</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    :param int gender: 筛选用户性别，默认为所有性别</pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    :param int has_membership: 筛选所有会员/非会员用户，默认非会员</pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    :param str sort_field: 排序字段，默认为按 created \"用户创建日期\"</pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    :returns: 列表：[(User ID, User Name), ...]</pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    \"\"\"</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token comment\"># 一种古老的 SQL 拼接技巧，使用 \"WHERE 1=1\" 来简化字符串拼接操作</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    <span class=\"token comment\"># 区分查询 params 来避免 SQL 注入问题</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    statement <span class=\"token operator\">=</span> <span class=\"token string\">\"SELECT id, name FROM users WHERE 1=1\"</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    params <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    <span class=\"token keyword\">if</span> min_level <span class=\"token keyword\">is</span> <span class=\"token keyword\">not</span> <span class=\"token boolean\">None</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>        statement <span class=\"token operator\">+=</span> <span class=\"token string\">\" AND level >= ?\"</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>        params<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>min_level<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    <span class=\"token keyword\">if</span> gender <span class=\"token keyword\">is</span> <span class=\"token keyword\">not</span> <span class=\"token boolean\">None</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>        statement <span class=\"token operator\">+=</span> <span class=\"token string\">\" AND gender >= ?\"</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>        params<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>gender<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>    <span class=\"token keyword\">if</span> has_membership<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>        statement <span class=\"token operator\">+=</span> <span class=\"token string\">\" AND has_membership == true\"</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>    <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>        statement <span class=\"token operator\">+=</span> <span class=\"token string\">\" AND has_membership == false\"</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>    </pre></td></tr><tr><td data-num=\"26\"></td><td><pre>    statement <span class=\"token operator\">+=</span> <span class=\"token string\">\" ORDER BY ?\"</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>    params<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>sort_field<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>    <span class=\"token keyword\">return</span> <span class=\"token builtin\">list</span><span class=\"token punctuation\">(</span>conn<span class=\"token punctuation\">.</span>execute<span class=\"token punctuation\">(</span>statement<span class=\"token punctuation\">,</span> params<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre><span class=\"token comment\">#------------ good ------------</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">fetch_users_v2</span><span class=\"token punctuation\">(</span>conn<span class=\"token punctuation\">,</span> min_level<span class=\"token operator\">=</span><span class=\"token boolean\">None</span><span class=\"token punctuation\">,</span> gender<span class=\"token operator\">=</span><span class=\"token boolean\">None</span><span class=\"token punctuation\">,</span> has_membership<span class=\"token operator\">=</span><span class=\"token boolean\">False</span><span class=\"token punctuation\">,</span> sort_field<span class=\"token operator\">=</span><span class=\"token string\">\"created\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>    <span class=\"token triple-quoted-string string\">\"\"\"获取用户列表</pre></td></tr><tr><td data-num=\"32\"></td><td><pre>    \"\"\"</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>    query <span class=\"token operator\">=</span> select<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>users<span class=\"token punctuation\">.</span>c<span class=\"token punctuation\">.</span><span class=\"token builtin\">id</span><span class=\"token punctuation\">,</span> users<span class=\"token punctuation\">.</span>c<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>    <span class=\"token keyword\">if</span> min_level <span class=\"token keyword\">is</span> <span class=\"token keyword\">not</span> <span class=\"token boolean\">None</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>        query <span class=\"token operator\">=</span> query<span class=\"token punctuation\">.</span>where<span class=\"token punctuation\">(</span>users<span class=\"token punctuation\">.</span>c<span class=\"token punctuation\">.</span>level <span class=\"token operator\">>=</span> min_level<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>    <span class=\"token keyword\">if</span> gender <span class=\"token keyword\">is</span> <span class=\"token keyword\">not</span> <span class=\"token boolean\">None</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>        query <span class=\"token operator\">=</span> query<span class=\"token punctuation\">.</span>where<span class=\"token punctuation\">(</span>users<span class=\"token punctuation\">.</span>c<span class=\"token punctuation\">.</span>gender <span class=\"token operator\">==</span> gender<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>    query <span class=\"token operator\">=</span> query<span class=\"token punctuation\">.</span>where<span class=\"token punctuation\">(</span>users<span class=\"token punctuation\">.</span>c<span class=\"token punctuation\">.</span>has_membership <span class=\"token operator\">==</span> has_membership<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>order_by<span class=\"token punctuation\">(</span>users<span class=\"token punctuation\">.</span>c<span class=\"token punctuation\">[</span>sort_field<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>    <span class=\"token keyword\">return</span> <span class=\"token builtin\">list</span><span class=\"token punctuation\">(</span>conn<span class=\"token punctuation\">.</span>execute<span class=\"token punctuation\">(</span>query<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure></div></details>\n<h3 id=\"不必预计算字面量表达式\"><a class=\"anchor\" href=\"#不必预计算字面量表达式\">#</a> 不必预计算字面量表达式</h3>\n<ul>\n<li>你所担心的性能问题，在编译的时候就已经解决了</li>\n</ul>\n<details class=\"info\"><summary>示例</summary><div>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">#------------ bad ------------</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>day_11 <span class=\"token operator\">=</span> <span class=\"token number\">950400</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\">#------------ good ------------</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>day_11 <span class=\"token operator\">=</span> <span class=\"token number\">11</span> <span class=\"token operator\">*</span> <span class=\"token number\">24</span> <span class=\"token operator\">*</span> <span class=\"token number\">3600</span></pre></td></tr></table></figure></div></details>\n<h3 id=\"布尔值也是数字\"><a class=\"anchor\" href=\"#布尔值也是数字\">#</a> 布尔值也是数字</h3>\n<ul>\n<li>有时候再需要统计序列内多少成员符合要求的时候比较好用</li>\n</ul>\n<details class=\"info\"><summary>示例</summary><div>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>l <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">7</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token builtin\">sum</span><span class=\"token punctuation\">(</span>i <span class=\"token operator\">></span> <span class=\"token number\">4</span> <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> l<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>output<span class=\"token punctuation\">:</span><span class=\"token number\">2</span></pre></td></tr></table></figure></div></details>\n<h3 id=\"处理超长字符\"><a class=\"anchor\" href=\"#处理超长字符\">#</a> 处理超长字符</h3>\n<ul>\n<li>（）包裹字符串可以实现随意折行</li>\n</ul>\n<details class=\"info\"><summary>示例</summary><div>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>long_str <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token string\">\"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.\"</span> </pre></td></tr><tr><td data-num=\"3\"></td><td><pre>\t<span class=\"token string\">\"Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. \"</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>\t<span class=\"token string\">\"Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur.\"</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>\t<span class=\"token string\">\"Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.\"</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token punctuation\">)</span></pre></td></tr></table></figure></div></details>\n<h3 id=\"使用无穷大\"><a class=\"anchor\" href=\"#使用无穷大\">#</a> 使用 “无穷大”</h3>\n<ul>\n<li>无穷大： <code>float(&quot;inf&quot;)</code></li>\n<li>无穷小： <code>float(&quot;-inf&quot;)</code></li>\n</ul>\n<h3 id=\"字符串拼接并不慢\"><a class=\"anchor\" href=\"#字符串拼接并不慢\">#</a> 字符串拼接并不慢</h3>\n<ul>\n<li>如今使用  <code>+=</code>  的方式来拼接字符串，效率已经非常接近  <code>&quot;&quot;.join(str_list)</code>  了。所以，该拼接时就拼接吧，不必担心任何性能问题。</li>\n</ul>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">import</span> timeit</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">test_str_add</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>\ts <span class=\"token operator\">=</span> <span class=\"token string\">\"\"</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>\t<span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">100</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>\t\ts <span class=\"token operator\">+=</span> long_str</pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">test_str_join</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>\t<span class=\"token string\">\"\"</span><span class=\"token punctuation\">.</span>join<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>long_str <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">100</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>timeit<span class=\"token punctuation\">.</span>timeit<span class=\"token punctuation\">(</span><span class=\"token string\">'test_str_join()'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'from __main__ import test_str_join'</span><span class=\"token punctuation\">,</span> number<span class=\"token operator\">=</span><span class=\"token number\">1000</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>timeit<span class=\"token punctuation\">.</span>timeit<span class=\"token punctuation\">(</span><span class=\"token string\">'test_str_add()'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'from __main__ import test_str_add'</span><span class=\"token punctuation\">,</span> number<span class=\"token operator\">=</span><span class=\"token number\">1000</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>Output<span class=\"token punctuation\">:</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token number\">0.0724546069977805</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token number\">0.07129737001378089</span></pre></td></tr></table></figure><h3 id=\"value-1-并非线程安全\"><a class=\"anchor\" href=\"#value-1-并非线程安全\">#</a> “value += 1” 并非线程安全</h3>\n",
            "tags": [
                "计算机科学",
                "学习笔记",
                "Python「工匠」",
                "Python「工匠」"
            ]
        },
        {
            "id": "https://allengx.gitee.io/computer-science/study/Python%E3%80%8C%E5%B7%A5%E5%8C%A0%E3%80%8D/%E4%BA%8C%E3%80%81%E6%9D%A1%E4%BB%B6%E5%88%86%E6%94%AF/",
            "url": "https://allengx.gitee.io/computer-science/study/Python%E3%80%8C%E5%B7%A5%E5%8C%A0%E3%80%8D/%E4%BA%8C%E3%80%81%E6%9D%A1%E4%BB%B6%E5%88%86%E6%94%AF/",
            "title": "二、条件分支",
            "date_published": "2020-11-04T08:04:34.000Z",
            "content_html": "<div class=\"note info\">\n<p>以下为个人学习笔记整理</p>\n</div>\n<h2 id=\"条件分支\"><a class=\"anchor\" href=\"#条件分支\">#</a> 条件分支🍴</h2>\n<h3 id=\"避免分支嵌套可以使用条件拆分\"><a class=\"anchor\" href=\"#避免分支嵌套可以使用条件拆分\">#</a> 避免分支嵌套，可以使用「条件拆分」</h3>\n<details class=\"info\"><summary>示例</summary><div>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">#------------ bad ------------</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">if</span> is_ok_1<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token keyword\">if</span> is_ok_2<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>        <span class=\"token keyword\">if</span> is_ok_3<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>            <span class=\"token keyword\">if</span> is_ok_4<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>                <span class=\"token keyword\">return</span> <span class=\"token boolean\">True</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token keyword\">return</span> <span class=\"token boolean\">False</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token comment\">#------------ good ------------</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token keyword\">if</span> <span class=\"token keyword\">not</span> is_ok_1<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token keyword\">return</span> <span class=\"token boolean\">False</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token keyword\">if</span> <span class=\"token keyword\">not</span> is_ok_2<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    <span class=\"token keyword\">return</span> <span class=\"token boolean\">False</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token keyword\">if</span> <span class=\"token keyword\">not</span> is_ok_3<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    <span class=\"token keyword\">return</span> <span class=\"token boolean\">False</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token keyword\">if</span> <span class=\"token keyword\">not</span> is_ok_4<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    <span class=\"token keyword\">return</span> <span class=\"token boolean\">False</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre><span class=\"token keyword\">return</span> <span class=\"token boolean\">True</span></pre></td></tr></table></figure></div></details>\n<h3 id=\"复杂条件判断可以考虑使用函数封装\"><a class=\"anchor\" href=\"#复杂条件判断可以考虑使用函数封装\">#</a> 复杂条件判断可以考虑使用「函数封装」</h3>\n<h3 id=\"提取分支中的重复代码凸显不同\"><a class=\"anchor\" href=\"#提取分支中的重复代码凸显不同\">#</a> 提取分支中的重复代码，「凸显不同」</h3>\n<details class=\"info\"><summary>示例</summary><div>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">#------------ bad ------------</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token comment\"># 对于新用户，创建新的用户资料，否则更新旧资料</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">if</span> user<span class=\"token punctuation\">.</span>no_profile_exists<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    create_user_profile<span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        username<span class=\"token operator\">=</span>user<span class=\"token punctuation\">.</span>username<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        email<span class=\"token operator\">=</span>user<span class=\"token punctuation\">.</span>email<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        age<span class=\"token operator\">=</span>user<span class=\"token punctuation\">.</span>age<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        address<span class=\"token operator\">=</span>user<span class=\"token punctuation\">.</span>address<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        <span class=\"token comment\"># 对于新建用户，将用户的积分置为 0</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        points<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        created<span class=\"token operator\">=</span>now<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    update_user_profile<span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>        username<span class=\"token operator\">=</span>user<span class=\"token punctuation\">.</span>username<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>        email<span class=\"token operator\">=</span>user<span class=\"token punctuation\">.</span>email<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>        age<span class=\"token operator\">=</span>user<span class=\"token punctuation\">.</span>age<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>        address<span class=\"token operator\">=</span>user<span class=\"token punctuation\">.</span>address<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>        updated<span class=\"token operator\">=</span>now<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>    <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre></pre></td></tr><tr><td data-num=\"22\"></td><td><pre><span class=\"token comment\">#------------ good ------------</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre><span class=\"token keyword\">if</span> user<span class=\"token punctuation\">.</span>no_profile_exists<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>    profile_func <span class=\"token operator\">=</span> create_user_profile</pre></td></tr><tr><td data-num=\"25\"></td><td><pre>    extra_args <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span><span class=\"token string\">'points'</span><span class=\"token punctuation\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'created'</span><span class=\"token punctuation\">:</span> now<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre><span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>    profile_func <span class=\"token operator\">=</span> update_user_profile</pre></td></tr><tr><td data-num=\"28\"></td><td><pre>    extra_args <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span><span class=\"token string\">'updated'</span><span class=\"token punctuation\">:</span> now<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>profile_func<span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>    username<span class=\"token operator\">=</span>user<span class=\"token punctuation\">.</span>username<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>    email<span class=\"token operator\">=</span>user<span class=\"token punctuation\">.</span>email<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>    age<span class=\"token operator\">=</span>user<span class=\"token punctuation\">.</span>age<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>    address<span class=\"token operator\">=</span>user<span class=\"token punctuation\">.</span>address<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>    <span class=\"token operator\">**</span>extra_args</pre></td></tr><tr><td data-num=\"36\"></td><td><pre><span class=\"token punctuation\">)</span></pre></td></tr></table></figure></div></details>\n<h3 id=\"谨慎使用三元表达式\"><a class=\"anchor\" href=\"#谨慎使用三元表达式\">#</a> 谨慎使用三元表达式</h3>\n<h3 id=\"自定义对象的-布尔真假\"><a class=\"anchor\" href=\"#自定义对象的-布尔真假\">#</a> 自定义对象的 「布尔真假」</h3>\n<details class=\"info\"><summary>示例</summary><div>\n<ul>\n<li>布尔「假」\n<ul>\n<li>None</li>\n<li>0</li>\n<li>False</li>\n<li>{}</li>\n<li>()</li>\n<li>[]</li>\n<li>...</li>\n</ul>\n</li>\n<li>布尔「真」\n<ul>\n<li>非 0 数值</li>\n<li>非空序列</li>\n<li>True</li>\n<li>用户类和类实例</li>\n<li>...</li>\n</ul>\n</li>\n</ul>\n<p>自定义类可以通过定义  <code>__bool__</code> 、 <code>__len__</code>  来决定类的真假。</p>\n</div></details>\n<h3 id=\"在条件判断中使用-all-any\"><a class=\"anchor\" href=\"#在条件判断中使用-all-any\">#</a> 在条件判断中使用 all () /any ()</h3>\n<ul>\n<li><code>all(seq)</code> ：仅当  <code>seq</code>  中所有对象都为布尔真时返回  <code>True</code> ，否则返回  <code>False</code></li>\n<li><code>any(seq)</code> ：只要  <code>seq</code>  中任何一个对象为布尔真就返回  <code>True</code> ，否则返回  <code>False</code></li>\n</ul>\n<details class=\"info\"><summary>示例</summary><div>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">#------------ bad ------------</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">all_numbers_gt_10</span><span class=\"token punctuation\">(</span>numbers<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token triple-quoted-string string\">\"\"\"仅当序列中所有数字大于 10 时，返回 True</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    \"\"\"</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token keyword\">not</span> numbers<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        <span class=\"token keyword\">return</span> <span class=\"token boolean\">False</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token keyword\">for</span> n <span class=\"token keyword\">in</span> numbers<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        <span class=\"token keyword\">if</span> n <span class=\"token operator\">&lt;=</span> <span class=\"token number\">10</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>            <span class=\"token keyword\">return</span> <span class=\"token boolean\">False</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token keyword\">return</span> <span class=\"token boolean\">True</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token comment\">#------------ good ------------</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">all_numbers_gt_10_2</span><span class=\"token punctuation\">(</span>numbers<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    <span class=\"token keyword\">return</span> <span class=\"token builtin\">bool</span><span class=\"token punctuation\">(</span>numbers<span class=\"token punctuation\">)</span> <span class=\"token keyword\">and</span> <span class=\"token builtin\">all</span><span class=\"token punctuation\">(</span>n <span class=\"token operator\">></span> <span class=\"token number\">10</span> <span class=\"token keyword\">for</span> n <span class=\"token keyword\">in</span> numbers<span class=\"token punctuation\">)</span></pre></td></tr></table></figure></div></details>\n<h3 id=\"使用-trywhilefor-中-else-分支\"><a class=\"anchor\" href=\"#使用-trywhilefor-中-else-分支\">#</a> 使用 try/while/for 中 else 分支</h3>\n<ul>\n<li><code>try</code>  ：try 后跟 else 表示 try 中的代码正常执行</li>\n<li><code>while/for</code> ：后面根 else 表示 for 和 while 的循环正常执行。没有被 <code>break</code> 、 <code>return</code>  打断， <code>continun</code>  不算。</li>\n</ul>\n<h3 id=\"和-is-比较操作\"><a class=\"anchor\" href=\"#和-is-比较操作\">#</a>  <code>==</code>  和  <code>is</code>  比较操作</h3>\n<ul>\n<li><code>==</code> ：值比较</li>\n<li><code>is</code> ：内存地址比较</li>\n</ul>\n",
            "tags": [
                "计算机科学",
                "学习笔记",
                "Python「工匠」",
                "Python「工匠」"
            ]
        },
        {
            "id": "https://allengx.gitee.io/computer-science/study/Python%E3%80%8C%E5%B7%A5%E5%8C%A0%E3%80%8D/%E4%B8%80%E3%80%81%E5%8F%98%E9%87%8F/",
            "url": "https://allengx.gitee.io/computer-science/study/Python%E3%80%8C%E5%B7%A5%E5%8C%A0%E3%80%8D/%E4%B8%80%E3%80%81%E5%8F%98%E9%87%8F/",
            "title": "一、变量",
            "date_published": "2020-11-02T08:04:34.000Z",
            "content_html": "<div class=\"note info\">\n<p>以下为个人学习笔记整理</p>\n</div>\n<h2 id=\"变量️\"><a class=\"anchor\" href=\"#变量️\">#</a> 变量⭐️</h2>\n<h3 id=\"通过变量名能够体现变量类型\"><a class=\"anchor\" href=\"#通过变量名能够体现变量类型\">#</a> 通过变量名能够体现变量「类型」</h3>\n<details class=\"info\"><summary>示例</summary><div>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>person_lst <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>p1<span class=\"token punctuation\">,</span> p2<span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>host_id <span class=\"token operator\">=</span> <span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>info_dict <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span><span class=\"token string\">\"name\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"张三\"</span><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>tranform_set <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">,</span> y<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>arg_tuple <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>arg1<span class=\"token punctuation\">,</span> arg2<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>item_obj <span class=\"token operator\">=</span> CItem<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure></div></details>\n<h3 id=\"保持变量名一致不论何时何地相同的对象请用同样的变量名\"><a class=\"anchor\" href=\"#保持变量名一致不论何时何地相同的对象请用同样的变量名\">#</a> 保持变量名「一致」，不论何时何地，相同的对象请用同样的变量名</h3>\n<h3 id=\"变量名尽量短但不要短的离谱\"><a class=\"anchor\" href=\"#变量名尽量短但不要短的离谱\">#</a> 变量名尽量「短」，但不要短的离谱</h3>\n<details class=\"info\"><summary>示例</summary><div>\n<ul>\n<li>i -&gt; idx</li>\n<li>information -&gt; info</li>\n</ul>\n</div></details>\n<h3 id=\"变量定义尽量靠近使用\"><a class=\"anchor\" href=\"#变量定义尽量靠近使用\">#</a> 变量定义尽量「靠近使用」</h3>\n<details class=\"info\"><summary>示例</summary><div>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">#------------ bad ------------</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>info_lst <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>data_dict <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token comment\"># logic .....</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>info_lst<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>idx<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token comment\"># logic .....</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>data_dict<span class=\"token punctuation\">[</span>idx<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> data</pre></td></tr><tr><td data-num=\"10\"></td><td><pre></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token comment\">#------------ good ------------</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token comment\"># logic .....</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>info_lst <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>info_lst<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>idx<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token comment\"># logic .....</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>data_dict <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>data_dict<span class=\"token punctuation\">[</span>idx<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> data</pre></td></tr></table></figure></div></details>\n<h3 id=\"一个函数的变量数量最好不超过十个\"><a class=\"anchor\" href=\"#一个函数的变量数量最好不超过十个\">#</a> 一个函数的变量数量最好不超过「十」个</h3>\n<h3 id=\"不要定义不使用的变量\"><a class=\"anchor\" href=\"#不要定义不使用的变量\">#</a> 不要定义不使用的变量</h3>\n<h3 id=\"临时变量代替复杂的表达式\"><a class=\"anchor\" href=\"#临时变量代替复杂的表达式\">#</a> 临时变量代替复杂的表达式</h3>\n<details class=\"info\"><summary>示例</summary><div>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">#------------ bad ------------</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">if</span> user<span class=\"token punctuation\">.</span>is_active <span class=\"token keyword\">and</span> <span class=\"token punctuation\">(</span>user<span class=\"token punctuation\">.</span>sex <span class=\"token operator\">==</span> <span class=\"token string\">'female'</span> <span class=\"token keyword\">or</span> user<span class=\"token punctuation\">.</span>level <span class=\"token operator\">></span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">and</span> user<span class=\"token punctuation\">.</span>age <span class=\"token operator\">></span> <span class=\"token number\">18</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token comment\"># logic ...</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token comment\">#------------ good ------------</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>user_is_eligible <span class=\"token operator\">=</span> user<span class=\"token punctuation\">.</span>is_active <span class=\"token keyword\">and</span> <span class=\"token punctuation\">(</span>user<span class=\"token punctuation\">.</span>sex <span class=\"token operator\">==</span> <span class=\"token string\">'female'</span> <span class=\"token keyword\">or</span> user<span class=\"token punctuation\">.</span>level <span class=\"token operator\">></span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token keyword\">if</span> user_is_eligible<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>     <span class=\"token comment\"># logic ...</span></pre></td></tr></table></figure></div></details>\n",
            "tags": [
                "计算机科学",
                "学习笔记",
                "Python「工匠」",
                "Python「工匠」"
            ]
        },
        {
            "id": "https://allengx.gitee.io/%E6%97%A5%E6%9C%AC%E8%AA%9E/study/%E6%97%A5%E6%9C%AC%E8%AA%9E%E3%81%AE%E6%96%87%E6%B3%95%E5%88%9D%E7%BA%A7%EF%BC%88%E4%B8%8A%EF%BC%89/%E4%B8%89%E3%80%81%E5%B0%8F%E6%9D%8E%E5%9C%A8%E7%AE%B1%E6%A0%B9/",
            "url": "https://allengx.gitee.io/%E6%97%A5%E6%9C%AC%E8%AA%9E/study/%E6%97%A5%E6%9C%AC%E8%AA%9E%E3%81%AE%E6%96%87%E6%B3%95%E5%88%9D%E7%BA%A7%EF%BC%88%E4%B8%8A%EF%BC%89/%E4%B8%89%E3%80%81%E5%B0%8F%E6%9D%8E%E5%9C%A8%E7%AE%B1%E6%A0%B9/",
            "title": "标准日本语初级-上",
            "date_published": "2020-10-25T05:48:15.000Z",
            "content_html": "<div class=\"note info\">\n<p>以下为个人学习笔记整理</p>\n</div>\n<h1 id=\"标准日本语初级上\"><a class=\"anchor\" href=\"#标准日本语初级上\">#</a> 标准日本语初级（上）</h1>\n",
            "tags": [
                "日语",
                "学习笔记",
                "日语语法初级（上）",
                "日语语法"
            ]
        },
        {
            "id": "https://allengx.gitee.io/%E6%97%A5%E6%9C%AC%E8%AA%9E/study/%E6%97%A5%E6%9C%AC%E8%AA%9E%E3%81%AE%E6%96%87%E6%B3%95%E5%88%9D%E7%BA%A7%EF%BC%88%E4%B8%8A%EF%BC%89/%E4%BA%94%E3%80%81%E5%B0%8F%E6%9D%8E%E5%9C%A8%E6%97%A5%E6%9C%AC%E8%BF%8E%E6%96%B0%E6%98%A5/",
            "url": "https://allengx.gitee.io/%E6%97%A5%E6%9C%AC%E8%AA%9E/study/%E6%97%A5%E6%9C%AC%E8%AA%9E%E3%81%AE%E6%96%87%E6%B3%95%E5%88%9D%E7%BA%A7%EF%BC%88%E4%B8%8A%EF%BC%89/%E4%BA%94%E3%80%81%E5%B0%8F%E6%9D%8E%E5%9C%A8%E6%97%A5%E6%9C%AC%E8%BF%8E%E6%96%B0%E6%98%A5/",
            "title": "标准日本语初级-上",
            "date_published": "2020-10-25T05:48:15.000Z",
            "content_html": "<div class=\"note info\">\n<p>以下为个人学习笔记整理</p>\n</div>\n<h1 id=\"标准日本语初级上\"><a class=\"anchor\" href=\"#标准日本语初级上\">#</a> 标准日本语初级（上）</h1>\n",
            "tags": [
                "日语",
                "学习笔记",
                "日语语法初级（上）",
                "日语语法"
            ]
        },
        {
            "id": "https://allengx.gitee.io/%E6%97%A5%E6%9C%AC%E8%AA%9E/study/%E6%97%A5%E6%9C%AC%E8%AA%9E%E3%81%AE%E6%96%87%E6%B3%95%E5%88%9D%E7%BA%A7%EF%BC%88%E4%B8%8A%EF%BC%89/%E5%85%AD%E3%80%81%E5%86%8D%E8%A7%81%EF%BC%81%E6%97%A5%E6%9C%AC/",
            "url": "https://allengx.gitee.io/%E6%97%A5%E6%9C%AC%E8%AA%9E/study/%E6%97%A5%E6%9C%AC%E8%AA%9E%E3%81%AE%E6%96%87%E6%B3%95%E5%88%9D%E7%BA%A7%EF%BC%88%E4%B8%8A%EF%BC%89/%E5%85%AD%E3%80%81%E5%86%8D%E8%A7%81%EF%BC%81%E6%97%A5%E6%9C%AC/",
            "title": "标准日本语初级-上",
            "date_published": "2020-10-25T05:48:15.000Z",
            "content_html": "<div class=\"note info\">\n<p>以下为个人学习笔记整理</p>\n</div>\n<h1 id=\"标准日本语初级上\"><a class=\"anchor\" href=\"#标准日本语初级上\">#</a> 标准日本语初级（上）</h1>\n",
            "tags": [
                "日语",
                "学习笔记",
                "日语语法初级（上）",
                "日语语法"
            ]
        },
        {
            "id": "https://allengx.gitee.io/%E6%97%A5%E6%9C%AC%E8%AA%9E/study/%E6%97%A5%E6%9C%AC%E8%AA%9E%E3%81%AE%E6%96%87%E6%B3%95%E5%88%9D%E7%BA%A7%EF%BC%88%E4%B8%8A%EF%BC%89/%E5%9B%9B%E3%80%81%E5%B0%8F%E6%9D%8E%E7%9A%84%E5%85%AC%E5%8F%B8%E7%94%9F%E6%B4%BB%E2%91%A1/",
            "url": "https://allengx.gitee.io/%E6%97%A5%E6%9C%AC%E8%AA%9E/study/%E6%97%A5%E6%9C%AC%E8%AA%9E%E3%81%AE%E6%96%87%E6%B3%95%E5%88%9D%E7%BA%A7%EF%BC%88%E4%B8%8A%EF%BC%89/%E5%9B%9B%E3%80%81%E5%B0%8F%E6%9D%8E%E7%9A%84%E5%85%AC%E5%8F%B8%E7%94%9F%E6%B4%BB%E2%91%A1/",
            "title": "标准日本语初级-上",
            "date_published": "2020-10-25T05:48:15.000Z",
            "content_html": "<div class=\"note info\">\n<p>以下为个人学习笔记整理</p>\n</div>\n<h1 id=\"标准日本语初级上\"><a class=\"anchor\" href=\"#标准日本语初级上\">#</a> 标准日本语初级（上）</h1>\n",
            "tags": [
                "日语",
                "学习笔记",
                "日语语法初级（上）",
                "日语语法"
            ]
        },
        {
            "id": "https://allengx.gitee.io/%E6%97%A5%E6%9C%AC%E8%AA%9E/study/%E6%97%A5%E6%9C%AC%E8%AA%9E%E3%81%AE%E6%96%87%E6%B3%95%E5%88%9D%E7%BA%A7%EF%BC%88%E4%B8%8A%EF%BC%89/%E5%9F%BA%E6%9C%AC%E6%A0%87%E7%AD%BE/",
            "url": "https://allengx.gitee.io/%E6%97%A5%E6%9C%AC%E8%AA%9E/study/%E6%97%A5%E6%9C%AC%E8%AA%9E%E3%81%AE%E6%96%87%E6%B3%95%E5%88%9D%E7%BA%A7%EF%BC%88%E4%B8%8A%EF%BC%89/%E5%9F%BA%E6%9C%AC%E6%A0%87%E7%AD%BE/",
            "title": "基本标签",
            "date_published": "2020-10-25T05:48:15.000Z",
            "content_html": "<div class=\"note info\">\n<p>以下为个人学习笔记整理</p>\n</div>\n<h1 id=\"常见的标签含义\"><a class=\"anchor\" href=\"#常见的标签含义\">#</a> 常见的标签含义</h1>\n<p><span class=\"label danger\">名</span> ：名词。</p>\n<p><span class=\"label danger\">叹词</span> ：语气词。</p>\n<p><span class=\"label danger\">寒暄语</span> ：日常问候的语言。</p>\n<p><span class=\"label danger\">外来語</span> ：非本土翻译得来的语言，用片假名书写。</p>\n<p><span class=\"label danger\">名场所</span> ：表示地方的名词。</p>\n<p><span class=\"label danger\">量词</span> ：和数词搭配表示数量。</p>\n<p><span class=\"label danger\">对比</span> ：表示和什么作比较。</p>\n",
            "tags": [
                "日语",
                "学习笔记",
                "日语语法初级（上）",
                "日语语法"
            ]
        },
        {
            "id": "https://allengx.gitee.io/%E6%97%A5%E6%9C%AC%E8%AA%9E/study/%E6%97%A5%E6%9C%AC%E8%AA%9E%E3%81%AE%E6%96%87%E6%B3%95%E5%88%9D%E7%BA%A7%EF%BC%88%E4%B8%8A%EF%BC%89/%E4%B8%80%E3%80%81%E5%B0%8F%E6%9D%8E%E8%B5%B4%E6%97%A5/",
            "url": "https://allengx.gitee.io/%E6%97%A5%E6%9C%AC%E8%AA%9E/study/%E6%97%A5%E6%9C%AC%E8%AA%9E%E3%81%AE%E6%96%87%E6%B3%95%E5%88%9D%E7%BA%A7%EF%BC%88%E4%B8%8A%EF%BC%89/%E4%B8%80%E3%80%81%E5%B0%8F%E6%9D%8E%E8%B5%B4%E6%97%A5/",
            "title": "一、小李赴日",
            "date_published": "2020-10-25T05:48:15.000Z",
            "content_html": "<div class=\"note info\">\n<p>以下为个人学习笔记整理</p>\n</div>\n<h1 id=\"一-小李赴日\"><a class=\"anchor\" href=\"#一-小李赴日\">#</a> 一、小李赴日</h1>\n<h2 id=\"第1课-李りさん中国人ちゅうごくじんです\"><a class=\"anchor\" href=\"#第1课-李りさん中国人ちゅうごくじんです\">#</a> 第①课 <ruby>李<rp> (</rp><rt>り</rt><rp>)</rp> さん<rt></rt></ruby>\t<ruby>中国人<rp> (</rp><rt>ちゅうごくじん</rt><rp>)</rp> です<rt></rt></ruby></h2>\n<h3 id=\"语法解释\"><a class=\"anchor\" href=\"#语法解释\">#</a> 语法解释</h3>\n<h4 id=\"名-はわ-名-です\"><a class=\"anchor\" href=\"#名-はわ-名-です\">#</a>  <code>「名」</code>   <ruby>は<rp> (</rp><rt>わ</rt><rp>)</rp></ruby>   <code>「名」</code>   です</h4>\n<p>意为 <code>...是...</code> 。 <code>...は</code> 是主语的部分， <code>...です</code> 是谓语的部分。助词 <code>は</code> 用于提示主题。读作 <code>わ</code> 。</p>\n<details class=\"info\"><summary>示例：</summary><div>\n<ul>\n<li><ruby>李<rp> (</rp><rt>り</rt><rp>)</rp></ruby> さん　 <code>は</code> 　<ruby>中国人<rp> (</rp><rt>ちゅうごくじん</rt><rp>)</rp></ruby>　 <code>です</code> 。（小李是中国人）</li>\n<li>わたし　 <code>は</code> 　<ruby>日本<rp> (</rp><rt>にほん</rt><rp>)</rp></ruby> じん　 <code>です</code> 。（我是日本人）</li>\n<li>わたし　 <code>は</code> 　<ruby>王<rp> (</rp><rt>おう</rt><rp>)</rp></ruby>　 <code>です</code> 。（我姓王）</li>\n</ul>\n</div></details>\n<hr />\n<h4 id=\"名-はわ-名-です-ありません\"><a class=\"anchor\" href=\"#名-はわ-名-です-ありません\">#</a>  <code>「名」</code>   <ruby>は<rp> (</rp><rt>わ</rt><rp>)</rp></ruby>   <code>「名」</code>   です　ありません</h4>\n<p>意为 <code>...不是...</code> 。 <code>です　ありません</code> 的  <code>です</code>  也可以用  <code>じゃ</code>  代替。</p>\n<details class=\"info\"><summary>示例：</summary><div>\n<ul>\n<li><ruby>森<rp> (</rp><rt>もり</rt><rp>)</rp></ruby> さん　 <code>は</code> 　<ruby>学生<rp> (</rp><rt>がくせい</rt><rp>)</rp></ruby>　 <code>です　ありません</code> 。（森先生不是学生）</li>\n<li>わたし　 <code>は</code> 　<ruby>日本<rp> (</rp><rt>にほん</rt><rp>)</rp> じん<rt></rt></ruby>　 <code>です　ありません</code> 。（我不是日本人）</li>\n<li>わたし　 <code>は</code> 　<ruby>田中<rp> (</rp><rt>たなか</rt><rp>)</rp></ruby>　 <code>じゃ　ありません</code> 。（我不是田中）</li>\n</ul>\n</div></details>\n<hr />\n<h4 id=\"名-はわ-名-ですか\"><a class=\"anchor\" href=\"#名-はわ-名-ですか\">#</a>  <code>「名」</code>   <ruby>は<rp> (</rp><rt>わ</rt><rp>)</rp></ruby>   <code>「名」</code>   ですか？</h4>\n<p>意为 <code>...是...吗？</code> 。 <code>か</code> 有标识疑问的意思</p>\n<details class=\"info\"><summary>示例：</summary><div>\n<ul>\n<li>あなた　 <code>は</code> 　 <ruby>小野<rp> (</rp><rt>おの</rt><rp>)</rp></ruby> さん　 <code>ですか</code> 。（您是小野女生吗？）</li>\n<li>キムさん　 <code>は</code> 　<ruby>中国人<rp> (</rp><rt>ちゅうごくじん</rt><rp>)</rp></ruby>　 <code>ですか</code> 。（金女士是中国人吗？）</li>\n</ul>\n</div></details>\n<hr />\n<h4 id=\"名-の-名-从属机构-国家属性\"><a class=\"anchor\" href=\"#名-の-名-从属机构-国家属性\">#</a>  <code>「名」</code>  の   <code>「名」</code>   「从属机构、国家」「属性」</h4>\n<p>助词 <code>の</code> 连接两个名词，表示前面名词是后面的「从属机构、国家」或者「属性」</p>\n<details class=\"info\"><summary>示例：</summary><div>\n<ul>\n<li><ruby>李<rp> (</rp><rt>り</rt><rp>)</rp></ruby> さんは　 <ruby>JC<rt></rt> 企画<rp> (</rp><rt>ジェーシーきかく</rt><rp>)</rp></ruby>　 <code>の</code> 　 <ruby>社員<rp> (</rp><rt>しゃいん</rt><rp>)</rp></ruby> です。（小李是 JC 策划公司的职员）</li>\n<li><ruby>北京旅行社<rp> (</rp><rt>ペキンりょこうしゃ</rt><rp>)</rp></ruby> は　<ruby>中国<rp> (</rp><rt>ちゅうご</rt><rp>)</rp></ruby>　 <code>の</code> 　 <ruby>企業<rp> (</rp><rt>きぎょう</rt><rp>)</rp></ruby> です。（北京旅行社是中国的企业）</li>\n<li>デュボンさんは　 <ruby>大学<rp> (</rp><rt>だいがく</rt><rp>)</rp></ruby>　 <code>の</code> 　 <ruby>先生<rp> (</rp><rt>せんせい</rt><rp>)</rp></ruby> です。（迪蓬先生是大学老师）</li>\n</ul>\n<div class=\"note danger\">\n<p>日语中名词和名词之前一般用  <code>の</code>  来连接。</p>\n</div>\n</div></details>\n<hr />\n<h3 id=\"词语讲解\"><a class=\"anchor\" href=\"#词语讲解\">#</a> 词语讲解</h3>\n<h4 id=\"人称\"><a class=\"anchor\" href=\"#人称\">#</a>  <code>人称</code></h4>\n<ul>\n<li>「わたし」：第一人称</li>\n<li>「あなた」：第二人称</li>\n<li>「あの <ruby>人<rp> (</rp><rt>ひと</rt><rp>)</rp></ruby>」：第三人称</li>\n<li>「~ さん」：用于他人姓名后</li>\n<li>「~ ちゃん」：多用于称呼小孩</li>\n<li>「~ <ruby>君<rp> (</rp><rt>くん</rt><rp>)</rp></ruby>」：多用于称呼比自己年轻的男性</li>\n<li>「 <ruby>先生<rp> (</rp><rt>せんせい</rt><rp>)</rp></ruby>」：指代老师</li>\n</ul>\n<h4 id=\"人称省略\"><a class=\"anchor\" href=\"#人称省略\">#</a>  <code>人称省略</code></h4>\n<p>可以通过上下文推测出的人称一般可以省略，并且听上去更有礼貌。多省略第一、第二人称主语。</p>\n<details class=\"info\"><summary>示例：</summary><div>\n<ul>\n<li><code>（あなたは）</code>  <ruby>吉田<rp> (</rp><rt>よしだ</rt><rp>)</rp></ruby> さんですが。<br />\n—— いいえ， <code>（わたしは）</code>  <ruby>吉田<rp> (</rp><rt>よしだ</rt><rp>)</rp></ruby> じゃ　ありません。 <code>（わたしは）</code> 　 <ruby>森<rp> (</rp><rt>もり</rt><rp>)</rp></ruby> です。<br />\n（你是吉田先生吗？—— 不，我不是吉田。我是森。）</li>\n</ul>\n</div></details>\n<h4 id=\"叹词\"><a class=\"anchor\" href=\"#叹词\">#</a>  <code>「叹词」</code></h4>\n<ul>\n<li>あっ：哎，啊。表示惊叹的意思</li>\n</ul>\n<h4 id=\"寒暄语\"><a class=\"anchor\" href=\"#寒暄语\">#</a>  <code>「寒暄语」</code></h4>\n<ul>\n<li>どうぞ　よろしく　お願いします：请多关照的意思，可以省略部分内容，效果也是一致的。例如：\n<ul>\n<li>どうぞ　よろしく</li>\n<li>よろしく　お願いします</li>\n</ul>\n</li>\n<li>こちらこそ：我才是，我才要、您请～的意思</li>\n</ul>\n<h2 id=\"第2课-これわ-本ほんです\"><a class=\"anchor\" href=\"#第2课-これわ-本ほんです\">#</a> 第②课 これわ　 <ruby>本<rp> (</rp><rt>ほん</rt><rp>)</rp></ruby> です</h2>\n<h3 id=\"语法解释-2\"><a class=\"anchor\" href=\"#语法解释-2\">#</a> 语法解释</h3>\n<h4 id=\"これそれあれは名です\"><a class=\"anchor\" href=\"#これそれあれは名です\">#</a> 「これ／それ／あれ」は <code>「名」</code> です</h4>\n<p>意为 <code>「这／那／那个」是...</code> 。 <code>「これ／それ／あれ」</code> 区别：</p>\n<ul>\n<li><code>「これ」</code> ：这的意思，通常指代距离说话人较近的事物，或者距离两者都近</li>\n<li><code>「それ」</code> ：那的意思，通常指代距离听话人较近的事物，或者距离两者稍微远一些</li>\n<li><code>「あれ」</code> ：那个的意思，通常指代距离说话人和听话人都较远的事物，或者距离两者比较远</li>\n</ul>\n<details class=\"info\"><summary>示例：</summary><div>\n<p>-　 <code>ごれ</code> 　は　 <ruby>本<rp> (</rp><rt>ほん</rt><rp>)</rp></ruby> です。（这是书）<br />\n-　 <code>それ</code> 　は　かばん　です。（那是包）<br />\n-　 <code>あれ</code> 　は　テレビ　です。（那是电视机）</p>\n</div></details>\n<hr />\n<h4 id=\"だれですが-何なんですが\"><a class=\"anchor\" href=\"#だれですが-何なんですが\">#</a> 「だれですが／ <ruby>何<rp> (</rp><rt>なん</rt><rp>)</rp></ruby> ですが」</h4>\n<p>意为 <code>「谁/什么」</code> 。一个指代人，一个指代物</p>\n<details class=\"info\"><summary>示例：</summary><div>\n<p>-　それは　<ruby>何<rp> (</rp><rt>なん</rt><rp>)</rp></ruby>　ですが。（那是什么？）<br />\n-　あの 　<ruby>人<rp> (</rp><rt>ひと</rt><rp>)</rp></ruby> は　だれ　ですが。（那个人是谁？）</p>\n</div></details>\n<hr />\n<h4 id=\"名-の-名-所属\"><a class=\"anchor\" href=\"#名-の-名-所属\">#</a>  <code>「名」</code>  の   <code>「名」</code>   「所属」</h4>\n<p><code>の</code> 连接名词和名词，表示所属关系</p>\n<details class=\"info\"><summary>示例：</summary><div>\n<p>-　わたし　の　かぎ。（我的钥匙）<br />\n-　 <ruby>田中<rp> (</rp><rt>たなか</rt><rp>)</rp></ruby> さん　の　 <ruby>車<rp> (</rp><rt>くるま</rt><rp>)</rp></ruby>。（田中先生的车）</p>\n</div></details>\n<hr />\n<h4 id=\"ごの-そのあの名-は-名-です\"><a class=\"anchor\" href=\"#ごの-そのあの名-は-名-です\">#</a> 「ごの／ その／あの」 <code>「名」</code>   は   <code>「名」</code>  です</h4>\n<p>意为 <code>「这/那/那个」</code> 「名」是 「名」的。</p>\n<details class=\"info\"><summary>示例：</summary><div>\n<p>-　 <code>この</code> 　カメラ　は　スミスさんの（カメラ）です。（这个照相机是史密斯先生的）<br />\n-　 <code>その</code> 　 <ruby>自転車<rp> (</rp><rt>じてんしゃ</rt><rp>)</rp></ruby>　は　 <ruby>森<rp> (</rp><rt>もり</rt><rp>)</rp></ruby> さんのせす。（那辆自行车是森先生的）<br />\n-　 <code>あの</code> 　ノート　は　だれのですが。（那个笔记比是谁的？）</p>\n</div></details>\n<hr />\n<h4 id=\"どの-どれ名\"><a class=\"anchor\" href=\"#どの-どれ名\">#</a> 「どの／ どれ」 <code>「名」</code></h4>\n<p>意为 <code>「哪个/哪个（三者以上）」</code> 「名」</p>\n<details class=\"info\"><summary>示例：</summary><div>\n<p>-　 <ruby>森<rp> (</rp><rt>もり</rt><rp>)</rp></ruby> さんの　かばんは　 <code>どれ</code> （かばん）　ですが。（森先生的包是哪个？）<br />\n-　  <ruby>長島<rp> (</rp><rt>ながしま</rt><rp>)</rp></ruby> さんの　 <ruby>傘<rp> (</rp><rt>かさ</rt><rp>)</rp></ruby>　 <code>どれ</code> 　ですが。（长岛先生的伞是哪把？）<br />\n-　  <ruby>小野<rp> (</rp><rt>おの</rt><rp>)</rp></ruby> さんの　 <ruby>机<rp> (</rp><rt>つくえ</rt><rp>)</rp></ruby> は　 <code>どの</code> 　 <ruby>机<rp> (</rp><rt>つくえ</rt><rp>)</rp></ruby>　ですが。（小野女士的桌子是哪一张？）</p>\n</div></details>\n<hr />\n<h3 id=\"100以下数字\"><a class=\"anchor\" href=\"#100以下数字\">#</a> 「100」以下数字</h3>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\">0~9</th>\n<th style=\"text-align:left\">日语表示</th>\n<th style=\"text-align:center\">10~19</th>\n<th style=\"text-align:left\">日语表示</th>\n<th style=\"text-align:center\">10 的整数倍</th>\n<th style=\"text-align:left\">日语表示</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">0</td>\n<td style=\"text-align:left\">れい／ぜろ</td>\n<td style=\"text-align:center\">10</td>\n<td style=\"text-align:left\">じゅう</td>\n<td style=\"text-align:center\">20</td>\n<td style=\"text-align:left\">にじゅう</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">1</td>\n<td style=\"text-align:left\">いち</td>\n<td style=\"text-align:center\">11</td>\n<td style=\"text-align:left\">じゅういち</td>\n<td style=\"text-align:center\">30</td>\n<td style=\"text-align:left\">さんじゅう</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">2</td>\n<td style=\"text-align:left\">に</td>\n<td style=\"text-align:center\">12</td>\n<td style=\"text-align:left\">じゅうに</td>\n<td style=\"text-align:center\">40</td>\n<td style=\"text-align:left\">よんじゅう</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">3</td>\n<td style=\"text-align:left\">さん</td>\n<td style=\"text-align:center\">13</td>\n<td style=\"text-align:left\">じゅうさん</td>\n<td style=\"text-align:center\">50</td>\n<td style=\"text-align:left\">ごじゅう</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">4</td>\n<td style=\"text-align:left\">し／よん</td>\n<td style=\"text-align:center\">14</td>\n<td style=\"text-align:left\">じゅうし／じゅうよん</td>\n<td style=\"text-align:center\">60</td>\n<td style=\"text-align:left\">ろくじゅう</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">5</td>\n<td style=\"text-align:left\">ご</td>\n<td style=\"text-align:center\">15</td>\n<td style=\"text-align:left\">じゅうご</td>\n<td style=\"text-align:center\">70</td>\n<td style=\"text-align:left\">なｎじゅう</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">6</td>\n<td style=\"text-align:left\">ろく</td>\n<td style=\"text-align:center\">16</td>\n<td style=\"text-align:left\">じゅうろく</td>\n<td style=\"text-align:center\">80</td>\n<td style=\"text-align:left\">はちじゅう</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">7</td>\n<td style=\"text-align:left\">しち／なな</td>\n<td style=\"text-align:center\">17</td>\n<td style=\"text-align:left\">じゅうしち／じゅうなな</td>\n<td style=\"text-align:center\">90</td>\n<td style=\"text-align:left\">きゅうじゅう</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">8</td>\n<td style=\"text-align:left\">はち</td>\n<td style=\"text-align:center\">18</td>\n<td style=\"text-align:left\">じゅうはち</td>\n<td style=\"text-align:center\">100</td>\n<td style=\"text-align:left\">ひゃく</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">9</td>\n<td style=\"text-align:left\">く／きゅう</td>\n<td style=\"text-align:center\">19</td>\n<td style=\"text-align:left\">じゅうく／じゅうきゅう</td>\n<td style=\"text-align:center\">／</td>\n<td style=\"text-align:left\">／</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">0.1</td>\n<td style=\"text-align:left\">れいてんいち</td>\n<td style=\"text-align:center\">2/3</td>\n<td style=\"text-align:left\">さんぶんのに</td>\n<td style=\"text-align:center\">／</td>\n<td style=\"text-align:left\">／</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"词语讲解-2\"><a class=\"anchor\" href=\"#词语讲解-2\">#</a> 词语讲解</h3>\n<h4 id=\"方かた-礼貌语言\"><a class=\"anchor\" href=\"#方かた-礼貌语言\">#</a> <ruby>方<rp> (</rp><rt>かた</rt><rp>)</rp></ruby>　「礼貌语言」</h4>\n<p>对  <ruby>人<rp> (</rp><rt>ひと</rt><rp>)</rp></ruby>　的一种尊称，常用于以下几种情况：</p>\n<ul>\n<li>长辈、上司</li>\n<li>初次见面、交往不多的人</li>\n<li>会议或者公开场合</li>\n</ul>\n<h4 id=\"询问年龄-礼貌语言\"><a class=\"anchor\" href=\"#询问年龄-礼貌语言\">#</a> 询问年龄　「礼貌语言」</h4>\n<ul>\n<li><ruby>何歳<rp> (</rp><rt>なんさい</rt><rp>)</rp></ruby> ですが（多大了）</li>\n<li>おいくつですか（多大年纪了，更礼貌一些）</li>\n<li>いくつ（多大了，询问小孩）</li>\n<li><ruby>何歳<rp> (</rp><rt>なんさい</rt><rp>)</rp></ruby>（多大了，询问小孩）</li>\n</ul>\n<h4 id=\"どうぞ\"><a class=\"anchor\" href=\"#どうぞ\">#</a>  <code>どうぞ</code></h4>\n<p>意为：「请收下／请用餐」，常用于给对方物品或者劝对方进餐。</p>\n<h4 id=\"叹词-2\"><a class=\"anchor\" href=\"#叹词-2\">#</a>  <code>「叹词」</code></h4>\n<ul>\n<li>えっ：意为「啊？／啥？」，表示惊叹，意外，吃惊或者没有听懂对方说话的反问，重复说会显得不礼貌。</li>\n<li>わあ：意为「哇～！」，表示感动，吃惊或者心情激动是发出的声音。</li>\n<li>はい：意为「嗯／是的」，表示赞同对方的观点。被别人交到的时候要用  <code>はい</code>  不能用  <code>ええ</code></li>\n<li>ええ：意为「嗯／是的」，表示赞同对方的观点。</li>\n</ul>\n<h4 id=\"外来語がいらいご\"><a class=\"anchor\" href=\"#外来語がいらいご\">#</a> 「<ruby>外来語<rp> (</rp><rt>がいらいご</rt><rp>)</rp></ruby>」</h4>\n<p>外来词，大部分来自欧美语言，用片假名书写。</p>\n<ul>\n<li>スワトウ：汕头</li>\n<li>ロンドン：伦敦</li>\n<li>シルク：丝绸</li>\n</ul>\n<h4 id=\"どうも-ありがとう-ございます-寒暄语\"><a class=\"anchor\" href=\"#どうも-ありがとう-ございます-寒暄语\">#</a>  <code>どうも　ありがとう　ございます</code> 　「寒暄语」</h4>\n<p>常用于表达对对方的谢意，也可以简化版的   <code>どうも</code> ，情感没有原来那么强烈。</p>\n<h3 id=\"亲属称谓\"><a class=\"anchor\" href=\"#亲属称谓\">#</a> 亲属称谓</h3>\n<table>\n<thead>\n<tr>\n<th>自己的亲属</th>\n<th>别人的亲属</th>\n<th>自己的亲属</th>\n<th>别人的亲属</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><ruby>祖父<rp> (</rp><rt>そふ</rt><rp>)</rp></ruby>　祖父／外祖父</td>\n<td>おじいさん</td>\n<td><ruby>兄弟<rp> (</rp><rt>きょうだい</rt><rp>)</rp></ruby> 兄弟／兄弟姐妹</td>\n<td>ご<ruby>兄弟<rp> (</rp><rt>きょうだい</rt><rp>)</rp></ruby></td>\n</tr>\n<tr>\n<td><ruby>祖母<rp> (</rp><rt>そぼ</rt><rp>)</rp></ruby>　祖母／外祖母</td>\n<td>おばあさん</td>\n<td><ruby>兄<rp> (</rp><rt>あに</rt><rp>)</rp></ruby> 　哥哥</td>\n<td>お<ruby>兄<rp> (</rp><rt>にい</rt><rp>)</rp></ruby> さん</td>\n</tr>\n<tr>\n<td><ruby>両親<rp> (</rp><rt>りょうしん</rt><rp>)</rp></ruby>　父母</td>\n<td>ご<ruby>両親<rp> (</rp><rt>りょうしん</rt><rp>)</rp></ruby></td>\n<td><ruby>姉<rp> (</rp><rt>あね</rt><rp>)</rp></ruby>　姐姐</td>\n<td>お<ruby>姉<rp> (</rp><rt>ねえ</rt><rp>)</rp></ruby> さん</td>\n</tr>\n<tr>\n<td><ruby>父親<rp> (</rp><rt>ちち</rt><rp>)</rp></ruby>　父亲</td>\n<td>お <ruby>父<rp> (</rp><rt>とう</rt><rp>)</rp></ruby> さん</td>\n<td><ruby>弟<rp> (</rp><rt>おとうと</rt><rp>)</rp></ruby>　弟弟</td>\n<td><ruby>弟<rp> (</rp><rt>おとうと</rt><rp>)</rp></ruby> さん</td>\n</tr>\n<tr>\n<td><ruby>母親<rp> (</rp><rt>はは</rt><rp>)</rp></ruby>　母亲</td>\n<td>お <ruby>母<rp> (</rp><rt>かあ</rt><rp>)</rp></ruby> さん</td>\n<td><ruby>妹<rp> (</rp><rt>いもうと</rt><rp>)</rp></ruby>　妹妹</td>\n<td><ruby>妹<rp> (</rp><rt>いもうと</rt><rp>)</rp></ruby> さん</td>\n</tr>\n<tr>\n<td><ruby>息子<rp> (</rp><rt>むすこ</rt><rp>)</rp></ruby>　儿子</td>\n<td><ruby>息子<rp> (</rp><rt>むすこ</rt><rp>)</rp></ruby> さん</td>\n<td>おじ　伯伯／叔叔／舅舅／姑父</td>\n<td>おじさん</td>\n</tr>\n<tr>\n<td><ruby>娘<rp> (</rp><rt>むすめ</rt><rp>)</rp></ruby>　女儿</td>\n<td><ruby>娘<rp> (</rp><rt>むすめ</rt><rp>)</rp></ruby> さん／お <ruby>嬢<rp> (</rp><rt>じょう</rt><rp>)</rp></ruby> さん</td>\n<td>おば　伯母／婶婶／姑姑／舅妈</td>\n<td>おばさん</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"第3课-ここは-デパートです\"><a class=\"anchor\" href=\"#第3课-ここは-デパートです\">#</a> 第③课 ここは　デパートです</h2>\n<h3 id=\"语法解释-3\"><a class=\"anchor\" href=\"#语法解释-3\">#</a> 语法解释</h3>\n<h4 id=\"ここそこあそこ-は-名です\"><a class=\"anchor\" href=\"#ここそこあそこ-は-名です\">#</a>  <code>「ここ／そこ／あそこ」</code> 　は　「名」です</h4>\n<p>意为「这里是／那里是／那儿是」</p>\n<details class=\"info\"><summary>示例：</summary><div>\n<ul>\n<li><code>ここ</code> 　は　デパートです。（这里是百货商店）</li>\n<li><code>そこ</code> 　は　 <ruby>図書館<rp> (</rp><rt>としょかん</rt><rp>)</rp></ruby> です。（那里是图书馆）</li>\n<li><code>あそこ</code> 　は　 <ruby>入口<rp> (</rp><rt>いりくち</rt><rp>)</rp></ruby> です。（那儿是入口）</li>\n</ul>\n</div></details>\n<h4 id=\"名-は-名场所です\"><a class=\"anchor\" href=\"#名-は-名场所です\">#</a> 「名」　は　 <code>名「场所」</code> です</h4>\n<p>表示前面的名词在后面的场所</p>\n<details class=\"info\"><summary>示例：</summary><div>\n<ul>\n<li><ruby>食堂<rp> (</rp><rt>しょくどう</rt><rp>)</rp></ruby>　は　デパートの　 <ruby>七階<rp> (</rp><rt>ななかい</rt><rp>)</rp></ruby>　です。（食堂在百货商店的七楼）</li>\n</ul>\n</div></details>\n<h4 id=\"名-は-どこですが\"><a class=\"anchor\" href=\"#名-は-どこですが\">#</a> 「名」　は　どこですが</h4>\n<p>表示询问前面的名词在哪</p>\n<details class=\"info\"><summary>示例：</summary><div>\n<ul>\n<li>トイレ　は　どこですが。（厕所在哪？）</li>\n</ul>\n</div></details>\n<h4 id=\"名-も-名-です\"><a class=\"anchor\" href=\"#名-も-名-です\">#</a> 「名」　も　「名」　です</h4>\n<p><code>も</code> 　表示  <code>也</code>  的意思</p>\n<details class=\"info\"><summary>示例：</summary><div>\n<ul>\n<li>あなた　も　 <ruby>中国人<rp> (</rp><rt>ちゅうごくじん</rt><rp>)</rp></ruby> ですが。（你也是中国人吗？）</li>\n</ul>\n</div></details>\n<h4 id=\"名-は-名-ですか名-ですか\"><a class=\"anchor\" href=\"#名-は-名-ですか名-ですか\">#</a> 「名」　は　「名」　ですか，「名」　ですか</h4>\n<p>向别人询问答案是否是其中的一种，回答的时候不能用  <code>はい</code>  或者  <code>いいえ</code></p>\n<details class=\"info\"><summary>示例：</summary><div>\n<ul>\n<li><ruby>林<rp> (</rp><rt>はやし</rt><rp>)</rp></ruby> さんは　 <ruby>韓国人<rp> (</rp><rt>かんこくじん</rt><rp>)</rp></ruby> ですか， <ruby>日本人<rp> (</rp><rt>にほんじん</rt><rp>)</rp></ruby> ですか， <ruby>中国人<rp> (</rp><rt>ちゅうごくじん</rt><rp>)</rp></ruby> ですが。</li>\n<li><ruby>日本人<rp> (</rp><rt>にほんじん</rt><rp>)</rp></ruby> です。<br />\n—— 林先生是韩国人，日本人，还是中国人。<br />\n—— 是日本人。</li>\n</ul>\n</div></details>\n<h3 id=\"100以上数字\"><a class=\"anchor\" href=\"#100以上数字\">#</a> 100 以上数字</h3>\n<table>\n<thead>\n<tr>\n<th>100</th>\n<th>ひゃく</th>\n<th>1000</th>\n<th>せん</th>\n<th>10,000</th>\n<th>いちまん</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>200</td>\n<td>にひゃく</td>\n<td>2000</td>\n<td>にせん</td>\n<td>100,000</td>\n<td>じゅうまん</td>\n</tr>\n<tr>\n<td>300</td>\n<td>さん <code>び</code> ゃく</td>\n<td>3000</td>\n<td>さんぜん</td>\n<td>1,000,000</td>\n<td>ひゃくまん</td>\n</tr>\n<tr>\n<td>400</td>\n<td>よんひゃく</td>\n<td>4000</td>\n<td>よんせん</td>\n<td>10,000,000</td>\n<td>いっせんまん</td>\n</tr>\n<tr>\n<td>500</td>\n<td>ごひゃく</td>\n<td>5000</td>\n<td>ごせん</td>\n<td>100,000,000</td>\n<td>いちおく</td>\n</tr>\n<tr>\n<td>600</td>\n<td>ろっぴゃく</td>\n<td>6000</td>\n<td>ろくせん</td>\n<td>9002</td>\n<td>きゅうせんに</td>\n</tr>\n<tr>\n<td>700</td>\n<td>ななひゃく</td>\n<td>7000</td>\n<td>ななせん</td>\n<td>9020</td>\n<td>きゅうせんにじゅう</td>\n</tr>\n<tr>\n<td>800</td>\n<td>はっぴゃく</td>\n<td>8000</td>\n<td>はっせん</td>\n<td>9200</td>\n<td>きゅうせんにひゃく</td>\n</tr>\n<tr>\n<td>900</td>\n<td>きゅうひゃく</td>\n<td>9000</td>\n<td>きゅうせん</td>\n<td></td>\n<td></td>\n</tr>\n</tbody>\n</table>\n<blockquote>\n<p>一百、一千前面不需要加  <code>「1」</code> ，但是一万、一千万、一亿需要。</p>\n</blockquote>\n<h3 id=\"词语讲解-3\"><a class=\"anchor\" href=\"#词语讲解-3\">#</a> 词语讲解</h3>\n<h4 id=\"一階いっかい-量词一楼\"><a class=\"anchor\" href=\"#一階いっかい-量词一楼\">#</a> <ruby>一階<rp> (</rp><rt>いっかい</rt><rp>)</rp></ruby> 「量词」：一楼</h4>\n<h4 id=\"谓语省略\"><a class=\"anchor\" href=\"#谓语省略\">#</a> 谓语省略</h4>\n<p>进一步询问时，有时候只是简单的替换主语，可以把谓语省略</p>\n<details class=\"info\"><summary>示例：</summary><div>\n<ul>\n<li>これは　いくらですか</li>\n<li>あれは</li>\n</ul>\n<p>—— 这个多少钱？<br />\n—— 那个呢？</p>\n</div></details>\n<h4 id=\"礼貌语言\"><a class=\"anchor\" href=\"#礼貌语言\">#</a> 礼貌语言</h4>\n<p>-　こちら／そちら／あちら／どちら：这里／那里／那儿／哪儿</p>\n<details class=\"info\"><summary>示例：</summary><div>\n<ul>\n<li><ruby>受付<rp> (</rp><rt>うけつけ</rt><rp>)</rp></ruby> は　どこですか。（接待处在哪？）</li>\n<li>あそこです。（在那儿。）</li>\n</ul>\n</div></details>\n<h4 id=\"缩略词\"><a class=\"anchor\" href=\"#缩略词\">#</a> 缩略词</h4>\n<ul>\n<li>パソコン（パーソナルコンピューター）：个人电脑</li>\n</ul>\n<h4 id=\"あのう搭话\"><a class=\"anchor\" href=\"#あのう搭话\">#</a> あのう「搭话」</h4>\n<p>引起对方注意，开启一段对话。</p>\n<details class=\"info\"><summary>示例：</summary><div>\n<ul>\n<li>あのう， <ruby>課長<rp> (</rp><rt>かちょう</rt><rp>)</rp></ruby>。（对不起，科长）</li>\n<li><ruby>何<rp> (</rp><rt>なん</rt><rp>)</rp></ruby> ですか。（什么？）</li>\n</ul>\n</div></details>\n<h4 id=\"~ですか确认\"><a class=\"anchor\" href=\"#~ですか确认\">#</a> ～ですか「确认」</h4>\n<p>が（↗）表示不确定的询问，が（↘）表示肯定</p>\n<details class=\"info\"><summary>示例：</summary><div>\n<ul>\n<li>\n<p>あのう， <ruby>東京<rp> (</rp><rt>とうきょう</rt><rp>)</rp></ruby>　 <ruby>地図<rp> (</rp><rt>ちず</rt><rp>)</rp></ruby> は　どこですか。（请问，东京地图在什么地方？）</p>\n</li>\n<li>\n<p><ruby>地図<rp> (</rp><rt>ちず</rt><rp>)</rp></ruby> ですか（↗）。そちらです。（地图？在那儿。）</p>\n</li>\n<li>\n<p>これは　パソコンです。（那个是个人电脑）</p>\n</li>\n<li>\n<p>パソコンですか（↘）。（是个人电脑啊）</p>\n</li>\n</ul>\n</div></details>\n<h3 id=\"英文字母\"><a class=\"anchor\" href=\"#英文字母\">#</a> 英文字母</h3>\n<table>\n<thead>\n<tr>\n<th>A a</th>\n<th>エー</th>\n<th>B b</th>\n<th>ビー</th>\n<th>C c</th>\n<th>シー</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>D d</td>\n<td>ディー</td>\n<td>E e</td>\n<td>イー</td>\n<td>F f</td>\n<td>エフ</td>\n</tr>\n<tr>\n<td>G g</td>\n<td>ジー</td>\n<td>H h</td>\n<td>エイチ／エッチ</td>\n<td>I i</td>\n<td>アイ</td>\n</tr>\n<tr>\n<td>J j</td>\n<td>ジェイ</td>\n<td>K k</td>\n<td>ケー</td>\n<td>L l</td>\n<td>エル</td>\n</tr>\n<tr>\n<td>M m</td>\n<td>エム</td>\n<td>N n</td>\n<td>エヌ</td>\n<td>O o</td>\n<td>オー</td>\n</tr>\n<tr>\n<td>P p</td>\n<td>ピー</td>\n<td>Q q</td>\n<td>キュー</td>\n<td>R r</td>\n<td>アール</td>\n</tr>\n<tr>\n<td>S s</td>\n<td>エス</td>\n<td>T t</td>\n<td>ティー</td>\n<td>U u</td>\n<td>ユー</td>\n</tr>\n<tr>\n<td>V v</td>\n<td>ブー</td>\n<td>W w</td>\n<td>ダブリュー</td>\n<td>X x</td>\n<td>エックス</td>\n</tr>\n<tr>\n<td>Y y</td>\n<td>ワイ</td>\n<td>Z z</td>\n<td>ゼット／ズィー</td>\n<td></td>\n<td></td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"第4课-部屋へやに-机つくえと-いすが-あります\"><a class=\"anchor\" href=\"#第4课-部屋へやに-机つくえと-いすが-あります\">#</a> 第④课  <ruby>部屋<rp> (</rp><rt>へや</rt><rp>)</rp></ruby> に　 <ruby>机<rp> (</rp><rt>つくえ</rt><rp>)</rp></ruby> と　いすが　あります</h2>\n<h3 id=\"语法解释-4\"><a class=\"anchor\" href=\"#语法解释-4\">#</a> 语法解释</h3>\n<h4 id=\"あります-和-います\"><a class=\"anchor\" href=\"#あります-和-います\">#</a> あります　和　います</h4>\n<p>两者都表示事物存在， <code>あります</code>  表示不具有意识的死物， <code>います</code>  表示动物或昆虫</p>\n<ul>\n<li>名「场所」  <code>に</code> 　名「物／人」 <code>が</code> 　 <code>あります／います</code> ：表示  <code>~有~</code></li>\n</ul>\n<details class=\"info\"><summary>示例：</summary><div>\n<p><ruby>部屋<rp> (</rp><rt>へや</rt><rp>)</rp></ruby> に　<ruby>机<rp> (</rp><rt>つくえ</rt><rp>)</rp></ruby> が　あります。（房间里有桌子）</p>\n<p><ruby>公園<rp> (</rp><rt>こうえん</rt><rp>)</rp></ruby> に　 <ruby>子供<rp> (</rp><rt>こども</rt><rp>)</rp></ruby> が　います。（公园里有小孩）</p>\n</div></details>\n<ul>\n<li>名「物／人」  <code>は</code> 　名「场所」 <code>に</code> 　 <code>あります／います</code> ：表示  <code>~在~</code></li>\n</ul>\n<details class=\"info\"><summary>示例：</summary><div>\n<p>いす　は　<ruby>部屋<rp> (</rp><rt>へや</rt><rp>)</rp></ruby> に　あります。（椅子在房间里）</p>\n<p><ruby>子供<rp> (</rp><rt>こども</rt><rp>)</rp></ruby>　は　 <ruby>公園<rp> (</rp><rt>こうえん</rt><rp>)</rp></ruby> に　います。（小孩在公园）</p>\n</div></details>\n<ul>\n<li>疑问句</li>\n</ul>\n<details class=\"info\"><summary>示例：</summary><div>\n<p><ruby>小野<rp> (</rp><rt>おの</rt><rp>)</rp></ruby> さんの　 <ruby>家<rp> (</rp><rt>いえ</rt><rp>)</rp></ruby> は　どごに　ありますか。（小野女士的家在哪里）</p>\n<p><ruby>林<rp> (</rp><rt>はやし</rt><rp>)</rp></ruby> さんは　どごに　いますか。（林先生在哪）</p>\n</div></details>\n<h4 id=\"名と名并列\"><a class=\"anchor\" href=\"#名と名并列\">#</a> 「名」と「名」「并列」</h4>\n<p>意思和汉语的「和」相近</p>\n<details class=\"info\"><summary>示例：</summary><div>\n<ul>\n<li><ruby>時計<rp> (</rp><rt>とけい</rt><rp>)</rp></ruby>　 <code>と</code> 　 <ruby>眼鏡<rp> (</rp><rt>めがね</rt><rp>)</rp></ruby>。（表和眼镜）</li>\n</ul>\n</div></details>\n<h4 id=\"上うえ-下した-前まえ-後うしろ-隣となり-中なか-外そと\"><a class=\"anchor\" href=\"#上うえ-下した-前まえ-後うしろ-隣となり-中なか-外そと\">#</a> <ruby>上<rp> (</rp><rt>うえ</rt><rp>)</rp></ruby>／ <ruby>下<rp> (</rp><rt>した</rt><rp>)</rp></ruby>／ <ruby>前<rp> (</rp><rt>まえ</rt><rp>)</rp></ruby>／ <ruby>後<rp> (</rp><rt>うし</rt><rp>)</rp></ruby> ろ／ <ruby>隣<rp> (</rp><rt>となり</rt><rp>)</rp></ruby>／ <ruby>中<rp> (</rp><rt>なか</rt><rp>)</rp></ruby>／ <ruby>外<rp> (</rp><rt>そと</rt><rp>)</rp></ruby></h4>\n<p>意为 上／下／前／后／旁边／里面／外面。</p>\n<p>表示具体位置时，用 「名词」+  <code>の</code>  + <ruby>上<rp> (</rp><rt>うえ</rt><rp>)</rp></ruby>／ <ruby>下<rp> (</rp><rt>した</rt><rp>)</rp></ruby>／ <ruby>前<rp> (</rp><rt>まえ</rt><rp>)</rp></ruby>／ <ruby>後<rp> (</rp><rt>うし</rt><rp>)</rp></ruby> ろ／ <ruby>隣<rp> (</rp><rt>となり</rt><rp>)</rp></ruby>／ <ruby>中<rp> (</rp><rt>なか</rt><rp>)</rp></ruby>／ <ruby>外<rp> (</rp><rt>そと</rt><rp>)</rp></ruby></p>\n<details class=\"info\"><summary>示例：</summary><div>\n<ul>\n<li><ruby>机<rp> (</rp><rt>つくえ</rt><rp>)</rp></ruby>　の　<ruby>上<rp> (</rp><rt>うえ</rt><rp>)</rp></ruby>　に　 <ruby>猫<rp> (</rp><rt>ねこ</rt><rp>)</rp></ruby> が　います。（桌子上有一只猫）</li>\n</ul>\n</div></details>\n<h4 id=\"ねné确认\"><a class=\"anchor\" href=\"#ねné确认\">#</a> <ruby>ね<rp> (</rp><rt>né</rt><rp>)</rp></ruby>「确认」</h4>\n<p>一般用于结尾，表示对某件事的确认形式的提问，或者想要征求某人同意。</p>\n<details class=\"info\"><summary>示例：</summary><div>\n<ul>\n<li>あのこに　 <ruby>犬<rp> (</rp><rt>いぬ</rt><rp>)</rp></ruby> が　います <code>ね</code> 。（那儿有一只狗啊。）</li>\n</ul>\n</div></details>\n<h4 id=\"疑问词も动否定\"><a class=\"anchor\" href=\"#疑问词も动否定\">#</a> 「疑问词」+ も＋「动」（否定）</h4>\n<p>表示全面否定</p>\n<details class=\"info\"><summary>示例：</summary><div>\n<ul>\n<li><ruby>教室<rp> (</rp><rt>きょうしつ</rt><rp>)</rp></ruby> に　 <code>だれ</code> も　 <code>いません</code> 。（教师里什么都没有）</li>\n</ul>\n</div></details>\n<h3 id=\"词语讲解-4\"><a class=\"anchor\" href=\"#词语讲解-4\">#</a> 词语讲解</h3>\n<h4 id=\"上うえ的范围\"><a class=\"anchor\" href=\"#上うえ的范围\">#</a> <ruby>上<rp> (</rp><rt>うえ</rt><rp>)</rp></ruby> 的范围</h4>\n<p>日语中 <ruby>上<rp> (</rp><rt>うえ</rt><rp>)</rp></ruby> 所表示的范围只有垂直上方，不包括其他位置关系。</p>\n<p>如果要表示墙上这种关系（墙表面），一般用  <code>に</code></p>\n<details class=\"info\"><summary>示例：</summary><div>\n<ul>\n<li><ruby>壁<rp> (</rp><rt>かべ</rt><rp>)</rp></ruby> に　スイッチが　あります。（墙上有开关）👍</li>\n<li><ruby>壁<rp> (</rp><rt>かべ</rt><rp>)</rp></ruby> の　<ruby>上<rp> (</rp><rt>うえ</rt><rp>)</rp></ruby> に　スイッチが　あります。👎</li>\n</ul>\n</div></details>\n<h4 id=\"ええと\"><a class=\"anchor\" href=\"#ええと\">#</a> ええと</h4>\n<p>意为：那个...。语气词，一般表示还没想好说啥的一种回应。</p>\n<h4 id=\"ご-家族かぞくご-兄弟きょうだいご-両親りょうしん礼貌用语\"><a class=\"anchor\" href=\"#ご-家族かぞくご-兄弟きょうだいご-両親りょうしん礼貌用语\">#</a> ご <ruby>家族<rp> (</rp><rt>かぞく</rt><rp>)</rp></ruby>／ご <ruby>兄弟<rp> (</rp><rt>きょうだい</rt><rp>)</rp></ruby>／ご <ruby>両親<rp> (</rp><rt>りょうしん</rt><rp>)</rp></ruby>「礼貌用语」</h4>\n<p>表示对别人的 「家人／兄弟／父母」 的一个尊称。加上  <code>ご</code>  显得更加礼貌</p>\n<h4 id=\"兄弟きょうだい\"><a class=\"anchor\" href=\"#兄弟きょうだい\">#</a> <ruby>兄弟<rp> (</rp><rt>きょうだい</rt><rp>)</rp></ruby></h4>\n<p>日语里的 <ruby>兄弟<rp> (</rp><rt>きょうだい</rt><rp>)</rp></ruby> 仅仅指代有亲缘关系的「兄弟／姐妹／兄妹／姐弟」</p>\n",
            "tags": [
                "日语",
                "学习笔记",
                "日语语法初级（上）",
                "日语语法"
            ]
        },
        {
            "id": "https://allengx.gitee.io/computer-science/study/python/Python-HotFix/",
            "url": "https://allengx.gitee.io/computer-science/study/python/Python-HotFix/",
            "title": "Python HotFix 热更新",
            "date_published": "2020-10-21T11:05:00.000Z",
            "content_html": "<div class=\"note info\">\n<p>以下为个人学习笔记整理</p>\n</div>\n<h1 id=\"hotfix-热更新\"><a class=\"anchor\" href=\"#hotfix-热更新\">#</a> HotFix 热更新</h1>\n<h2 id=\"概念\"><a class=\"anchor\" href=\"#概念\">#</a> 概念：</h2>\n<ul>\n<li>热更新是指在 Python 程序运行过程中，修改代码中的部分片段，并能够<strong>不需要重新启动程序</strong>，便能够在运行程序中生效。</li>\n<li>热更新一般都是基于  <code>module</code>  来进行的，所以热更新本质就是更新  <code>module</code></li>\n<li>为了能够保证热更之前创建的绝大多数对象是能够正常工作的，一般会尽量避免对对象直接进行替换，能修改的尽量不替换。</li>\n</ul>\n<h2 id=\"介绍\"><a class=\"anchor\" href=\"#介绍\">#</a> 介绍：</h2>\n<ul>\n<li>一个  <code>module</code>  里面包含的内容大致可以分为以下几种：\n<ul>\n<li><code>class</code>  ：类</li>\n<li><code>function</code>  ：方法</li>\n<li><code>global object</code>  ：全局对象</li>\n</ul>\n</li>\n</ul>\n<p>看上去只有三种类似的对象，其实更新的时候注意的点还挺多的：</p>\n<ul>\n<li>模块是新增或者类型发生了变更，可以直接替换。</li>\n<li>一般不对模块内建函数和内建全局对象做操作（大部分是不可修改的，还有一些平时也不会改，没有热更必要）。</li>\n<li>除此以外的就是对三种类型的分别更新了。</li>\n</ul>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">reload_module</span><span class=\"token punctuation\">(</span>module_name<span class=\"token punctuation\">:</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token triple-quoted-string string\">\"\"\"</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    热更模块(module):</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>        ①: 更新新增成员</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        ②: 跳过 builtins 模块</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        ③: 处理类型不同的成员</pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        ④: 更新类成员</pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        ⑤: 更新函数成员</pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        ⑥: 更新成员变量</pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    \"\"\"</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>\t<span class=\"token comment\"># 该模块之前没有被加载，不允许热更新</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    old_module <span class=\"token operator\">=</span> sys<span class=\"token punctuation\">.</span>modules<span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span>module_name<span class=\"token punctuation\">,</span> <span class=\"token boolean\">None</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token keyword\">not</span> old_module<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>        <span class=\"token keyword\">raise</span> Exception<span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f\"</span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>module_name<span class=\"token punctuation\">&#125;</span></span><span class=\"token string\"> is not import can't reload\"</span></span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    </pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    <span class=\"token comment\"># Python3.7 的机制，如果不 pop 掉旧的模块， import_module 操作只会从 moduels 取出旧的缓存数据，不会重新构建</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    sys<span class=\"token punctuation\">.</span>modules<span class=\"token punctuation\">.</span>pop<span class=\"token punctuation\">(</span>module_name<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    new_module <span class=\"token operator\">=</span> importlib<span class=\"token punctuation\">.</span>import_module<span class=\"token punctuation\">(</span>module_name<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token keyword\">not</span> inspect<span class=\"token punctuation\">.</span>ismodule<span class=\"token punctuation\">(</span>new_module<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>        <span class=\"token keyword\">raise</span> Exception<span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f\"</span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>new_module<span class=\"token punctuation\">.</span>__name__<span class=\"token punctuation\">&#125;</span></span><span class=\"token string\"> is not a module\"</span></span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>    <span class=\"token keyword\">for</span> name<span class=\"token punctuation\">,</span> new_member <span class=\"token keyword\">in</span> inspect<span class=\"token punctuation\">.</span>getmembers<span class=\"token punctuation\">(</span>new_module<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>        <span class=\"token comment\"># 模块名称和 member 的 key 可能不一致 例如 import xxx as x</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>        member_name <span class=\"token operator\">=</span> <span class=\"token builtin\">getattr</span><span class=\"token punctuation\">(</span>new_member<span class=\"token punctuation\">,</span> <span class=\"token string\">\"__name__\"</span><span class=\"token punctuation\">,</span> name<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>        old_member <span class=\"token operator\">=</span> old_module<span class=\"token punctuation\">.</span>__dict__<span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span>name<span class=\"token punctuation\">,</span> <span class=\"token boolean\">None</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>        <span class=\"token comment\"># 模块内的成员模块 和 built-in 函数不做处理</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>        <span class=\"token keyword\">if</span> inspect<span class=\"token punctuation\">.</span>ismodule<span class=\"token punctuation\">(</span>new_member<span class=\"token punctuation\">)</span> <span class=\"token keyword\">or</span> \\</pre></td></tr><tr><td data-num=\"28\"></td><td><pre>            inspect<span class=\"token punctuation\">.</span>isbuiltin<span class=\"token punctuation\">(</span>new_member<span class=\"token punctuation\">)</span> <span class=\"token keyword\">or</span> \\</pre></td></tr><tr><td data-num=\"29\"></td><td><pre>            member_name <span class=\"token keyword\">in</span> builtins<span class=\"token punctuation\">.</span>__dict__<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>            <span class=\"token keyword\">continue</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>        </pre></td></tr><tr><td data-num=\"32\"></td><td><pre>        <span class=\"token comment\"># 原模块没有的内容或者类型不同直接换</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>        <span class=\"token keyword\">elif</span> <span class=\"token keyword\">not</span> old_member <span class=\"token keyword\">or</span> <span class=\"token builtin\">type</span><span class=\"token punctuation\">(</span>old_member<span class=\"token punctuation\">)</span> <span class=\"token operator\">!=</span> <span class=\"token builtin\">type</span><span class=\"token punctuation\">(</span>new_member<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>            <span class=\"token builtin\">setattr</span><span class=\"token punctuation\">(</span>old_module<span class=\"token punctuation\">,</span> name<span class=\"token punctuation\">,</span> new_member<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>        <span class=\"token comment\"># 类，走类自己的热更</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>        <span class=\"token keyword\">elif</span> inspect<span class=\"token punctuation\">.</span>isclass<span class=\"token punctuation\">(</span>new_member<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>            <span class=\"token comment\"># 枚举类型强制替换，因为枚举定义后无法被修改，这里只能替换类的定义。</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>            <span class=\"token keyword\">if</span> <span class=\"token builtin\">issubclass</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">type</span><span class=\"token punctuation\">(</span>old_member<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> enum<span class=\"token punctuation\">.</span>EnumMeta<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>                <span class=\"token builtin\">setattr</span><span class=\"token punctuation\">(</span>old_module<span class=\"token punctuation\">,</span> name<span class=\"token punctuation\">,</span> new_member<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>            <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>                reload_class<span class=\"token punctuation\">(</span>old_member<span class=\"token punctuation\">,</span> new_member<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>        <span class=\"token comment\"># 函数，热更之</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>        <span class=\"token keyword\">elif</span> inspect<span class=\"token punctuation\">.</span>isfunction<span class=\"token punctuation\">(</span>new_member<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>            <span class=\"token comment\"># 热更失败直接换，失败的原因可能是函数本身的闭包参数变更:</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>            <span class=\"token comment\"># 也不是说热更失败，只是这种情况下，热更也没办法兼容旧的逻辑，毫无意义，徒增烦恼</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>            <span class=\"token comment\"># \t@装饰器\t\t\t\t------>\t\t@装饰器</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>            <span class=\"token comment\"># \tdef func(arg1, arg2)\t\t\t  def func(arg1)</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>            <span class=\"token keyword\">if</span> <span class=\"token keyword\">not</span> reload_func<span class=\"token punctuation\">(</span>old_member<span class=\"token punctuation\">,</span> new_member<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre>                <span class=\"token builtin\">setattr</span><span class=\"token punctuation\">(</span>old_module<span class=\"token punctuation\">,</span> name<span class=\"token punctuation\">,</span> new_member<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre>        <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre>            <span class=\"token builtin\">setattr</span><span class=\"token punctuation\">(</span>old_module<span class=\"token punctuation\">,</span> name<span class=\"token punctuation\">,</span> new_member<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre>    sys<span class=\"token punctuation\">.</span>modules<span class=\"token punctuation\">[</span>module_name<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> old_module</pre></td></tr></table></figure><p>下面就来介绍一下  <code>class</code>   、 <code>function</code> 、 <code>global variable</code>   的热更新问题。</p>\n<h3 id=\"热更-class\"><a class=\"anchor\" href=\"#热更-class\">#</a> 热更 Class：</h3>\n<p>热更新类的一些注意事项：</p>\n<ul>\n<li>\n<p>类的更新一般不进行替换，而是把新的类中的内容更新到旧的类里面，为了兼容一些已经创建的类实体。</p>\n</li>\n<li>\n<p>对于以前的旧类中存在而新类不存在的内容，根据自身需求选择是否保留（这里删掉了）。</p>\n</li>\n<li>\n<p>类中包含部分不能直接修改的对象，跳过它们的更新：</p>\n<ul>\n<li><code>'__dict__', '__doc__', '__self__', '__func__'</code>  这些都是不可修改的。</li>\n</ul>\n</li>\n<li>\n<p>和模块一样，把新增的内容和类型不一致的内容更新到旧的类里面。</p>\n</li>\n<li>\n<p>和模块一样，跳过内建函数。</p>\n</li>\n<li>\n<p><code>staticmethod、classmethod</code>  函数由于无法修改，只能单独热更  <code>__func__</code>  字段。</p>\n</li>\n<li>\n<p><code>property</code>  修饰的函数直接替换即可。</p>\n</li>\n<li>\n<p>类函数则走函数的正常更新流程。</p>\n</li>\n<li>\n<p>类中定义的类依旧走类的更新。</p>\n</li>\n<li>\n<p>其他内容直接覆盖即可。</p>\n</li>\n</ul>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">reload_class</span><span class=\"token punctuation\">(</span>old_class<span class=\"token punctuation\">:</span><span class=\"token builtin\">type</span><span class=\"token punctuation\">,</span> new_class<span class=\"token punctuation\">:</span><span class=\"token builtin\">type</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token triple-quoted-string string\">\"\"\"</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    热更类(class):</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>        ①: 新增成员直接加</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        ②: builtins 成员不处理</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        ③: methoddescriptor 成员不处理</pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        ④: 类型不同直接替换</pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        ⑤: staticmethod,classmethod,property,method 直接更新</pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        ⑥: function 直接更新</pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        ⑦: class 递归更新</pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        ⑧: class 属性成员直接更新</pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    \"\"\"</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    <span class=\"token comment\"># 删除新类不存在的旧类成员</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    <span class=\"token keyword\">for</span> name<span class=\"token punctuation\">,</span> attr <span class=\"token keyword\">in</span> <span class=\"token builtin\">list</span><span class=\"token punctuation\">(</span>old_class<span class=\"token punctuation\">.</span>__dict__<span class=\"token punctuation\">.</span>items<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>        <span class=\"token keyword\">if</span> name <span class=\"token keyword\">in</span> new_class<span class=\"token punctuation\">.</span>__dict__<span class=\"token punctuation\">:</span> </pre></td></tr><tr><td data-num=\"16\"></td><td><pre>            <span class=\"token keyword\">continue</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token keyword\">not</span> inspect<span class=\"token punctuation\">.</span>isfunction<span class=\"token punctuation\">(</span>attr<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span> </pre></td></tr><tr><td data-num=\"18\"></td><td><pre>            <span class=\"token keyword\">continue</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>        <span class=\"token builtin\">type</span><span class=\"token punctuation\">.</span>__delattr__<span class=\"token punctuation\">(</span>old_class<span class=\"token punctuation\">,</span> name<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>    ignore_attr_lst <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span> <span class=\"token string\">\"__dict__\"</span><span class=\"token punctuation\">,</span>         <span class=\"token comment\"># attribute objects is not writable</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>        <span class=\"token string\">'__doc__'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'__self__'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'__func__'</span><span class=\"token punctuation\">,</span>    <span class=\"token comment\"># can't set attributes of built-in/extension</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>    <span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>    </pre></td></tr><tr><td data-num=\"25\"></td><td><pre>    <span class=\"token keyword\">for</span> name<span class=\"token punctuation\">,</span> new_attr <span class=\"token keyword\">in</span> new_class<span class=\"token punctuation\">.</span>__dict__<span class=\"token punctuation\">.</span>items<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>        <span class=\"token keyword\">if</span> name <span class=\"token keyword\">in</span> ignore_attr_lst<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>            <span class=\"token keyword\">continue</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>        old_attr <span class=\"token operator\">=</span> old_class<span class=\"token punctuation\">.</span>__dict__<span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span>name<span class=\"token punctuation\">,</span> <span class=\"token boolean\">None</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>        <span class=\"token comment\"># 新增内容直接加</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token keyword\">not</span> old_attr<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>            <span class=\"token builtin\">setattr</span><span class=\"token punctuation\">(</span>old_class<span class=\"token punctuation\">,</span> name<span class=\"token punctuation\">,</span> new_attr<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>        <span class=\"token keyword\">elif</span> inspect<span class=\"token punctuation\">.</span>isbuiltin<span class=\"token punctuation\">(</span>new_attr<span class=\"token punctuation\">)</span> <span class=\"token keyword\">or</span> name <span class=\"token keyword\">in</span> builtins<span class=\"token punctuation\">.</span>__dict__<span class=\"token punctuation\">.</span>keys<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>            <span class=\"token keyword\">continue</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>        <span class=\"token comment\"># 类型不同直接换</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>        <span class=\"token keyword\">elif</span> <span class=\"token builtin\">type</span><span class=\"token punctuation\">(</span>old_attr<span class=\"token punctuation\">)</span> <span class=\"token operator\">!=</span> <span class=\"token builtin\">type</span><span class=\"token punctuation\">(</span>new_attr<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>            <span class=\"token builtin\">setattr</span><span class=\"token punctuation\">(</span>old_class<span class=\"token punctuation\">,</span> name<span class=\"token punctuation\">,</span> new_attr<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>        <span class=\"token keyword\">elif</span> <span class=\"token builtin\">isinstance</span><span class=\"token punctuation\">(</span>new_attr<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">staticmethod</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">classmethod</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>            <span class=\"token keyword\">if</span> <span class=\"token keyword\">not</span> reload_func<span class=\"token punctuation\">(</span>old_attr<span class=\"token punctuation\">.</span>__func__<span class=\"token punctuation\">,</span> new_attr<span class=\"token punctuation\">.</span>__func__<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>                <span class=\"token builtin\">setattr</span><span class=\"token punctuation\">(</span>old_class<span class=\"token punctuation\">,</span> name<span class=\"token punctuation\">,</span> new_attr<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>        <span class=\"token keyword\">elif</span> <span class=\"token builtin\">isinstance</span><span class=\"token punctuation\">(</span>new_attr<span class=\"token punctuation\">,</span> <span class=\"token builtin\">property</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>            <span class=\"token builtin\">setattr</span><span class=\"token punctuation\">(</span>old_class<span class=\"token punctuation\">,</span> name<span class=\"token punctuation\">,</span> new_attr<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>        <span class=\"token keyword\">elif</span> inspect<span class=\"token punctuation\">.</span>isfunction<span class=\"token punctuation\">(</span>new_attr<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>            <span class=\"token keyword\">if</span> <span class=\"token keyword\">not</span> reload_func<span class=\"token punctuation\">(</span>old_attr<span class=\"token punctuation\">,</span> new_attr<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>                <span class=\"token builtin\">setattr</span><span class=\"token punctuation\">(</span>old_class<span class=\"token punctuation\">,</span> name<span class=\"token punctuation\">,</span> new_attr<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>        <span class=\"token keyword\">elif</span> inspect<span class=\"token punctuation\">.</span>isclass<span class=\"token punctuation\">(</span>new_attr<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>            reload_class<span class=\"token punctuation\">(</span>old_attr<span class=\"token punctuation\">,</span> new_attr<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>        <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>            <span class=\"token builtin\">setattr</span><span class=\"token punctuation\">(</span>old_class<span class=\"token punctuation\">,</span> name<span class=\"token punctuation\">,</span> new_attr<span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h3 id=\"热更-function\"><a class=\"anchor\" href=\"#热更-function\">#</a> 热更 Function：</h3>\n<p>函数的更新算是热更里面最核心的内容了，注意点也挺多：</p>\n<ul>\n<li>\n<p>函数的热更新一般也不对函数本身进行替换，直接修改即可，迫不得已情况下可以考虑换掉。</p>\n</li>\n<li>\n<p>函数本身因为没有涉及到过多的自定义内容，大部分都是逻辑，所以内置的东西粗略的看下来就几样：</p>\n<ul>\n<li><code>__closure__ </code> ：闭包的关联参数</li>\n<li><code>__code__</code> ：编译后的代码对象</li>\n<li><code>__defaults__</code> ：k-v 的默认值</li>\n<li><code>__dict__</code> ：命名空间支持的函数属性</li>\n<li><code>__globals__</code> ：全局变量字典</li>\n<li><code>__name__</code> ：函数名</li>\n<li><code>__qualname__</code> ：函数全名</li>\n<li><code>__annotations__</code> ：类型标注</li>\n<li><code>__kwdefaults__</code> ：关键字默认值字典</li>\n</ul>\n</li>\n<li>\n<p>把上述的几个替换一下即可，这里要注意一下，有部分字段也是不可修改的：</p>\n<ul>\n<li><code>__class__</code>    ：assignment only supported for heap types or ModuleType subclasses</li>\n<li><code>__closure__</code>   ：readonly attribute</li>\n<li><code>__globals__</code>   ：readonly attribute</li>\n</ul>\n</li>\n</ul>\n<ul>\n<li>\n<p>除此以外，还需要注意检验函数的闭包变量是否发生变更，如果变更了也要进行更新：</p>\n<ul>\n<li>对于带有 super () 调用的函数，其闭包内会存储自身的引用，这个不需要更新：</li>\n</ul>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name\">c_1</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token keyword\">def</span> <span class=\"token function\">__init__</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>        <span class=\"token builtin\">super</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>__init__<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>        </pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>c_1<span class=\"token punctuation\">.</span>__init__<span class=\"token punctuation\">.</span>__code__<span class=\"token punctuation\">.</span>co_freevars<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>__class__</pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>c_1<span class=\"token punctuation\">.</span>__init__<span class=\"token punctuation\">.</span>__closure__<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>cell_contents<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token operator\">&lt;</span><span class=\"token keyword\">class</span> <span class=\"token string\">'__main__.c_1'</span><span class=\"token operator\">></span></pre></td></tr></table></figure></li>\n<li>\n<p>闭包参数数量不一致的情况下，直接替换，更新意义不大。</p>\n</li>\n</ul>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">reload_func</span><span class=\"token punctuation\">(</span>old_func<span class=\"token punctuation\">:</span>types<span class=\"token punctuation\">.</span>FunctionType<span class=\"token punctuation\">,</span> new_func<span class=\"token punctuation\">:</span>types<span class=\"token punctuation\">.</span>FunctionType<span class=\"token punctuation\">,</span> depth <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token triple-quoted-string string\">\"\"\"</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    热更函数(func):</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>        ①: 更新旧函数里面的属性，详细内容见下方定义</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        ②: 部分属性不可写或无法修改的不做处理</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        ③: 处理闭包 cellvar</pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        ④: 新增函数或变量直接添加</pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        ⑤: 类型变更直接替换</pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        ⑥: 其他情况也直接替换即可</pre></td></tr><tr><td data-num=\"10\"></td><td><pre></pre></td></tr><tr><td data-num=\"11\"></td><td><pre></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    函数基本定义:</pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    class FunctionType:</pre></td></tr><tr><td data-num=\"14\"></td><td><pre>        __closure__: Optional[Tuple[_Cell, ...]]</pre></td></tr><tr><td data-num=\"15\"></td><td><pre>        __code__: CodeType</pre></td></tr><tr><td data-num=\"16\"></td><td><pre>        __defaults__: Optional[Tuple[Any, ...]]</pre></td></tr><tr><td data-num=\"17\"></td><td><pre>        __dict__: Dict[str, Any]</pre></td></tr><tr><td data-num=\"18\"></td><td><pre>        __globals__: Dict[str, Any]</pre></td></tr><tr><td data-num=\"19\"></td><td><pre>        __name__: str</pre></td></tr><tr><td data-num=\"20\"></td><td><pre>        __qualname__: str</pre></td></tr><tr><td data-num=\"21\"></td><td><pre>        __annotations__: Dict[str, Any]</pre></td></tr><tr><td data-num=\"22\"></td><td><pre>        __kwdefaults__: Dict[str, Any]</pre></td></tr><tr><td data-num=\"23\"></td><td><pre>        def __init__(self, code: CodeType, globals: Dict[str, Any], name: Optional[str] = ..., argdefs: Optional[Tuple[object, ...]] = ..., closure: Optional[Tuple[_Cell, ...]] = ...) -> None: ...</pre></td></tr><tr><td data-num=\"24\"></td><td><pre>        def __call__(self, *args: Any, **kwargs: Any) -> Any: ...</pre></td></tr><tr><td data-num=\"25\"></td><td><pre>        def __get__(self, obj: Optional[object], type: Optional[type]) -> MethodType: ...</pre></td></tr><tr><td data-num=\"26\"></td><td><pre></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>    闭包问题:</pre></td></tr><tr><td data-num=\"28\"></td><td><pre>        - Python 函数调用时出现闭包参数不一致,热更后会导致报错</pre></td></tr><tr><td data-num=\"29\"></td><td><pre>            def out_func():</pre></td></tr><tr><td data-num=\"30\"></td><td><pre>                arg1 = 1</pre></td></tr><tr><td data-num=\"31\"></td><td><pre>                def inner_func():</pre></td></tr><tr><td data-num=\"32\"></td><td><pre>                    print(arg1)</pre></td></tr><tr><td data-num=\"33\"></td><td><pre>                return inner_func</pre></td></tr><tr><td data-num=\"34\"></td><td><pre></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>            </pre></td></tr><tr><td data-num=\"36\"></td><td><pre>            f = out_func # 热更前代码</pre></td></tr><tr><td data-num=\"37\"></td><td><pre>            f = out_func # 热更后代码</pre></td></tr><tr><td data-num=\"38\"></td><td><pre>            f() # 调用</pre></td></tr><tr><td data-num=\"39\"></td><td><pre>            # out: requires a code object with 1 free vars, not 0</pre></td></tr><tr><td data-num=\"40\"></td><td><pre></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>    闭包原理:</pre></td></tr><tr><td data-num=\"42\"></td><td><pre>        - out_func 在执行过程中，会把自身运行栈中内层函数引用的变量以 ob_ref 的形式绑定到 co_cellvars 的tuple当中(out_func.__closure__)。</pre></td></tr><tr><td data-num=\"43\"></td><td><pre>        - 在 inner_func 对象内，解开传递进来的 co_cellvars 的tuple并重新绑定到自己的 co_freevars 的tuple中</pre></td></tr><tr><td data-num=\"44\"></td><td><pre>        - 如果想要热更闭包内容，只需要替换掉 inner_func.__closure__ 里的内容</pre></td></tr><tr><td data-num=\"45\"></td><td><pre></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>    部分不可变属性:</pre></td></tr><tr><td data-num=\"47\"></td><td><pre>        - \"__class__\"   assignment only supported for heap types or ModuleType subclasses</pre></td></tr><tr><td data-num=\"48\"></td><td><pre>        - \"__closure__\" readonly attribute</pre></td></tr><tr><td data-num=\"49\"></td><td><pre>        - \"__globals__\" readonly attribute</pre></td></tr><tr><td data-num=\"50\"></td><td><pre>    \"\"\"</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre>   </pre></td></tr><tr><td data-num=\"52\"></td><td><pre>    <span class=\"token keyword\">if</span> depth <span class=\"token operator\">></span> <span class=\"token number\">2</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre>        <span class=\"token keyword\">return</span> <span class=\"token boolean\">False</span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre>    </pre></td></tr><tr><td data-num=\"55\"></td><td><pre>    <span class=\"token comment\"># 闭包参数不一致，无法更新</span></pre></td></tr><tr><td data-num=\"56\"></td><td><pre>    old_cell_var_num <span class=\"token operator\">=</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>old_func<span class=\"token punctuation\">.</span>__closure__<span class=\"token punctuation\">)</span> <span class=\"token keyword\">if</span> old_func<span class=\"token punctuation\">.</span>__closure__ <span class=\"token keyword\">else</span> <span class=\"token number\">0</span></pre></td></tr><tr><td data-num=\"57\"></td><td><pre>    new_cell_var_num <span class=\"token operator\">=</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>new_func<span class=\"token punctuation\">.</span>__closure__<span class=\"token punctuation\">)</span> <span class=\"token keyword\">if</span> new_func<span class=\"token punctuation\">.</span>__closure__ <span class=\"token keyword\">else</span> <span class=\"token number\">0</span></pre></td></tr><tr><td data-num=\"58\"></td><td><pre>    <span class=\"token keyword\">if</span> old_cell_var_num <span class=\"token operator\">!=</span> new_cell_var_num<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"59\"></td><td><pre>        <span class=\"token keyword\">return</span> <span class=\"token boolean\">False</span></pre></td></tr><tr><td data-num=\"60\"></td><td><pre></pre></td></tr><tr><td data-num=\"61\"></td><td><pre></pre></td></tr><tr><td data-num=\"62\"></td><td><pre>    <span class=\"token comment\"># 更新属性</span></pre></td></tr><tr><td data-num=\"63\"></td><td><pre>    <span class=\"token builtin\">setattr</span><span class=\"token punctuation\">(</span>old_func<span class=\"token punctuation\">,</span> <span class=\"token string\">'__code__'</span><span class=\"token punctuation\">,</span> new_func<span class=\"token punctuation\">.</span>__code__<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"64\"></td><td><pre>    <span class=\"token builtin\">setattr</span><span class=\"token punctuation\">(</span>old_func<span class=\"token punctuation\">,</span> <span class=\"token string\">'__defaults__'</span><span class=\"token punctuation\">,</span> new_func<span class=\"token punctuation\">.</span>__defaults__<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"65\"></td><td><pre>    <span class=\"token builtin\">setattr</span><span class=\"token punctuation\">(</span>old_func<span class=\"token punctuation\">,</span> <span class=\"token string\">'__dict__'</span><span class=\"token punctuation\">,</span> new_func<span class=\"token punctuation\">.</span>__dict__<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"66\"></td><td><pre>    <span class=\"token builtin\">setattr</span><span class=\"token punctuation\">(</span>old_func<span class=\"token punctuation\">,</span> <span class=\"token string\">'__name__'</span><span class=\"token punctuation\">,</span> new_func<span class=\"token punctuation\">.</span>__name__<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"67\"></td><td><pre>    <span class=\"token builtin\">setattr</span><span class=\"token punctuation\">(</span>old_func<span class=\"token punctuation\">,</span> <span class=\"token string\">'__qualname__'</span><span class=\"token punctuation\">,</span> new_func<span class=\"token punctuation\">.</span>__qualname__<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"68\"></td><td><pre>    <span class=\"token builtin\">setattr</span><span class=\"token punctuation\">(</span>old_func<span class=\"token punctuation\">,</span> <span class=\"token string\">'__annotations__'</span><span class=\"token punctuation\">,</span> new_func<span class=\"token punctuation\">.</span>__annotations__<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"69\"></td><td><pre>    <span class=\"token comment\"># 类型标注</span></pre></td></tr><tr><td data-num=\"70\"></td><td><pre>    <span class=\"token builtin\">setattr</span><span class=\"token punctuation\">(</span>old_func<span class=\"token punctuation\">,</span> <span class=\"token string\">'__kwdefaults__'</span><span class=\"token punctuation\">,</span> new_func<span class=\"token punctuation\">.</span>__kwdefaults__<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"71\"></td><td><pre>    <span class=\"token comment\"># def m(cls,a=1,b=2,*kwarg,g=1,v=2): __kwdefaults__ = &#123;'g': 1, 'v': 2&#125;</span></pre></td></tr><tr><td data-num=\"72\"></td><td><pre>    </pre></td></tr><tr><td data-num=\"73\"></td><td><pre></pre></td></tr><tr><td data-num=\"74\"></td><td><pre>    <span class=\"token comment\"># 更新闭包参数</span></pre></td></tr><tr><td data-num=\"75\"></td><td><pre>    <span class=\"token keyword\">if</span> old_cell_var_num <span class=\"token operator\">></span> <span class=\"token number\">0</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"76\"></td><td><pre>        ignore_idx <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"77\"></td><td><pre>        <span class=\"token keyword\">for</span> idx<span class=\"token punctuation\">,</span> freevar <span class=\"token keyword\">in</span> <span class=\"token builtin\">enumerate</span><span class=\"token punctuation\">(</span>old_func<span class=\"token punctuation\">.</span>__code__<span class=\"token punctuation\">.</span>co_freevars<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"78\"></td><td><pre>            <span class=\"token comment\"># super () 操作不改变其指向的父类 __class__</span></pre></td></tr><tr><td data-num=\"79\"></td><td><pre>            <span class=\"token keyword\">if</span> freevar <span class=\"token operator\">==</span> <span class=\"token string\">\"__class__\"</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"80\"></td><td><pre>                ignore_idx<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>idx<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"81\"></td><td><pre></pre></td></tr><tr><td data-num=\"82\"></td><td><pre>        <span class=\"token keyword\">for</span> idx<span class=\"token punctuation\">,</span> old_cellvar <span class=\"token keyword\">in</span> <span class=\"token builtin\">enumerate</span><span class=\"token punctuation\">(</span>old_func<span class=\"token punctuation\">.</span>__closure__<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"83\"></td><td><pre>            <span class=\"token keyword\">if</span> idx <span class=\"token keyword\">in</span> ignore_idx<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"84\"></td><td><pre>                <span class=\"token keyword\">continue</span></pre></td></tr><tr><td data-num=\"85\"></td><td><pre>            new_cellvar <span class=\"token operator\">=</span> new_func<span class=\"token punctuation\">.</span>__closure__<span class=\"token punctuation\">[</span>idx<span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"86\"></td><td><pre>            <span class=\"token comment\"># 闭包参数是函数的话递归更新</span></pre></td></tr><tr><td data-num=\"87\"></td><td><pre>            <span class=\"token keyword\">if</span> inspect<span class=\"token punctuation\">.</span>isfunction<span class=\"token punctuation\">(</span>old_cellvar<span class=\"token punctuation\">.</span>cell_contents<span class=\"token punctuation\">)</span> <span class=\"token keyword\">and</span> inspect<span class=\"token punctuation\">.</span>isfunction<span class=\"token punctuation\">(</span>new_cellvar<span class=\"token punctuation\">.</span>cell_contents<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"88\"></td><td><pre>                <span class=\"token keyword\">if</span> <span class=\"token keyword\">not</span> reload_func<span class=\"token punctuation\">(</span>old_cellvar<span class=\"token punctuation\">.</span>cell_contents<span class=\"token punctuation\">,</span> new_cellvar<span class=\"token punctuation\">.</span>cell_contents<span class=\"token punctuation\">,</span> depth <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"89\"></td><td><pre>                    old_cellvar<span class=\"token punctuation\">.</span>cell_contents <span class=\"token operator\">=</span> new_cellvar<span class=\"token punctuation\">.</span>cell_contents</pre></td></tr><tr><td data-num=\"90\"></td><td><pre>            <span class=\"token comment\"># 其他情况都视作替换</span></pre></td></tr><tr><td data-num=\"91\"></td><td><pre>            <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"92\"></td><td><pre>                old_cellvar<span class=\"token punctuation\">.</span>cell_contents <span class=\"token operator\">=</span> new_cellvar<span class=\"token punctuation\">.</span>cell_contents</pre></td></tr><tr><td data-num=\"93\"></td><td><pre>    <span class=\"token keyword\">return</span> <span class=\"token boolean\">True</span></pre></td></tr></table></figure><h3 id=\"热更-global-object\"><a class=\"anchor\" href=\"#热更-global-object\">#</a> 热更 global object：</h3>\n<p>全局对象的更新就比较的简单，大致可以分为两种：</p>\n<ul>\n<li>能够获取到所有需要热更对象的引用，可以直接在对象上进行修改。</li>\n<li>不能获取的情况下，直接修改模块内的定义。缺点就是已经创建了的对象，内容还是旧的。</li>\n</ul>\n<h3 id=\"测试代码\"><a class=\"anchor\" href=\"#测试代码\">#</a> 测试代码：</h3>\n<ul>\n<li>修改前的代码：</li>\n</ul>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\"># -*- coding: utf8 -*-</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">import</span> ccore</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">import</span> enum</pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">import</span> functools</pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">import</span> dataclasses</pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">import</span> typing</pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token keyword\">import</span> collections</pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token comment\"># 全局变量测试</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>a_1 <span class=\"token operator\">=</span> <span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>a_2 <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>a_3 <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>a_4 <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span><span class=\"token number\">1</span><span class=\"token punctuation\">:</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">:</span><span class=\"token number\">2</span><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>a_5 <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token number\">3</span><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>a_6 <span class=\"token operator\">=</span> <span class=\"token number\">1.1</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>a_7 <span class=\"token operator\">=</span> <span class=\"token builtin\">object</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>a_8 <span class=\"token operator\">=</span> <span class=\"token builtin\">len</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>a_9 <span class=\"token operator\">=</span> functools<span class=\"token punctuation\">.</span>partial<span class=\"token punctuation\">(</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">,</span> a_2<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>a_10 <span class=\"token operator\">=</span> collections<span class=\"token punctuation\">.</span>defaultdict<span class=\"token punctuation\">(</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre></pre></td></tr><tr><td data-num=\"20\"></td><td><pre><span class=\"token comment\"># 函数测试</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">b_1</span><span class=\"token punctuation\">(</span>arg1<span class=\"token punctuation\">,</span> arg2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>    b_100 <span class=\"token operator\">=</span> <span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>    b_200 <span class=\"token operator\">=</span> <span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>    <span class=\"token keyword\">return</span> b_100<span class=\"token operator\">+</span>b_200</pre></td></tr><tr><td data-num=\"25\"></td><td><pre></pre></td></tr><tr><td data-num=\"26\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">b_2</span><span class=\"token punctuation\">(</span>arg1<span class=\"token punctuation\">,</span> arg2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>    <span class=\"token keyword\">return</span> arg1 <span class=\"token operator\">+</span> arg2</pre></td></tr><tr><td data-num=\"28\"></td><td><pre></pre></td></tr><tr><td data-num=\"29\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">b_3</span><span class=\"token punctuation\">(</span>arg1<span class=\"token punctuation\">,</span> arg2<span class=\"token punctuation\">,</span> <span class=\"token operator\">*</span>args<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>    <span class=\"token keyword\">return</span> arg2 <span class=\"token operator\">+</span> arg1 <span class=\"token operator\">+</span> <span class=\"token builtin\">sum</span><span class=\"token punctuation\">(</span>args<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre></pre></td></tr><tr><td data-num=\"32\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">b_4</span><span class=\"token punctuation\">(</span>arg1 <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> arg2 <span class=\"token operator\">=</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">*</span>args<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>    <span class=\"token keyword\">return</span> arg2 <span class=\"token operator\">+</span> arg1 <span class=\"token operator\">+</span> <span class=\"token builtin\">sum</span><span class=\"token punctuation\">(</span>args<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre></pre></td></tr><tr><td data-num=\"35\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">b_5</span><span class=\"token punctuation\">(</span>arg1 <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> arg2 <span class=\"token operator\">=</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">*</span>args<span class=\"token punctuation\">,</span> <span class=\"token operator\">**</span>kwargs<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>    <span class=\"token keyword\">return</span> arg2 <span class=\"token operator\">+</span> arg1 <span class=\"token operator\">+</span> <span class=\"token builtin\">sum</span><span class=\"token punctuation\">(</span>args<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token builtin\">sum</span><span class=\"token punctuation\">(</span>kwargs<span class=\"token punctuation\">.</span>values<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre></pre></td></tr><tr><td data-num=\"38\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">b_6</span><span class=\"token punctuation\">(</span>arg1 <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> arg2 <span class=\"token operator\">=</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">*</span>args<span class=\"token punctuation\">,</span> arg3 <span class=\"token operator\">=</span> <span class=\"token number\">4</span><span class=\"token punctuation\">,</span> arg4 <span class=\"token operator\">=</span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>    <span class=\"token keyword\">return</span> arg2 <span class=\"token operator\">+</span> arg1 <span class=\"token operator\">+</span> <span class=\"token builtin\">sum</span><span class=\"token punctuation\">(</span>args<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> arg3 <span class=\"token operator\">+</span> arg4</pre></td></tr><tr><td data-num=\"40\"></td><td><pre></pre></td></tr><tr><td data-num=\"41\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">b_7</span><span class=\"token punctuation\">(</span>func<span class=\"token punctuation\">,</span> arg1 <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> arg2 <span class=\"token operator\">=</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>    <span class=\"token decorator annotation punctuation\">@functools<span class=\"token punctuation\">.</span>wraps</span><span class=\"token punctuation\">(</span>func<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>    <span class=\"token keyword\">def</span> <span class=\"token function\">inner</span><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span>args<span class=\"token punctuation\">,</span> <span class=\"token operator\">**</span>kwargs<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>        <span class=\"token keyword\">return</span> arg1 <span class=\"token operator\">+</span> arg2 <span class=\"token operator\">+</span> func<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>    <span class=\"token keyword\">return</span> inner</pre></td></tr><tr><td data-num=\"46\"></td><td><pre></pre></td></tr><tr><td data-num=\"47\"></td><td><pre><span class=\"token decorator annotation punctuation\">@b_7</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">b_8</span><span class=\"token punctuation\">(</span>arg1 <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> arg2 <span class=\"token operator\">=</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">*</span>args<span class=\"token punctuation\">,</span> arg3 <span class=\"token operator\">=</span> <span class=\"token number\">4</span><span class=\"token punctuation\">,</span> arg4 <span class=\"token operator\">=</span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre>    <span class=\"token keyword\">return</span> arg2 <span class=\"token operator\">+</span> arg1 <span class=\"token operator\">+</span> <span class=\"token builtin\">sum</span><span class=\"token punctuation\">(</span>args<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> arg3 <span class=\"token operator\">+</span> arg4</pre></td></tr><tr><td data-num=\"50\"></td><td><pre></pre></td></tr><tr><td data-num=\"51\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">b_9</span><span class=\"token punctuation\">(</span>arg1 <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> arg2 <span class=\"token operator\">=</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre>    <span class=\"token keyword\">def</span> <span class=\"token function\">wapper</span><span class=\"token punctuation\">(</span>func<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre>        <span class=\"token decorator annotation punctuation\">@functools<span class=\"token punctuation\">.</span>wraps</span><span class=\"token punctuation\">(</span>func<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre>        <span class=\"token keyword\">def</span> <span class=\"token function\">inner</span><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span>args<span class=\"token punctuation\">,</span> <span class=\"token operator\">**</span>kwargs<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"55\"></td><td><pre>            <span class=\"token keyword\">return</span> arg1 <span class=\"token operator\">+</span> arg2 <span class=\"token operator\">+</span> func<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"56\"></td><td><pre>        <span class=\"token keyword\">return</span> inner</pre></td></tr><tr><td data-num=\"57\"></td><td><pre>    <span class=\"token keyword\">return</span> wapper</pre></td></tr><tr><td data-num=\"58\"></td><td><pre></pre></td></tr><tr><td data-num=\"59\"></td><td><pre><span class=\"token decorator annotation punctuation\">@b_9</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"60\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">b_10</span><span class=\"token punctuation\">(</span>arg1 <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> arg2 <span class=\"token operator\">=</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">*</span>args<span class=\"token punctuation\">,</span> arg3 <span class=\"token operator\">=</span> <span class=\"token number\">4</span><span class=\"token punctuation\">,</span> arg4 <span class=\"token operator\">=</span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"61\"></td><td><pre>    <span class=\"token keyword\">return</span> arg2 <span class=\"token operator\">+</span> arg1 <span class=\"token operator\">+</span> <span class=\"token builtin\">sum</span><span class=\"token punctuation\">(</span>args<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> arg3 <span class=\"token operator\">+</span> arg4</pre></td></tr><tr><td data-num=\"62\"></td><td><pre></pre></td></tr><tr><td data-num=\"63\"></td><td><pre><span class=\"token comment\"># 类测试</span></pre></td></tr><tr><td data-num=\"64\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name\">c_1</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"65\"></td><td><pre>    c_100 <span class=\"token operator\">=</span> <span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"66\"></td><td><pre>    c_200 <span class=\"token operator\">=</span> <span class=\"token number\">2</span></pre></td></tr><tr><td data-num=\"67\"></td><td><pre></pre></td></tr><tr><td data-num=\"68\"></td><td><pre>    <span class=\"token keyword\">def</span> <span class=\"token function\">__init__</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"69\"></td><td><pre>        <span class=\"token builtin\">super</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>__init__<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"70\"></td><td><pre></pre></td></tr><tr><td data-num=\"71\"></td><td><pre>    <span class=\"token keyword\">def</span> <span class=\"token function\">__call__</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"72\"></td><td><pre>        <span class=\"token keyword\">return</span> <span class=\"token boolean\">False</span></pre></td></tr><tr><td data-num=\"73\"></td><td><pre></pre></td></tr><tr><td data-num=\"74\"></td><td><pre>    <span class=\"token keyword\">def</span> <span class=\"token function\">c_1000</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span>arg1 <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> arg2 <span class=\"token operator\">=</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">*</span>args<span class=\"token punctuation\">,</span> arg3 <span class=\"token operator\">=</span> <span class=\"token number\">4</span><span class=\"token punctuation\">,</span> arg4 <span class=\"token operator\">=</span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"75\"></td><td><pre>        <span class=\"token keyword\">return</span> arg2 <span class=\"token operator\">+</span> arg1 <span class=\"token operator\">+</span> <span class=\"token builtin\">sum</span><span class=\"token punctuation\">(</span>args<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> arg3 <span class=\"token operator\">+</span> arg4</pre></td></tr><tr><td data-num=\"76\"></td><td><pre></pre></td></tr><tr><td data-num=\"77\"></td><td><pre>    <span class=\"token decorator annotation punctuation\">@property</span></pre></td></tr><tr><td data-num=\"78\"></td><td><pre>    <span class=\"token keyword\">def</span> <span class=\"token function\">C_100</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"79\"></td><td><pre>        <span class=\"token keyword\">return</span> self<span class=\"token punctuation\">.</span>c_100</pre></td></tr><tr><td data-num=\"80\"></td><td><pre></pre></td></tr><tr><td data-num=\"81\"></td><td><pre>    <span class=\"token decorator annotation punctuation\">@classmethod</span></pre></td></tr><tr><td data-num=\"82\"></td><td><pre>    <span class=\"token keyword\">def</span> <span class=\"token function\">c_2000</span><span class=\"token punctuation\">(</span>cls<span class=\"token punctuation\">,</span>arg1 <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> arg2 <span class=\"token operator\">=</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">*</span>args<span class=\"token punctuation\">,</span> arg3 <span class=\"token operator\">=</span> <span class=\"token number\">4</span><span class=\"token punctuation\">,</span> arg4 <span class=\"token operator\">=</span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"83\"></td><td><pre>        <span class=\"token keyword\">return</span> arg2 <span class=\"token operator\">+</span> arg1 <span class=\"token operator\">+</span> <span class=\"token builtin\">sum</span><span class=\"token punctuation\">(</span>args<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> arg3 <span class=\"token operator\">+</span> arg4</pre></td></tr><tr><td data-num=\"84\"></td><td><pre></pre></td></tr><tr><td data-num=\"85\"></td><td><pre>    <span class=\"token decorator annotation punctuation\">@staticmethod</span></pre></td></tr><tr><td data-num=\"86\"></td><td><pre>    <span class=\"token keyword\">def</span> <span class=\"token function\">c_3000</span><span class=\"token punctuation\">(</span>arg1 <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> arg2 <span class=\"token operator\">=</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">*</span>args<span class=\"token punctuation\">,</span> arg3 <span class=\"token operator\">=</span> <span class=\"token number\">4</span><span class=\"token punctuation\">,</span> arg4 <span class=\"token operator\">=</span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"87\"></td><td><pre>        <span class=\"token keyword\">return</span> arg2 <span class=\"token operator\">+</span> arg1 <span class=\"token operator\">+</span> <span class=\"token builtin\">sum</span><span class=\"token punctuation\">(</span>args<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> arg3 <span class=\"token operator\">+</span> arg4</pre></td></tr><tr><td data-num=\"88\"></td><td><pre></pre></td></tr><tr><td data-num=\"89\"></td><td><pre>    <span class=\"token keyword\">def</span> <span class=\"token function\">c_4000</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> arg1 <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> arg2 <span class=\"token operator\">=</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"90\"></td><td><pre>        <span class=\"token keyword\">def</span> <span class=\"token function\">wapper</span><span class=\"token punctuation\">(</span>func<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"91\"></td><td><pre>            <span class=\"token decorator annotation punctuation\">@functools<span class=\"token punctuation\">.</span>wraps</span><span class=\"token punctuation\">(</span>func<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"92\"></td><td><pre>            <span class=\"token keyword\">def</span> <span class=\"token function\">inner</span><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span>args<span class=\"token punctuation\">,</span> <span class=\"token operator\">**</span>kwargs<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"93\"></td><td><pre>                <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span></pre></td></tr><tr><td data-num=\"94\"></td><td><pre>            <span class=\"token keyword\">return</span> inner</pre></td></tr><tr><td data-num=\"95\"></td><td><pre>        <span class=\"token keyword\">return</span> wapper</pre></td></tr><tr><td data-num=\"96\"></td><td><pre></pre></td></tr><tr><td data-num=\"97\"></td><td><pre><span class=\"token decorator annotation punctuation\">@dataclasses<span class=\"token punctuation\">.</span>dataclass</span></pre></td></tr><tr><td data-num=\"98\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name\">d_1</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"99\"></td><td><pre>    d_100<span class=\"token punctuation\">:</span><span class=\"token builtin\">int</span> <span class=\"token operator\">=</span> <span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"100\"></td><td><pre>    d_200<span class=\"token punctuation\">:</span><span class=\"token builtin\">str</span> <span class=\"token operator\">=</span> <span class=\"token string\">\"1\"</span></pre></td></tr><tr><td data-num=\"101\"></td><td><pre>    d_300<span class=\"token punctuation\">:</span>typing<span class=\"token punctuation\">.</span>List<span class=\"token punctuation\">[</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> dataclasses<span class=\"token punctuation\">.</span>field<span class=\"token punctuation\">(</span>default_factory<span class=\"token operator\">=</span><span class=\"token builtin\">list</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"102\"></td><td><pre>    d_400<span class=\"token punctuation\">:</span>typing<span class=\"token punctuation\">.</span>Dict<span class=\"token punctuation\">[</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">,</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> dataclasses<span class=\"token punctuation\">.</span>field<span class=\"token punctuation\">(</span>default_factory<span class=\"token operator\">=</span><span class=\"token builtin\">dict</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"103\"></td><td><pre></pre></td></tr><tr><td data-num=\"104\"></td><td><pre></pre></td></tr><tr><td data-num=\"105\"></td><td><pre>e_1 <span class=\"token operator\">=</span> collections<span class=\"token punctuation\">.</span>namedtuple<span class=\"token punctuation\">(</span><span class=\"token string\">\"e_1\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"e_100 e_200 e_300 e_400\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"106\"></td><td><pre></pre></td></tr><tr><td data-num=\"107\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name\">INFO</span><span class=\"token punctuation\">(</span>enum<span class=\"token punctuation\">.</span>IntEnum<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"108\"></td><td><pre>    m_1 <span class=\"token operator\">=</span> <span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"109\"></td><td><pre>    m_2 <span class=\"token operator\">=</span> <span class=\"token number\">2</span></pre></td></tr><tr><td data-num=\"110\"></td><td><pre>    m_3 <span class=\"token operator\">=</span> <span class=\"token number\">3</span></pre></td></tr></table></figure><ul>\n<li>修改后的代码：</li>\n</ul>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\"># -*- coding: utf8 -*-</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">import</span> ccore</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">import</span> enum</pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">import</span> functools</pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">import</span> dataclasses</pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">import</span> typing</pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token keyword\">import</span> collections</pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token comment\"># 全局变量测试</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>a_1 <span class=\"token operator\">=</span> <span class=\"token number\">2</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>a_2 <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>a_3 <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>a_4 <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span><span class=\"token number\">2</span><span class=\"token punctuation\">:</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">:</span><span class=\"token number\">2</span><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>a_5 <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token number\">3</span><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>a_6 <span class=\"token operator\">=</span> <span class=\"token number\">2.1</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>a_7 <span class=\"token operator\">=</span> <span class=\"token builtin\">object</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>a_8 <span class=\"token operator\">=</span> <span class=\"token builtin\">len</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>a_9 <span class=\"token operator\">=</span> functools<span class=\"token punctuation\">.</span>partial<span class=\"token punctuation\">(</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">,</span> a_3<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>a_10 <span class=\"token operator\">=</span> collections<span class=\"token punctuation\">.</span>defaultdict<span class=\"token punctuation\">(</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre></pre></td></tr><tr><td data-num=\"20\"></td><td><pre><span class=\"token comment\"># 函数测试</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">b_1</span><span class=\"token punctuation\">(</span>arg1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>    b_100 <span class=\"token operator\">=</span> <span class=\"token number\">3</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>    b_200 <span class=\"token operator\">=</span> <span class=\"token number\">4</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>    <span class=\"token keyword\">return</span> b_100<span class=\"token operator\">+</span>b_200</pre></td></tr><tr><td data-num=\"25\"></td><td><pre></pre></td></tr><tr><td data-num=\"26\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">b_2</span><span class=\"token punctuation\">(</span>arg1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>    <span class=\"token keyword\">return</span> arg1</pre></td></tr><tr><td data-num=\"28\"></td><td><pre></pre></td></tr><tr><td data-num=\"29\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">b_3</span><span class=\"token punctuation\">(</span>arg1<span class=\"token punctuation\">,</span> <span class=\"token operator\">*</span>args<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>    <span class=\"token keyword\">return</span> arg1 <span class=\"token operator\">+</span> <span class=\"token builtin\">sum</span><span class=\"token punctuation\">(</span>args<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre></pre></td></tr><tr><td data-num=\"32\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">b_4</span><span class=\"token punctuation\">(</span>arg1 <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">*</span>args<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>    <span class=\"token keyword\">return</span> arg1 <span class=\"token operator\">+</span> <span class=\"token builtin\">sum</span><span class=\"token punctuation\">(</span>args<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre></pre></td></tr><tr><td data-num=\"35\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">b_5</span><span class=\"token punctuation\">(</span>arg1 <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">*</span>args<span class=\"token punctuation\">,</span> <span class=\"token operator\">**</span>kwargs<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>    <span class=\"token keyword\">return</span> arg1 <span class=\"token operator\">+</span> <span class=\"token builtin\">sum</span><span class=\"token punctuation\">(</span>args<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token builtin\">sum</span><span class=\"token punctuation\">(</span>kwargs<span class=\"token punctuation\">.</span>values<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre></pre></td></tr><tr><td data-num=\"38\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">b_6</span><span class=\"token punctuation\">(</span>arg1 <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">*</span>args<span class=\"token punctuation\">,</span> arg3 <span class=\"token operator\">=</span> <span class=\"token number\">4</span><span class=\"token punctuation\">,</span> arg4 <span class=\"token operator\">=</span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>    <span class=\"token keyword\">return</span> arg1 <span class=\"token operator\">+</span> <span class=\"token builtin\">sum</span><span class=\"token punctuation\">(</span>args<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> arg3 <span class=\"token operator\">+</span> arg4</pre></td></tr><tr><td data-num=\"40\"></td><td><pre></pre></td></tr><tr><td data-num=\"41\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">b_7</span><span class=\"token punctuation\">(</span>func<span class=\"token punctuation\">,</span> arg1 <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>    <span class=\"token decorator annotation punctuation\">@functools<span class=\"token punctuation\">.</span>wraps</span><span class=\"token punctuation\">(</span>func<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>    <span class=\"token keyword\">def</span> <span class=\"token function\">inner</span><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span>args<span class=\"token punctuation\">,</span> <span class=\"token operator\">**</span>kwargs<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>        <span class=\"token keyword\">return</span> arg1 <span class=\"token operator\">+</span> func<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>    <span class=\"token keyword\">return</span> inner</pre></td></tr><tr><td data-num=\"46\"></td><td><pre></pre></td></tr><tr><td data-num=\"47\"></td><td><pre><span class=\"token decorator annotation punctuation\">@b_7</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">b_8</span><span class=\"token punctuation\">(</span>arg1 <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">*</span>args<span class=\"token punctuation\">,</span> arg3 <span class=\"token operator\">=</span> <span class=\"token number\">4</span><span class=\"token punctuation\">,</span> arg4 <span class=\"token operator\">=</span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre>    <span class=\"token keyword\">return</span> arg1 <span class=\"token operator\">+</span> <span class=\"token builtin\">sum</span><span class=\"token punctuation\">(</span>args<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> arg3 <span class=\"token operator\">+</span> arg4</pre></td></tr><tr><td data-num=\"50\"></td><td><pre></pre></td></tr><tr><td data-num=\"51\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">b_9</span><span class=\"token punctuation\">(</span>arg1 <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre>    <span class=\"token keyword\">def</span> <span class=\"token function\">wapper</span><span class=\"token punctuation\">(</span>func<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre>        <span class=\"token decorator annotation punctuation\">@functools<span class=\"token punctuation\">.</span>wraps</span><span class=\"token punctuation\">(</span>func<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre>        <span class=\"token keyword\">def</span> <span class=\"token function\">inner</span><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span>args<span class=\"token punctuation\">,</span> <span class=\"token operator\">**</span>kwargs<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"55\"></td><td><pre>            <span class=\"token keyword\">return</span> arg1<span class=\"token operator\">+</span> func<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"56\"></td><td><pre>        <span class=\"token keyword\">return</span> inner</pre></td></tr><tr><td data-num=\"57\"></td><td><pre>    <span class=\"token keyword\">return</span> wapper</pre></td></tr><tr><td data-num=\"58\"></td><td><pre></pre></td></tr><tr><td data-num=\"59\"></td><td><pre><span class=\"token decorator annotation punctuation\">@b_9</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"60\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">b_10</span><span class=\"token punctuation\">(</span>arg1 <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">*</span>args<span class=\"token punctuation\">,</span> arg3 <span class=\"token operator\">=</span> <span class=\"token number\">4</span><span class=\"token punctuation\">,</span> arg4 <span class=\"token operator\">=</span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"61\"></td><td><pre>    <span class=\"token keyword\">return</span> arg1 <span class=\"token operator\">+</span> <span class=\"token builtin\">sum</span><span class=\"token punctuation\">(</span>args<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> arg3 <span class=\"token operator\">+</span> arg4</pre></td></tr><tr><td data-num=\"62\"></td><td><pre></pre></td></tr><tr><td data-num=\"63\"></td><td><pre><span class=\"token comment\"># 类测试</span></pre></td></tr><tr><td data-num=\"64\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name\">c_1</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"65\"></td><td><pre>    c_100 <span class=\"token operator\">=</span> <span class=\"token number\">10</span></pre></td></tr><tr><td data-num=\"66\"></td><td><pre>    c_200 <span class=\"token operator\">=</span> <span class=\"token number\">20</span></pre></td></tr><tr><td data-num=\"67\"></td><td><pre></pre></td></tr><tr><td data-num=\"68\"></td><td><pre>    <span class=\"token keyword\">def</span> <span class=\"token function\">__init__</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"69\"></td><td><pre>        <span class=\"token builtin\">super</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>__init__<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"70\"></td><td><pre></pre></td></tr><tr><td data-num=\"71\"></td><td><pre>    <span class=\"token keyword\">def</span> <span class=\"token function\">__call__</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"72\"></td><td><pre>        <span class=\"token keyword\">return</span> <span class=\"token boolean\">False</span></pre></td></tr><tr><td data-num=\"73\"></td><td><pre></pre></td></tr><tr><td data-num=\"74\"></td><td><pre>    <span class=\"token keyword\">def</span> <span class=\"token function\">c_1000</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span>arg1 <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">*</span>args<span class=\"token punctuation\">,</span> arg3 <span class=\"token operator\">=</span> <span class=\"token number\">4</span><span class=\"token punctuation\">,</span> arg4 <span class=\"token operator\">=</span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"75\"></td><td><pre>        <span class=\"token keyword\">return</span> arg1 <span class=\"token operator\">+</span> <span class=\"token builtin\">sum</span><span class=\"token punctuation\">(</span>args<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> arg3 <span class=\"token operator\">+</span> arg4</pre></td></tr><tr><td data-num=\"76\"></td><td><pre></pre></td></tr><tr><td data-num=\"77\"></td><td><pre>    <span class=\"token decorator annotation punctuation\">@property</span></pre></td></tr><tr><td data-num=\"78\"></td><td><pre>    <span class=\"token keyword\">def</span> <span class=\"token function\">C_100</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"79\"></td><td><pre>        <span class=\"token keyword\">return</span> self<span class=\"token punctuation\">.</span>c_100</pre></td></tr><tr><td data-num=\"80\"></td><td><pre></pre></td></tr><tr><td data-num=\"81\"></td><td><pre>    <span class=\"token decorator annotation punctuation\">@classmethod</span></pre></td></tr><tr><td data-num=\"82\"></td><td><pre>    <span class=\"token keyword\">def</span> <span class=\"token function\">c_2000</span><span class=\"token punctuation\">(</span>cls<span class=\"token punctuation\">,</span>arg1 <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">*</span>args<span class=\"token punctuation\">,</span> arg3 <span class=\"token operator\">=</span> <span class=\"token number\">4</span><span class=\"token punctuation\">,</span> arg4 <span class=\"token operator\">=</span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"83\"></td><td><pre>        <span class=\"token keyword\">return</span> arg1 <span class=\"token operator\">+</span> <span class=\"token builtin\">sum</span><span class=\"token punctuation\">(</span>args<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> arg3 <span class=\"token operator\">+</span> arg4</pre></td></tr><tr><td data-num=\"84\"></td><td><pre></pre></td></tr><tr><td data-num=\"85\"></td><td><pre>    <span class=\"token decorator annotation punctuation\">@staticmethod</span></pre></td></tr><tr><td data-num=\"86\"></td><td><pre>    <span class=\"token keyword\">def</span> <span class=\"token function\">c_3000</span><span class=\"token punctuation\">(</span>arg1 <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">*</span>args<span class=\"token punctuation\">,</span> arg3 <span class=\"token operator\">=</span> <span class=\"token number\">4</span><span class=\"token punctuation\">,</span> arg4 <span class=\"token operator\">=</span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"87\"></td><td><pre>        <span class=\"token keyword\">return</span> arg1 <span class=\"token operator\">+</span> <span class=\"token builtin\">sum</span><span class=\"token punctuation\">(</span>args<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> arg3 <span class=\"token operator\">+</span> arg4</pre></td></tr><tr><td data-num=\"88\"></td><td><pre></pre></td></tr><tr><td data-num=\"89\"></td><td><pre>    <span class=\"token keyword\">def</span> <span class=\"token function\">c_4000</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> arg1 <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"90\"></td><td><pre>        <span class=\"token keyword\">def</span> <span class=\"token function\">wapper</span><span class=\"token punctuation\">(</span>func<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"91\"></td><td><pre>            <span class=\"token decorator annotation punctuation\">@functools<span class=\"token punctuation\">.</span>wraps</span><span class=\"token punctuation\">(</span>func<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"92\"></td><td><pre>            <span class=\"token keyword\">def</span> <span class=\"token function\">inner</span><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span>args<span class=\"token punctuation\">,</span> <span class=\"token operator\">**</span>kwargs<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"93\"></td><td><pre>                <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span></pre></td></tr><tr><td data-num=\"94\"></td><td><pre>            <span class=\"token keyword\">return</span> inner</pre></td></tr><tr><td data-num=\"95\"></td><td><pre>        <span class=\"token keyword\">return</span> wapper</pre></td></tr><tr><td data-num=\"96\"></td><td><pre></pre></td></tr><tr><td data-num=\"97\"></td><td><pre><span class=\"token decorator annotation punctuation\">@dataclasses<span class=\"token punctuation\">.</span>dataclass</span></pre></td></tr><tr><td data-num=\"98\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name\">d_1</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"99\"></td><td><pre>    d_100<span class=\"token punctuation\">:</span><span class=\"token builtin\">int</span> <span class=\"token operator\">=</span> <span class=\"token number\">2</span></pre></td></tr><tr><td data-num=\"100\"></td><td><pre>    d_200<span class=\"token punctuation\">:</span><span class=\"token builtin\">str</span> <span class=\"token operator\">=</span> <span class=\"token string\">\"2\"</span></pre></td></tr><tr><td data-num=\"101\"></td><td><pre>    d_300<span class=\"token punctuation\">:</span><span class=\"token builtin\">int</span> <span class=\"token operator\">=</span> <span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"102\"></td><td><pre>    d_400<span class=\"token punctuation\">:</span><span class=\"token builtin\">str</span> <span class=\"token operator\">=</span> <span class=\"token string\">\"1\"</span></pre></td></tr><tr><td data-num=\"103\"></td><td><pre></pre></td></tr><tr><td data-num=\"104\"></td><td><pre></pre></td></tr><tr><td data-num=\"105\"></td><td><pre>e_1 <span class=\"token operator\">=</span> collections<span class=\"token punctuation\">.</span>namedtuple<span class=\"token punctuation\">(</span><span class=\"token string\">\"e_1\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"e_100 e_200 e_300\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"106\"></td><td><pre></pre></td></tr><tr><td data-num=\"107\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name\">INFO</span><span class=\"token punctuation\">(</span>enum<span class=\"token punctuation\">.</span>IntEnum<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"108\"></td><td><pre>    m_1 <span class=\"token operator\">=</span> <span class=\"token number\">3</span></pre></td></tr><tr><td data-num=\"109\"></td><td><pre>    m_2 <span class=\"token operator\">=</span> <span class=\"token number\">2</span></pre></td></tr><tr><td data-num=\"110\"></td><td><pre>    m_3 <span class=\"token operator\">=</span> <span class=\"token number\">1</span></pre></td></tr></table></figure><ul>\n<li>测试数据初始化（1 表示热更前，2 表示热更后）</li>\n</ul>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">init_data</span><span class=\"token punctuation\">(</span>flag<span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token keyword\">import</span> collections</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    d <span class=\"token operator\">=</span> collections<span class=\"token punctuation\">.</span>OrderedDict<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    d<span class=\"token punctuation\">[</span><span class=\"token string\">\"data\"</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        <span class=\"token string\">\"a_1\"</span> <span class=\"token punctuation\">:</span> fix_module<span class=\"token punctuation\">.</span>a_1<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        <span class=\"token string\">\"a_2\"</span> <span class=\"token punctuation\">:</span> fix_module<span class=\"token punctuation\">.</span>a_2<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        <span class=\"token string\">\"a_3\"</span> <span class=\"token punctuation\">:</span> fix_module<span class=\"token punctuation\">.</span>a_3<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        <span class=\"token string\">\"a_4\"</span> <span class=\"token punctuation\">:</span> fix_module<span class=\"token punctuation\">.</span>a_4<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        <span class=\"token string\">\"a_5\"</span> <span class=\"token punctuation\">:</span> fix_module<span class=\"token punctuation\">.</span>a_5<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        <span class=\"token string\">\"a_6\"</span> <span class=\"token punctuation\">:</span> fix_module<span class=\"token punctuation\">.</span>a_6<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        <span class=\"token string\">\"a_7\"</span> <span class=\"token punctuation\">:</span> fix_module<span class=\"token punctuation\">.</span>a_7<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        <span class=\"token string\">\"a_8\"</span> <span class=\"token punctuation\">:</span> fix_module<span class=\"token punctuation\">.</span>a_8<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>        <span class=\"token string\">\"a_9\"</span> <span class=\"token punctuation\">:</span> fix_module<span class=\"token punctuation\">.</span>a_9<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>        <span class=\"token string\">\"a_10\"</span> <span class=\"token punctuation\">:</span> fix_module<span class=\"token punctuation\">.</span>a_10<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    d<span class=\"token punctuation\">[</span><span class=\"token string\">\"func\"</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>        <span class=\"token string\">\"b_1\"</span><span class=\"token punctuation\">:</span> fix_module<span class=\"token punctuation\">.</span>b_1<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>        <span class=\"token string\">\"b_2\"</span><span class=\"token punctuation\">:</span> fix_module<span class=\"token punctuation\">.</span>b_2<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>        <span class=\"token string\">\"b_3\"</span><span class=\"token punctuation\">:</span> fix_module<span class=\"token punctuation\">.</span>b_3<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>        <span class=\"token string\">\"b_4\"</span><span class=\"token punctuation\">:</span> fix_module<span class=\"token punctuation\">.</span>b_4<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>        <span class=\"token string\">\"b_5\"</span><span class=\"token punctuation\">:</span> fix_module<span class=\"token punctuation\">.</span>b_5<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>        <span class=\"token string\">\"b_6\"</span><span class=\"token punctuation\">:</span> fix_module<span class=\"token punctuation\">.</span>b_6<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>        <span class=\"token string\">\"b_7\"</span><span class=\"token punctuation\">:</span> fix_module<span class=\"token punctuation\">.</span>b_7<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>        <span class=\"token string\">\"b_8\"</span><span class=\"token punctuation\">:</span> fix_module<span class=\"token punctuation\">.</span>b_8<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>        <span class=\"token string\">\"b_9\"</span><span class=\"token punctuation\">:</span> fix_module<span class=\"token punctuation\">.</span>b_9<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>        <span class=\"token string\">\"b_10\"</span><span class=\"token punctuation\">:</span> fix_module<span class=\"token punctuation\">.</span>b_10<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>    <span class=\"token keyword\">if</span> flag <span class=\"token operator\">==</span> <span class=\"token number\">1</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>        d<span class=\"token punctuation\">[</span><span class=\"token string\">\"class\"</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>            <span class=\"token string\">\"c_1\"</span><span class=\"token punctuation\">:</span>fix_module<span class=\"token punctuation\">.</span>c_1<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>            <span class=\"token string\">\"d_1\"</span><span class=\"token punctuation\">:</span>fix_module<span class=\"token punctuation\">.</span>d_1<span class=\"token punctuation\">(</span>d_100<span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span>d_200<span class=\"token operator\">=</span><span class=\"token string\">\"1\"</span><span class=\"token punctuation\">,</span>d_300<span class=\"token operator\">=</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>d_400<span class=\"token operator\">=</span><span class=\"token punctuation\">&#123;</span><span class=\"token number\">1</span><span class=\"token punctuation\">:</span><span class=\"token number\">1</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>            <span class=\"token string\">\"e_1\"</span><span class=\"token punctuation\">:</span>fix_module<span class=\"token punctuation\">.</span>e_1<span class=\"token punctuation\">(</span>e_100 <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span>e_200 <span class=\"token operator\">=</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span>e_300 <span class=\"token operator\">=</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span>e_400 <span class=\"token operator\">=</span> <span class=\"token number\">4</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>    <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>        d<span class=\"token punctuation\">[</span><span class=\"token string\">\"class\"</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>            <span class=\"token string\">\"c_1\"</span><span class=\"token punctuation\">:</span>fix_module<span class=\"token punctuation\">.</span>c_1<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>            <span class=\"token string\">\"d_1\"</span><span class=\"token punctuation\">:</span>fix_module<span class=\"token punctuation\">.</span>d_1<span class=\"token punctuation\">(</span>d_100<span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span>d_200<span class=\"token operator\">=</span><span class=\"token string\">\"1\"</span><span class=\"token punctuation\">,</span>d_300<span class=\"token operator\">=</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span>d_400<span class=\"token operator\">=</span><span class=\"token string\">\"2\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>            <span class=\"token string\">\"e_1\"</span><span class=\"token punctuation\">:</span>fix_module<span class=\"token punctuation\">.</span>e_1<span class=\"token punctuation\">(</span>e_100 <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span>e_200 <span class=\"token operator\">=</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span>e_300 <span class=\"token operator\">=</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span>  </pre></td></tr><tr><td data-num=\"40\"></td><td><pre>    <span class=\"token keyword\">return</span> d</pre></td></tr><tr><td data-num=\"41\"></td><td><pre></pre></td></tr><tr><td data-num=\"42\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">Output</span><span class=\"token punctuation\">(</span>d<span class=\"token punctuation\">,</span> flag<span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>     </pre></td></tr><tr><td data-num=\"44\"></td><td><pre>    <span class=\"token keyword\">for</span> k<span class=\"token punctuation\">,</span>v <span class=\"token keyword\">in</span> d<span class=\"token punctuation\">[</span><span class=\"token string\">\"data\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>items<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f\" name </span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>k<span class=\"token punctuation\">&#125;</span></span><span class=\"token string\"> val </span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>v<span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">\"</span></span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>    <span class=\"token keyword\">if</span> flag <span class=\"token operator\">==</span> <span class=\"token number\">1</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>        <span class=\"token keyword\">for</span> k<span class=\"token punctuation\">,</span>v <span class=\"token keyword\">in</span> d<span class=\"token punctuation\">[</span><span class=\"token string\">\"func\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>items<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre>            <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f\" name </span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>k<span class=\"token punctuation\">&#125;</span></span><span class=\"token string\"> val </span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>v<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">\"</span></span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre>        c_1 <span class=\"token operator\">=</span> d<span class=\"token punctuation\">[</span><span class=\"token string\">\"class\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token string\">\"c_1\"</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre>        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f\"c_1.c_100 </span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>c_1<span class=\"token punctuation\">.</span>c_100<span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">\"</span></span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre>        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f\"c_1.c_200 </span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>c_1<span class=\"token punctuation\">.</span>c_200<span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">\"</span></span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre>        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f\"c_1.c_1000(1,2) </span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>c_1<span class=\"token punctuation\">.</span>c_1000<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">\"</span></span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre>        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f\"c_1.C_100 </span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>c_1<span class=\"token punctuation\">.</span>C_100<span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">\"</span></span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"55\"></td><td><pre>        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f\"c_1.c_2000(1,2) </span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>c_1<span class=\"token punctuation\">.</span>c_2000<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">\"</span></span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"56\"></td><td><pre>        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f\"c_1.c_3000(1,2) </span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>c_1<span class=\"token punctuation\">.</span>c_3000<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">\"</span></span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"57\"></td><td><pre>        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f\"c_1.c_4000(1,2) </span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>c_1<span class=\"token punctuation\">.</span>c_4000<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">\"</span></span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"58\"></td><td><pre>    <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"59\"></td><td><pre>        <span class=\"token keyword\">for</span> k<span class=\"token punctuation\">,</span>v <span class=\"token keyword\">in</span> d<span class=\"token punctuation\">[</span><span class=\"token string\">\"func\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>items<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"60\"></td><td><pre>            <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f\" name </span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>k<span class=\"token punctuation\">&#125;</span></span><span class=\"token string\"> val </span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>v<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">\"</span></span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"61\"></td><td><pre>        c_1 <span class=\"token operator\">=</span> d<span class=\"token punctuation\">[</span><span class=\"token string\">\"class\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token string\">\"c_1\"</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"62\"></td><td><pre>        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f\"c_1.c_100 </span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>c_1<span class=\"token punctuation\">.</span>c_100<span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">\"</span></span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"63\"></td><td><pre>        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f\"c_1.c_200 </span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>c_1<span class=\"token punctuation\">.</span>c_200<span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">\"</span></span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"64\"></td><td><pre>        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f\"c_1.c_1000(1) </span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>c_1<span class=\"token punctuation\">.</span>c_1000<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">\"</span></span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"65\"></td><td><pre>        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f\"c_1.C_100 </span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>c_1<span class=\"token punctuation\">.</span>C_100<span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">\"</span></span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"66\"></td><td><pre>        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f\"c_1.c_2000(1) </span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>c_1<span class=\"token punctuation\">.</span>c_2000<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">\"</span></span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"67\"></td><td><pre>        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f\"c_1.c_3000(1) </span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>c_1<span class=\"token punctuation\">.</span>c_3000<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">\"</span></span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"68\"></td><td><pre>        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f\"c_1.c_4000(1) </span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>c_1<span class=\"token punctuation\">.</span>c_4000<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">\"</span></span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"69\"></td><td><pre></pre></td></tr><tr><td data-num=\"70\"></td><td><pre>    </pre></td></tr><tr><td data-num=\"71\"></td><td><pre></pre></td></tr><tr><td data-num=\"72\"></td><td><pre>    d_1 <span class=\"token operator\">=</span> d<span class=\"token punctuation\">[</span><span class=\"token string\">\"class\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token string\">\"d_1\"</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"73\"></td><td><pre>    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f\"d_1.d_100 </span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>d_1<span class=\"token punctuation\">.</span>d_100<span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">\"</span></span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"74\"></td><td><pre>    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f\"d_1.d_200 </span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>d_1<span class=\"token punctuation\">.</span>d_200<span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">\"</span></span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"75\"></td><td><pre>    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f\"d_1.d_300 </span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>d_1<span class=\"token punctuation\">.</span>d_300<span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">\"</span></span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"76\"></td><td><pre>    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f\"d_1.d_400 </span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>d_1<span class=\"token punctuation\">.</span>d_400<span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">\"</span></span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"77\"></td><td><pre></pre></td></tr><tr><td data-num=\"78\"></td><td><pre>    e_1 <span class=\"token operator\">=</span> d<span class=\"token punctuation\">[</span><span class=\"token string\">\"class\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token string\">\"e_1\"</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"79\"></td><td><pre>    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f\"e_1.e_100 </span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>e_1<span class=\"token punctuation\">.</span>e_100<span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">\"</span></span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"80\"></td><td><pre>    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f\"e_1.e_200 </span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>e_1<span class=\"token punctuation\">.</span>e_200<span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">\"</span></span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"81\"></td><td><pre>    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f\"e_1.e_300 </span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>e_1<span class=\"token punctuation\">.</span>e_300<span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">\"</span></span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"82\"></td><td><pre>    <span class=\"token keyword\">if</span> flag <span class=\"token operator\">==</span> <span class=\"token number\">1</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"83\"></td><td><pre>        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f\"e_1.e_400 </span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>e_1<span class=\"token punctuation\">.</span>e_400<span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">\"</span></span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"84\"></td><td><pre></pre></td></tr><tr><td data-num=\"85\"></td><td><pre>    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>fix_module<span class=\"token punctuation\">.</span>INFO<span class=\"token punctuation\">.</span>m_1<span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"86\"></td><td><pre>    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>fix_module<span class=\"token punctuation\">.</span>INFO<span class=\"token punctuation\">.</span>m_2<span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"87\"></td><td><pre>    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>fix_module<span class=\"token punctuation\">.</span>INFO<span class=\"token punctuation\">.</span>m_3<span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">)</span></pre></td></tr></table></figure><ul>\n<li>最终的输出结果</li>\n</ul>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">#------------------------------------------------------- 旧模块热更前的输出：-------------------------------------------------------</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>name a_1 val <span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>name a_2 val <span class=\"token punctuation\">[</span><span class=\"token number\">1</span>, <span class=\"token number\">2</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>name a_3 val <span class=\"token punctuation\">(</span><span class=\"token number\">1</span>, <span class=\"token number\">2</span>, <span class=\"token number\">3</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>name a_4 val <span class=\"token punctuation\">&#123;</span><span class=\"token number\">1</span>: <span class=\"token number\">1</span>, <span class=\"token number\">2</span>: <span class=\"token number\">2</span><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>name a_5 val <span class=\"token punctuation\">&#123;</span><span class=\"token number\">1</span>, <span class=\"token number\">2</span>, <span class=\"token number\">3</span><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>name a_6 val <span class=\"token number\">1.1</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>name a_7 val <span class=\"token operator\">&lt;</span>class <span class=\"token string\">'object'</span><span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>name a_8 val <span class=\"token operator\">&lt;</span>built-in <span class=\"token keyword\">function</span> len<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>name a_9 val functools.partial<span class=\"token punctuation\">(</span><span class=\"token operator\">&lt;</span>built-in <span class=\"token keyword\">function</span> len<span class=\"token operator\">></span>, <span class=\"token punctuation\">[</span><span class=\"token number\">1</span>, <span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>name a_10 val defaultdict<span class=\"token punctuation\">(</span><span class=\"token operator\">&lt;</span>class <span class=\"token string\">'int'</span><span class=\"token operator\">></span>, <span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>name b_1 val <span class=\"token number\">2</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>name b_2 val <span class=\"token number\">3</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>name b_3 val <span class=\"token number\">3</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>name b_4 val <span class=\"token number\">3</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>name b_5 val <span class=\"token number\">3</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>name b_6 val <span class=\"token number\">10</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>name b_7 val <span class=\"token operator\">&lt;</span>function b_7.<span class=\"token operator\">&lt;</span>locals<span class=\"token operator\">></span>.inner at 0x000002E77A99370<span class=\"token operator\"><span class=\"token file-descriptor important\">0</span>></span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>name b_8 val <span class=\"token number\">13</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>name b_9 val <span class=\"token operator\">&lt;</span>function b_9.<span class=\"token operator\">&lt;</span>locals<span class=\"token operator\">></span>.wapper at 0x000002E77A99370<span class=\"token operator\"><span class=\"token file-descriptor important\">0</span>></span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>name b_10 val <span class=\"token number\">13</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>c_1.c_100 <span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>c_1.c_200 <span class=\"token number\">2</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>c_1.c_1000<span class=\"token punctuation\">(</span><span class=\"token number\">1,2</span><span class=\"token punctuation\">)</span> <span class=\"token number\">10</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>c_1.C_100 <span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>c_1.c_2000<span class=\"token punctuation\">(</span><span class=\"token number\">1,2</span><span class=\"token punctuation\">)</span> <span class=\"token number\">10</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>c_1.c_3000<span class=\"token punctuation\">(</span><span class=\"token number\">1,2</span><span class=\"token punctuation\">)</span> <span class=\"token number\">10</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>c_1.c_4000<span class=\"token punctuation\">(</span><span class=\"token number\">1,2</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;</span>function c_1.c_4000.<span class=\"token operator\">&lt;</span>locals<span class=\"token operator\">></span>.wapper at 0x000002E77A99370<span class=\"token operator\"><span class=\"token file-descriptor important\">0</span>></span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>d_1.d_100 <span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>d_1.d_200 <span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>d_1.d_300 <span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>d_1.d_400 <span class=\"token punctuation\">&#123;</span><span class=\"token number\">1</span>: <span class=\"token number\">1</span><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>e_1.e_100 <span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>e_1.e_200 <span class=\"token number\">2</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>e_1.e_300 <span class=\"token number\">3</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>e_1.e_400 <span class=\"token number\">4</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre><span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre><span class=\"token number\">2</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre><span class=\"token number\">3</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre><span class=\"token comment\">#------------------------------------------------------- 旧模块热更后的输出：-------------------------------------------------------</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>name a_1 val <span class=\"token number\">2</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>name a_2 val <span class=\"token punctuation\">[</span><span class=\"token number\">2</span>, <span class=\"token number\">2</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>name a_3 val <span class=\"token punctuation\">(</span><span class=\"token number\">2</span>, <span class=\"token number\">2</span>, <span class=\"token number\">3</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>name a_4 val <span class=\"token punctuation\">&#123;</span><span class=\"token number\">2</span>: <span class=\"token number\">2</span><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>name a_5 val <span class=\"token punctuation\">&#123;</span><span class=\"token number\">2</span>, <span class=\"token number\">3</span><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>name a_6 val <span class=\"token number\">2.1</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>name a_7 val <span class=\"token operator\">&lt;</span>class <span class=\"token string\">'object'</span><span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>name a_8 val <span class=\"token operator\">&lt;</span>built-in <span class=\"token keyword\">function</span> len<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre>name a_9 val functools.partial<span class=\"token punctuation\">(</span><span class=\"token operator\">&lt;</span>built-in <span class=\"token keyword\">function</span> len<span class=\"token operator\">></span>, <span class=\"token punctuation\">(</span><span class=\"token number\">2</span>, <span class=\"token number\">2</span>, <span class=\"token number\">3</span><span class=\"token punctuation\">))</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre>name a_10 val defaultdict<span class=\"token punctuation\">(</span><span class=\"token operator\">&lt;</span>class <span class=\"token string\">'str'</span><span class=\"token operator\">></span>, <span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre>name b_1 val <span class=\"token number\">7</span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre>name b_2 val <span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre>name b_3 val <span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre>name b_4 val <span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"55\"></td><td><pre>name b_5 val <span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"56\"></td><td><pre>name b_6 val <span class=\"token number\">8</span></pre></td></tr><tr><td data-num=\"57\"></td><td><pre>name b_7 val <span class=\"token operator\">&lt;</span>function b_7.<span class=\"token operator\">&lt;</span>locals<span class=\"token operator\">></span>.inner at 0x000002E77A9905E<span class=\"token operator\"><span class=\"token file-descriptor important\">0</span>></span></pre></td></tr><tr><td data-num=\"58\"></td><td><pre>name b_8 val <span class=\"token number\">9</span></pre></td></tr><tr><td data-num=\"59\"></td><td><pre>name b_9 val <span class=\"token operator\">&lt;</span>function b_9.<span class=\"token operator\">&lt;</span>locals<span class=\"token operator\">></span>.wapper at 0x000002E77A9905E<span class=\"token operator\"><span class=\"token file-descriptor important\">0</span>></span></pre></td></tr><tr><td data-num=\"60\"></td><td><pre>name b_10 val <span class=\"token number\">9</span></pre></td></tr><tr><td data-num=\"61\"></td><td><pre>c_1.c_100 <span class=\"token number\">10</span></pre></td></tr><tr><td data-num=\"62\"></td><td><pre>c_1.c_200 <span class=\"token number\">20</span></pre></td></tr><tr><td data-num=\"63\"></td><td><pre>c_1.c_1000<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token number\">8</span></pre></td></tr><tr><td data-num=\"64\"></td><td><pre>c_1.C_100 <span class=\"token number\">10</span></pre></td></tr><tr><td data-num=\"65\"></td><td><pre>c_1.c_2000<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token number\">8</span></pre></td></tr><tr><td data-num=\"66\"></td><td><pre>c_1.c_3000<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token number\">8</span></pre></td></tr><tr><td data-num=\"67\"></td><td><pre>c_1.c_4000<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;</span>function c_1.c_4000.<span class=\"token operator\">&lt;</span>locals<span class=\"token operator\">></span>.wapper at 0x000002E77A9905E<span class=\"token operator\"><span class=\"token file-descriptor important\">0</span>></span></pre></td></tr><tr><td data-num=\"68\"></td><td><pre>d_1.d_100 <span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"69\"></td><td><pre>d_1.d_200 <span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"70\"></td><td><pre>d_1.d_300 <span class=\"token number\">2</span></pre></td></tr><tr><td data-num=\"71\"></td><td><pre>d_1.d_400 <span class=\"token number\">2</span></pre></td></tr><tr><td data-num=\"72\"></td><td><pre>e_1.e_100 <span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"73\"></td><td><pre>e_1.e_200 <span class=\"token number\">2</span></pre></td></tr><tr><td data-num=\"74\"></td><td><pre>e_1.e_300 <span class=\"token number\">3</span></pre></td></tr><tr><td data-num=\"75\"></td><td><pre><span class=\"token number\">3</span></pre></td></tr><tr><td data-num=\"76\"></td><td><pre><span class=\"token number\">2</span></pre></td></tr><tr><td data-num=\"77\"></td><td><pre><span class=\"token number\">1</span></pre></td></tr></table></figure>",
            "tags": [
                "计算机科学",
                "学习笔记",
                "Python",
                "Python",
                "热更新"
            ]
        },
        {
            "id": "https://allengx.gitee.io/computer-science/study/python/Python-watchdog/",
            "url": "https://allengx.gitee.io/computer-science/study/python/Python-watchdog/",
            "title": "基于 watchdog 实现自动化更新",
            "date_published": "2020-10-17T07:36:15.000Z",
            "content_html": "<div class=\"note info\">\n<p>以下为个人学习笔记整理</p>\n</div>\n<h1 id=\"基于-watchdog-实现自动化更新\"><a class=\"anchor\" href=\"#基于-watchdog-实现自动化更新\">#</a> 基于 watchdog 实现自动化更新</h1>\n<h2 id=\"背景\"><a class=\"anchor\" href=\"#背景\">#</a> 背景：</h2>\n<p>每次修改 Python 后为了不重启服务器进行调试，需要手动执行一个指令来指定需要热更的文件，有时候会比较麻烦。为此写了一个自动识别文件修改的工具，可以实时监听文件的修改并自动执行热更操作。</p>\n<h2 id=\"原理\"><a class=\"anchor\" href=\"#原理\">#</a> 原理：</h2>\n<ol>\n<li>基于 watchdog 监听某个文件下的文件</li>\n<li>发现文件修改后触发相应的 Event。</li>\n<li>根据 Event 内容生成热更指令，写入热更文件。</li>\n<li>热更程序定时读取文件，执行热更指令，并清空文件。</li>\n</ol>\n<h2 id=\"核心代码\"><a class=\"anchor\" href=\"#核心代码\">#</a> 核心代码：</h2>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\"># -*- coding: utf8 -*-</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token comment\"># DATE: 2020/10/16 Fri</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">import</span> sys</pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">import</span> time</pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">import</span> logging</pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">from</span> watchdog<span class=\"token punctuation\">.</span>observers <span class=\"token keyword\">import</span> Observer</pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token keyword\">from</span> watchdog<span class=\"token punctuation\">.</span>events <span class=\"token keyword\">import</span> LoggingEventHandler</pre></td></tr><tr><td data-num=\"8\"></td><td><pre></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name\">EventHandler</span><span class=\"token punctuation\">(</span>LoggingEventHandler<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token keyword\">def</span> <span class=\"token function\">on_modified</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> event<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f\"</span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>event<span class=\"token punctuation\">.</span>src_path<span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">\"</span></span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>        </pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token keyword\">if</span> __name__ <span class=\"token operator\">==</span> <span class=\"token string\">\"__main__\"</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    event_handler <span class=\"token operator\">=</span> EventHandler<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    observer <span class=\"token operator\">=</span> Observer<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    observer<span class=\"token punctuation\">.</span>schedule<span class=\"token punctuation\">(</span>event_handler<span class=\"token punctuation\">,</span> path<span class=\"token operator\">=</span><span class=\"token string\">\"./\"</span><span class=\"token punctuation\">,</span> recursive<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    observer<span class=\"token punctuation\">.</span>start<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>    <span class=\"token keyword\">try</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>        <span class=\"token keyword\">while</span> <span class=\"token boolean\">True</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>            time<span class=\"token punctuation\">.</span>sleep<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>    <span class=\"token keyword\">except</span> KeyboardInterrupt<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>        observer<span class=\"token punctuation\">.</span>stop<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>    observer<span class=\"token punctuation\">.</span>join<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h2 id=\"代码实现\"><a class=\"anchor\" href=\"#代码实现\">#</a> 代码实现：</h2>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\"># -*- coding: utf8 -*-</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token comment\"># DATE: 2020/10/16 Fri</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">import</span> os</pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">import</span> time</pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">import</span> enum</pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">import</span> json</pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token keyword\">from</span> watchdog<span class=\"token punctuation\">.</span>observers <span class=\"token keyword\">import</span> Observer</pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token keyword\">from</span> watchdog<span class=\"token punctuation\">.</span>events <span class=\"token keyword\">import</span> FileSystemEventHandler</pre></td></tr><tr><td data-num=\"9\"></td><td><pre></pre></td></tr><tr><td data-num=\"10\"></td><td><pre></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name\">EventType</span><span class=\"token punctuation\">(</span>enum<span class=\"token punctuation\">.</span>IntEnum<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>\tUPDATE <span class=\"token operator\">=</span> <span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre></pre></td></tr><tr><td data-num=\"14\"></td><td><pre></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name\">FilterPath</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>\t<span class=\"token keyword\">def</span> <span class=\"token function\">__init__</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>\t\tself<span class=\"token punctuation\">.</span>_paths <span class=\"token operator\">=</span> WatchDog<span class=\"token punctuation\">.</span>get_json_info<span class=\"token punctuation\">(</span><span class=\"token string\">\"listen_path\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>\t<span class=\"token keyword\">def</span> <span class=\"token function\">__call__</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> path<span class=\"token punctuation\">:</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>\t\t<span class=\"token keyword\">for</span> _path <span class=\"token keyword\">in</span> self<span class=\"token punctuation\">.</span>_paths<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>\t\t\t<span class=\"token keyword\">if</span> path<span class=\"token punctuation\">.</span>startswith<span class=\"token punctuation\">(</span>_path<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>\t\t\t\t<span class=\"token keyword\">return</span> <span class=\"token boolean\">True</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>\t\t<span class=\"token keyword\">return</span> <span class=\"token boolean\">False</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre></pre></td></tr><tr><td data-num=\"25\"></td><td><pre></pre></td></tr><tr><td data-num=\"26\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name\">FilterFile</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>\t<span class=\"token keyword\">def</span> <span class=\"token function\">__init__</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>\t\tself<span class=\"token punctuation\">.</span>_files <span class=\"token operator\">=</span> WatchDog<span class=\"token punctuation\">.</span>get_json_info<span class=\"token punctuation\">(</span><span class=\"token string\">\"listen_file_ext\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>\t<span class=\"token keyword\">def</span> <span class=\"token function\">__call__</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> path<span class=\"token punctuation\">:</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>\t\t_<span class=\"token punctuation\">,</span> ext <span class=\"token operator\">=</span> os<span class=\"token punctuation\">.</span>path<span class=\"token punctuation\">.</span>splitext<span class=\"token punctuation\">(</span>path<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>\t\t<span class=\"token keyword\">if</span> ext <span class=\"token keyword\">not</span> <span class=\"token keyword\">in</span> self<span class=\"token punctuation\">.</span>_files<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>\t\t\t<span class=\"token keyword\">return</span> <span class=\"token boolean\">False</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>\t\t<span class=\"token keyword\">return</span> <span class=\"token boolean\">True</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre></pre></td></tr><tr><td data-num=\"36\"></td><td><pre></pre></td></tr><tr><td data-num=\"37\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name\">CmdConverter</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>\t<span class=\"token keyword\">def</span> <span class=\"token function\">__init__</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>\t\tself<span class=\"token punctuation\">.</span>root_path <span class=\"token operator\">=</span> WatchDog<span class=\"token punctuation\">.</span>get_json_info<span class=\"token punctuation\">(</span><span class=\"token string\">\"converter_root\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>\t\tself<span class=\"token punctuation\">.</span>_replaces <span class=\"token operator\">=</span> WatchDog<span class=\"token punctuation\">.</span>get_json_info<span class=\"token punctuation\">(</span><span class=\"token string\">\"replace_char\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>\t\tself<span class=\"token punctuation\">.</span>_cmd_format <span class=\"token operator\">=</span> WatchDog<span class=\"token punctuation\">.</span>get_json_info<span class=\"token punctuation\">(</span><span class=\"token string\">\"cmd_format\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>\t<span class=\"token keyword\">def</span> <span class=\"token function\">__call__</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> event_type<span class=\"token punctuation\">:</span> EventType<span class=\"token punctuation\">,</span> path<span class=\"token punctuation\">:</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>\t\t<span class=\"token keyword\">if</span> <span class=\"token keyword\">not</span> path<span class=\"token punctuation\">.</span>startswith<span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>root_path<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>\t\t\t<span class=\"token keyword\">return</span> <span class=\"token string\">\"\"</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>\t\tpath <span class=\"token operator\">=</span> path<span class=\"token punctuation\">[</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>root_path<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>\t\t<span class=\"token keyword\">for</span> _replace <span class=\"token keyword\">in</span> self<span class=\"token punctuation\">.</span>_replaces<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>\t\t\tpath <span class=\"token operator\">=</span> path<span class=\"token punctuation\">.</span>replace<span class=\"token punctuation\">(</span>_replace<span class=\"token punctuation\">,</span> <span class=\"token string\">\".\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre></pre></td></tr><tr><td data-num=\"50\"></td><td><pre>\t\t<span class=\"token keyword\">if</span> event_type <span class=\"token operator\">==</span> EventType<span class=\"token punctuation\">.</span>UPDATE<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre>\t\t\t<span class=\"token keyword\">return</span> self<span class=\"token punctuation\">.</span>_cmd_format<span class=\"token punctuation\">.</span><span class=\"token builtin\">format</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"update\"</span><span class=\"token punctuation\">,</span> path<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre>\t\t<span class=\"token keyword\">return</span> <span class=\"token string\">\"\"</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre></pre></td></tr><tr><td data-num=\"54\"></td><td><pre></pre></td></tr><tr><td data-num=\"55\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name\">FileWriter</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"56\"></td><td><pre>\t<span class=\"token keyword\">def</span> <span class=\"token function\">__init__</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"57\"></td><td><pre>\t\tself<span class=\"token punctuation\">.</span>write_path <span class=\"token operator\">=</span> WatchDog<span class=\"token punctuation\">.</span>get_json_info<span class=\"token punctuation\">(</span><span class=\"token string\">\"update_path\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"58\"></td><td><pre></pre></td></tr><tr><td data-num=\"59\"></td><td><pre>\t<span class=\"token keyword\">def</span> <span class=\"token function\">write_to_file</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> content<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"60\"></td><td><pre>\t\t<span class=\"token keyword\">try</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"61\"></td><td><pre>\t\t\t<span class=\"token keyword\">with</span> <span class=\"token builtin\">open</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>write_path<span class=\"token punctuation\">,</span> <span class=\"token string\">\"a\"</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> f<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"62\"></td><td><pre>\t\t\t\tf<span class=\"token punctuation\">.</span>writelines<span class=\"token punctuation\">(</span>content<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"63\"></td><td><pre>\t\t<span class=\"token keyword\">except</span> Exception <span class=\"token keyword\">as</span> e<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"64\"></td><td><pre>\t\t\t<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"65\"></td><td><pre></pre></td></tr><tr><td data-num=\"66\"></td><td><pre></pre></td></tr><tr><td data-num=\"67\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name\">AutoUpdateHandler</span><span class=\"token punctuation\">(</span>FileSystemEventHandler<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"68\"></td><td><pre>\t<span class=\"token keyword\">def</span> <span class=\"token function\">__init__</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"69\"></td><td><pre>\t\tself<span class=\"token punctuation\">.</span>_filters <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>FilterPath<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> FilterFile<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"70\"></td><td><pre>\t\tself<span class=\"token punctuation\">.</span>_converter <span class=\"token operator\">=</span> CmdConverter<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"71\"></td><td><pre>\t\tself<span class=\"token punctuation\">.</span>_writer <span class=\"token operator\">=</span> FileWriter<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"72\"></td><td><pre></pre></td></tr><tr><td data-num=\"73\"></td><td><pre>\t<span class=\"token keyword\">def</span> <span class=\"token function\">on_modified</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> event<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"74\"></td><td><pre>\t\t<span class=\"token keyword\">for</span> _filter <span class=\"token keyword\">in</span> self<span class=\"token punctuation\">.</span>_filters<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"75\"></td><td><pre>\t\t\t<span class=\"token keyword\">if</span> <span class=\"token keyword\">not</span> _filter<span class=\"token punctuation\">(</span>event<span class=\"token punctuation\">.</span>src_path<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"76\"></td><td><pre>\t\t\t\t<span class=\"token keyword\">return</span></pre></td></tr><tr><td data-num=\"77\"></td><td><pre>\t\tcmd <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>_converter<span class=\"token punctuation\">(</span>EventType<span class=\"token punctuation\">.</span>UPDATE<span class=\"token punctuation\">,</span> event<span class=\"token punctuation\">.</span>src_path<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"78\"></td><td><pre>\t\tself<span class=\"token punctuation\">.</span>_writer<span class=\"token punctuation\">.</span>write_to_file<span class=\"token punctuation\">(</span>cmd<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"79\"></td><td><pre>\t\t<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f'cmd:</span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>cmd<span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">'</span></span><span class=\"token punctuation\">,</span> end<span class=\"token operator\">=</span><span class=\"token string\">''</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"80\"></td><td><pre></pre></td></tr><tr><td data-num=\"81\"></td><td><pre></pre></td></tr><tr><td data-num=\"82\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name\">WatchDog</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"83\"></td><td><pre></pre></td></tr><tr><td data-num=\"84\"></td><td><pre>\tjson_info <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"85\"></td><td><pre>\tvalid_init <span class=\"token operator\">=</span> <span class=\"token boolean\">False</span></pre></td></tr><tr><td data-num=\"86\"></td><td><pre></pre></td></tr><tr><td data-num=\"87\"></td><td><pre>\t<span class=\"token decorator annotation punctuation\">@classmethod</span></pre></td></tr><tr><td data-num=\"88\"></td><td><pre>\t<span class=\"token keyword\">def</span> <span class=\"token function\">init</span><span class=\"token punctuation\">(</span>cls<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"89\"></td><td><pre>\t\t<span class=\"token keyword\">if</span> cls<span class=\"token punctuation\">.</span>valid_init<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"90\"></td><td><pre>\t\t\t<span class=\"token keyword\">return</span></pre></td></tr><tr><td data-num=\"91\"></td><td><pre>\t\t<span class=\"token keyword\">try</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"92\"></td><td><pre>\t\t\t<span class=\"token keyword\">with</span> <span class=\"token builtin\">open</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"./config.json\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"r\"</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> f<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"93\"></td><td><pre>\t\t\t\tcls<span class=\"token punctuation\">.</span>json_info <span class=\"token operator\">=</span> json<span class=\"token punctuation\">.</span>load<span class=\"token punctuation\">(</span>f<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"94\"></td><td><pre>\t\t\tcls<span class=\"token punctuation\">.</span>valid_init <span class=\"token operator\">=</span> <span class=\"token boolean\">True</span></pre></td></tr><tr><td data-num=\"95\"></td><td><pre>\t\t<span class=\"token keyword\">except</span> Exception<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"96\"></td><td><pre>\t\t\t<span class=\"token keyword\">pass</span></pre></td></tr><tr><td data-num=\"97\"></td><td><pre></pre></td></tr><tr><td data-num=\"98\"></td><td><pre>\t<span class=\"token decorator annotation punctuation\">@classmethod</span></pre></td></tr><tr><td data-num=\"99\"></td><td><pre>\t<span class=\"token keyword\">def</span> <span class=\"token function\">get_json_info</span><span class=\"token punctuation\">(</span>cls<span class=\"token punctuation\">,</span> key<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"100\"></td><td><pre>\t\t<span class=\"token keyword\">if</span> <span class=\"token keyword\">not</span> cls<span class=\"token punctuation\">.</span>valid_init<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"101\"></td><td><pre>\t\t\tcls<span class=\"token punctuation\">.</span>init<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"102\"></td><td><pre>\t\t<span class=\"token keyword\">return</span> cls<span class=\"token punctuation\">.</span>json_info<span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span>key<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"103\"></td><td><pre></pre></td></tr><tr><td data-num=\"104\"></td><td><pre>\t<span class=\"token decorator annotation punctuation\">@classmethod</span></pre></td></tr><tr><td data-num=\"105\"></td><td><pre>\t<span class=\"token keyword\">def</span> <span class=\"token function\">listen_change</span><span class=\"token punctuation\">(</span>cls<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"106\"></td><td><pre>\t\tobserver <span class=\"token operator\">=</span> Observer<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"107\"></td><td><pre>\t\tobserver<span class=\"token punctuation\">.</span>schedule<span class=\"token punctuation\">(</span>AutoUpdateHandler<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> path<span class=\"token operator\">=</span>cls<span class=\"token punctuation\">.</span>get_json_info<span class=\"token punctuation\">(</span><span class=\"token string\">\"root_path\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> recursive<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"108\"></td><td><pre>\t\tobserver<span class=\"token punctuation\">.</span>start<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"109\"></td><td><pre>\t\t<span class=\"token keyword\">try</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"110\"></td><td><pre>\t\t\t<span class=\"token keyword\">while</span> <span class=\"token boolean\">True</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"111\"></td><td><pre>\t\t\t\ttime<span class=\"token punctuation\">.</span>sleep<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"112\"></td><td><pre>\t\t<span class=\"token keyword\">except</span> KeyboardInterrupt<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"113\"></td><td><pre>\t\t\tobserver<span class=\"token punctuation\">.</span>stop<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"114\"></td><td><pre>\t\tobserver<span class=\"token punctuation\">.</span>join<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"115\"></td><td><pre></pre></td></tr><tr><td data-num=\"116\"></td><td><pre></pre></td></tr><tr><td data-num=\"117\"></td><td><pre><span class=\"token keyword\">if</span> __name__ <span class=\"token operator\">==</span> <span class=\"token string\">\"__main__\"</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"118\"></td><td><pre>\tWatchDog<span class=\"token punctuation\">.</span>init<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"119\"></td><td><pre>\tWatchDog<span class=\"token punctuation\">.</span>listen_change<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p>部分路径参数抽离到了  <code>config.json</code>  文件内：</p>\n<figure class=\"highlight json\"><figcaption data-lang=\"JSON\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token property\">\"root_path\"</span><span class=\"token operator\">:</span><span class=\"token string\">\"/root\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token property\">\"listen_path\"</span><span class=\"token operator\">:</span><span class=\"token punctuation\">[</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>        <span class=\"token string\">\"/root/xxxx\"</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        <span class=\"token comment\">// 需要监听的文件目录，有些文件可以忽略修改，在这里进行定制</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token property\">\"listen_file_ext\"</span><span class=\"token operator\">:</span><span class=\"token punctuation\">[</span><span class=\"token string\">\".py\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// 监听文件后缀</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token property\">\"update_path\"</span><span class=\"token operator\">:</span><span class=\"token string\">\"需要写入的 update 文件，该文件会被热更程序定时读取\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token property\">\"converter_root\"</span><span class=\"token operator\">:</span><span class=\"token string\">\"用于转换更新指令的路径 例如监听路径是 /root/ 修改文件是 /root/code/Python/test.py 而热更指令可能是 update Python.test.py, 所以这里应该填 /root/code/ 用于进行路径转换\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token property\">\"cmd_format\"</span><span class=\"token operator\">:</span><span class=\"token string\">\"&#123;0&#125; &#123;1&#125;\\n\"</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// 热更指令，例如：update Python.test.py</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token property\">\"replace_char\"</span><span class=\"token operator\">:</span><span class=\"token punctuation\">[</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        <span class=\"token string\">\"/\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>        <span class=\"token string\">\"\\\\\"</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    <span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>参考内容：</p>\n<ul>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL2dvcmFraGFyZ29zaC93YXRjaGRvZw==\">watchdog github 源码</span></li>\n</ul>\n",
            "tags": [
                "计算机科学",
                "学习笔记",
                "Python",
                "Python",
                "watchdog"
            ]
        }
    ]
}